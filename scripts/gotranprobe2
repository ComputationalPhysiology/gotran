#!/usr/bin/env python
# -*- coding: utf-8 -*-

__author__ = "Johan Hake (hake.dev@gmail.com)"
__date__ = "2013-05-07 -- 2014-01-21"
__copyright__ = "Copyright (C) 2013 " + __author__
__license__  = "GNU LGPL Version 3.0 or later"

from gotran import *
from gotran.model.loadmodel2 import load_ode

def main(filename, params):

    set_log_level(WARNING)
    ode = load_ode(filename)
    set_log_level(INFO)

    print "Information of '{0}' Gotran model".format(ode.name)
    
    if params.flat_view:
        print "  States:        ", ", ".join(state.name for state in ode.full_states)
        print "  Parameters:    ", ", ".join(param.name for param in ode.parameters)
        print "  Intermediates: ", ", ".join(interm.name for interm in ode.intermediates)
    else:
        for comp in ode.components:
            if comp.states or comp.parameters or comp.intermediates:
                print "\n  {0}:".format(comp.name)
                if comp.full_states:
                    print "    States:        ", ", ".join(\
                        state.name for state in comp.full_states)
                if comp.parameters:
                    print "    Parameters:    ", ", ".join(\
                        param.name for param in comp.parameters)
                if comp.intermediates:
                    print "    Intermediates: ", ", ".join(\
                        interm.name for interm in comp.intermediates)

if __name__ == "__main__":
    import sys, os
    from modelparameters.parameterdict import *
    
    params = ParameterDict(\
        flat_view = Param(True, description="List all objects in a flat view"),\
        )
    params.parse_args(usage="usage: %prog FILE [options]")
    
    if len(sys.argv) < 2:
        raise RuntimeError("Expected a single gotran file argument")

    if not os.path.isfile(sys.argv[1]):
        raise IOError("Expected the argument to be a file")
	 
    file_name = sys.argv[1]
    main(file_name, params)
