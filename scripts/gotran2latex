#!/usr/bin/env python

from gotran.codegeneration import LatexCodeGenerator, _default_params
from gotran.model import load_ode
from gotran import info

def main(filename, params):
    """
    Create LaTeX code from a gotran model
    """

    # Load Gotran model
    ode = load_ode(filename)

    # Check for completeness
    # TODO: Should raise a more descriptive exception?
    if not ode.is_complete:
        raise Exception('Incomplete ODE')

    # Create a gotran -> LaTeX document generator
    gen = LatexCodeGenerator(ode, params)

    info("")
    info("Generating LaTeX files for the {0} ode...".format(ode.name))
    open(gen.output_file, "w").write(gen.generate())
    info("  done.")


if __name__ == '__main__':
    import os
    import sys

    params = _default_params()
    params.parse_args(usage="usage: %prog FILE [options]")

    if len(sys.argv) < 2:
        raise RuntimeError("Expected a single gotran file argument")

    if not os.path.isfile(sys.argv[1]):
        raise IOError("Expected the argument to be a file")

    filename = sys.argv[1]
    main(filename, params)
