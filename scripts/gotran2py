#!/usr/bin/env python

import os

from gotran.model.loadmodel2 import load_ode
from gotran.codegeneration.codegenerator2 import PythonCodeGenerator
from gotran.common.options import parameters
from gotran.common import error

def main(filename, params):
    """
    Create a c header file from a gotran model
    """

    # Load Gotran model
    ode = load_ode(filename)

    # Create a C code generator
    gen = PythonCodeGenerator(params)

    output = params.output

    if output:
        if not(len(output)>2 and output[-2:] == ".py"):
            output += ".py"
    else:
        output = filename.replace(".ode", "")+".py"

    f = open(output, "w")

    f.write(gen.module_code(ode))

if __name__ == "__main__":
    import sys, os
    from modelparameters.parameterdict import *

    generation_params=parameters.generation.copy()
    
    params = ParameterDict(\
        output = Param("", description="Specify output file name"),\
        **generation_params)
    params.parse_args(usage="usage: %prog FILE [options]")#sys.argv[2:])
    
    if len(sys.argv) < 2:
        raise RuntimeError("Expected a single gotran file argument")

    if not os.path.isfile(sys.argv[1]):
        raise IOError("Expected the argument to be a file")
	 
    file_name = sys.argv[1]
    main(file_name, params)
