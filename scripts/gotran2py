#!/usr/bin/env python

import os

from gotran.codegeneration.oderepresentation import ODERepresentation, \
     _default_params
from gotran.codegeneration.codegenerator import CodeGenerator
from gotran.model import load_ode

def main(filename, parameters):
    """
    Create a beat cell model from a gotran model
    """

    # Load Gotran model
    ode = load_ode(filename)

    # Check for completness
    if ode.is_complete:
        return 

    # Create an ODE representation
    oderepr = ODERepresentation(ode, **parameters)

    # Create a Beat Cell model code generator
    gen = CodeGenerator(oderepr)

    f = open(filename.replace(".ode", "")+".py", "w")
    f.write("# Gotran generated code for: " + ode.name + "\n\n")
    f.write(gen.init_states_code() + "\n\n")
    f.write(gen.init_param_code() + "\n\n")
    f.write(gen.dy_code() + "\n\n")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) < 2:
        raise RuntimeError("Expected a gotran file argument")
	 
    parameters = _default_params()
    filename = sys.argv[-1]
    if filename not in ["--help", "-h"] and not (os.path.isfile(filename) \
                                    or os.path.isfile(filename+".ode")):
        raise IOError("{0} is not a gotran file.".format(filename))
        
    if filename in ["--help", "-h"]:
        parameters.parse_args(sys.argv[1:])
    if len(sys.argv) > 2:
        print sys.argv[1:-1]
        parameters.parse_args(sys.argv[1:-1])

    print parameters

    main(filename, parameters.copy(True))
