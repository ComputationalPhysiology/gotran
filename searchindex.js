Search.setIndex({"docnames": ["gotran", "gotran.algorithms", "gotran.codegeneration", "gotran.common", "gotran.input", "gotran.model", "gotran.scripts", "gotran.solver", "index", "modules"], "filenames": ["gotran.rst", "gotran.algorithms.rst", "gotran.codegeneration.rst", "gotran.common.rst", "gotran.input.rst", "gotran.model.rst", "gotran.scripts.rst", "gotran.solver.rst", "index.rst", "modules.rst"], "titles": ["gotran package", "gotran.algorithms package", "gotran.codegeneration package", "gotran.common package", "gotran.input package", "gotran.model package", "gotran.scripts package", "gotran.solver package", "Gotran - General ODE TRAnslator", "gotran"], "terms": {"algorithm": [0, 2, 9], "submodul": [0, 9], "symbolicnewtonsolut": [0, 9], "codegener": [0, 9], "algorithmcompon": [0, 9], "commonsubexpressionod": [0, 2, 9], "factorizedjacobiancompon": [0, 2, 9], "forwardbackwardsubstitutioncompon": [0, 2, 9], "jacobianactioncompon": [0, 2, 9], "jacobiancompon": [0, 2, 9], "linearizedderivativecompon": [0, 2, 9], "componentwise_deriv": [0, 2, 9], "diagonal_jacobian_action_express": [0, 2, 9], "diagonal_jacobian_express": [0, 2, 9], "factorized_jacobian_express": [0, 2, 9], "forward_backward_subst_express": [0, 2, 9], "jacobian_action_express": [0, 2, 9], "jacobian_express": [0, 2, 9], "linearized_deriv": [0, 2, 9], "monitored_express": [0, 2, 9], "rhs_express": [0, 2, 9], "avoidsympycontract": [0, 9], "codecompon": [0, 9], "add_indexed_express": [0, 2, 9], "add_indexed_object": [0, 2, 9], "default_paramet": [0, 2, 4, 5, 9], "indexed_object": [0, 2, 9], "ccodegener": [0, 2, 9], "arg": [0, 2, 3, 5, 9], "closure_end": [0, 2, 9], "closure_start": [0, 2, 9], "comment": [0, 2, 5, 9], "componentwise_cod": [0, 2, 9], "float_typ": [0, 2, 9], "function_cod": [0, 2, 9], "indent": [0, 2, 9], "indent_str": [0, 2, 9], "index": [0, 2, 5, 8, 9], "init_parameters_cod": [0, 2, 9], "init_states_cod": [0, 2, 9], "languag": [0, 2, 9], "line_cont": [0, 2, 9], "line_end": [0, 2, 9], "mass_matrix": [0, 2, 5, 9], "module_cod": [0, 2, 9], "monitor_name_to_index_cod": [0, 2, 9], "monitored_enum_cod": [0, 2, 9], "obj_nam": [0, 2, 9], "param_name_to_index_cod": [0, 2, 9], "parameters_enum_cod": [0, 2, 9], "state_name_to_index_cod": [0, 2, 9], "states_enum_cod": [0, 2, 9], "to_cod": [0, 2, 9], "wrap_body_with_function_prototyp": [0, 2, 9], "cudacodegener": [0, 2, 9], "field_parameters_setter_cod": [0, 2, 9], "field_states_getter_cod": [0, 2, 9], "field_states_setter_cod": [0, 2, 9], "init_field_parameters_cod": [0, 2, 9], "solver_cod": [0, 2, 9], "cppcodegener": [0, 2, 9], "class_cod": [0, 2, 9], "juliacodegener": [0, 2, 9], "matlabcodegener": [0, 2, 9], "code_dict": [0, 2, 9], "monitored_names_cod": [0, 2, 9], "pythoncodegener": [0, 2, 9], "decor": [0, 2, 9], "parameter_names_list_cod": [0, 2, 9], "state_names_list_cod": [0, 2, 9], "class_nam": [0, 2, 9], "compilemodul": [0, 9], "compile_modul": [0, 2], "latexcodegener": [0, 9], "format_component_label": [0, 2, 9], "format_descript": [0, 2, 9], "format_expr": [0, 2, 9], "format_global_opt": [0, 2, 9], "format_opt": [0, 2, 9], "format_packag": [0, 2, 9], "format_param_table_row": [0, 2, 9], "format_state_table_row": [0, 2, 9], "format_unit": [0, 2, 9], "gener": [0, 2, 4, 9], "generate_compon": [0, 2, 9], "generate_parameter_t": [0, 2, 9], "generate_state_t": [0, 2, 9], "print_set": [0, 2, 9], "oderepresent": [0, 9], "iter_componentwise_di": [0, 2], "iter_derivative_expr": [0, 2], "iter_dy_bodi": [0, 2], "iter_jacobian_action_bodi": [0, 2], "iter_jacobian_action_expr": [0, 2], "iter_jacobian_bodi": [0, 2], "iter_jacobian_expr": [0, 2], "iter_linerized_bodi": [0, 2], "iter_linerized_expr": [0, 2], "iter_monitored_bodi": [0, 2], "iter_monitored_expr": [0, 2], "name": [0, 2, 3, 4, 5, 9], "set_parameter_prefix": [0, 2], "set_state_prefix": [0, 2], "signatur": [0, 2, 5, 9], "sub": [0, 2, 5], "symbol_sub": [0, 2], "update_index": [0, 2], "used_in_linear_di": [0, 2], "used_in_monitor": [0, 2], "used_in_single_di": [0, 2], "solvercompon": [0, 9], "expliciteul": [0, 2], "generalizedrushlarsen": [0, 2], "hybridgeneralizedrushlarsen": [0, 2], "rushlarsen": [0, 2], "simplifiedimpliciteul": [0, 2], "explicit_euler_solv": [0, 2], "generalized_rush_larsen_solv": [0, 2], "get_solver_fn": [0, 2], "hybrid_generalized_rush_larsen_solv": [0, 2], "rush_larsen_solv": [0, 2], "simplified_implicit_euler_solv": [0, 2], "sympy_cs": [0, 9], "has_cppyi": [0, 2], "common": [0, 2, 9], "dict": [0, 2, 4, 5, 9], "adict": [0, 3], "copi": [0, 3], "odict": [0, 3], "clear": [0, 3], "item": [0, 3, 4, 5], "iteritem": [0, 3], "iterkei": [0, 3], "itervalu": [0, 3], "kei": [0, 3, 5], "pop": [0, 3, 5], "popitem": [0, 3], "setdefault": [0, 3], "updat": [0, 3, 5, 9], "valu": [0, 2, 3, 5, 9], "disk": [0, 9], "load": [0, 3, 5, 8], "present_time_str": [0, 3], "save": [0, 3, 5, 9], "option": [0, 2, 4, 5, 6, 9], "gotranexcept": [0, 3, 9], "input": [0, 9], "cellml": [0, 8, 9], "cellmlpars": [0, 4, 9], "check_and_register_component_vari": [0, 4, 9], "get_iter": [0, 4, 9], "get_par": [0, 4, 9], "parse_compon": [0, 4, 9], "parse_connect": [0, 4, 9], "parse_document": [0, 4, 9], "parse_imported_model": [0, 4, 9], "parse_single_compon": [0, 4, 9], "parse_unit": [0, 4, 9], "sort_compon": [0, 4, 9], "to_gotran": [0, 4, 9], "cellml2od": [0, 4, 9], "mathml": [0, 9], "mathmlbasepars": [0, 4], "pars": [0, 4], "use_parenthesi": [0, 4], "mathmlcpppars": [0, 4], "model": [0, 2, 4, 6, 8, 9], "cellmodel": [0, 9], "express": [0, 2, 9], "algebraicexpress": [0, 5, 9], "derivativeexpress": [0, 5, 9], "dep_var": [0, 5, 9], "der_expr": [0, 5, 9], "depend": [0, 2, 5, 8, 9], "expr": [0, 2, 5, 9], "is_state_express": [0, 5, 9], "replace_expr": [0, 5, 9], "sym": [0, 5, 9], "indexedexpress": [0, 5, 9], "intermedi": [0, 2, 5, 9], "parameterindexedexpress": [0, 5], "rateexpress": [0, 5, 9], "state": [0, 2, 4, 5, 9], "statederiv": [0, 5, 9], "stateexpress": [0, 5, 9], "stateindexedexpress": [0, 5], "statesolut": [0, 5, 9], "recreate_express": [0, 5, 9], "loadmodel": [0, 9], "exec_od": [0, 5, 9], "load_od": [0, 5, 9], "od": [0, 1, 2, 4, 9], "component_nam": [0, 5, 9], "expanded_express": [0, 5, 9], "extract_compon": [0, 5, 9], "final": [0, 2, 5, 9], "import_od": [0, 5, 9], "intermediate_symbol": [0, 5, 9], "is_da": [0, 5, 9], "n": [0, 2, 5, 9], "parameter_symbol": [0, 5, 9], "parameter_valu": [0, 5, 9], "present_compon": [0, 5, 9], "register_ode_object": [0, 5, 9], "state_symbol": [0, 5, 9], "state_valu": [0, 5, 9], "odecompon": [0, 2, 9], "add_algebra": [0, 5, 9], "add_com": [0, 5, 9], "add_compon": [0, 5, 9], "add_deriv": [0, 5, 9], "add_intermedi": [0, 5, 9], "add_paramet": [0, 5, 9], "add_solve_st": [0, 5, 9], "add_stat": [0, 5, 9], "add_state_solut": [0, 5, 9], "compon": [0, 2, 4, 5, 9], "finalize_compon": [0, 5, 9], "full_state_vector": [0, 5, 9], "full_stat": [0, 5, 9], "get_object": [0, 5, 9], "is_complet": [0, 5, 9], "is_fin": [0, 5, 9], "is_locally_complet": [0, 5, 9], "num_compon": [0, 5, 9], "num_full_st": [0, 5, 9], "num_intermedi": [0, 5, 9], "num_paramet": [0, 5, 9], "num_rate_express": [0, 5, 9], "num_state_express": [0, 5, 9], "num_stat": [0, 5, 9], "paramet": [0, 2, 3, 4, 5, 9], "parent": [0, 4, 5, 9], "rate_express": [0, 5, 9], "root": [0, 4, 5, 9], "state_express": [0, 5, 9], "t": [0, 5, 9], "time": [0, 3, 5, 9], "odeobject": [0, 2, 9], "dt": [0, 5, 9], "update_unit": [0, 5, 9], "indexedobject": [0, 5, 9], "basenam": [0, 2, 3, 5, 9], "enum": [0, 2, 5, 9], "indic": [0, 2, 5, 9], "offset_str": [0, 5, 9], "shape": [0, 5, 9], "renam": [0, 5, 9], "odevalueobject": [0, 5, 9], "param": [0, 2, 3, 4, 5, 6, 9], "unit": [0, 2, 4, 5, 9], "init": [0, 5, 9], "parameterindexedobject": [0, 5], "is_solv": [0, 5, 9], "stateindexedobject": [0, 5], "cmp": [0, 5, 9], "cmp_to_kei": [0, 5, 9], "util": [0, 9], "odeobjectlist": [0, 5], "append": [0, 3, 5], "count": [0, 2, 5], "extend": [0, 5], "get": [0, 2, 5], "insert": [0, 3, 5], "remov": [0, 3, 5], "revers": [0, 5], "sort": [0, 5], "ratedict": [0, 5], "iter_object": [0, 5], "next": [0, 5], "ode_compon": [0, 5], "ode_object": [0, 5], "ode_primit": [0, 5], "special_express": [0, 5], "script": [0, 9], "cellml2gotran": [0, 9], "define_pars": [0, 6], "main": [0, 6, 8], "gotran2c": [0, 9], "gotran2cpp": [0, 9], "gotran2cuda": [0, 9], "gotran2dolfin": [0, 9], "gotran2julia": [0, 9], "gotran2latex": [0, 9], "gotran2matlab": [0, 9], "gotran2md": [0, 9], "make_t": [0, 6], "gotran2opencl": [0, 9], "gotran2pi": [0, 9], "gotranexport": [0, 9], "gotranprob": [0, 9], "join_indent_and_split": [0, 6], "gotranrun": [0, 9], "class": [0, 1, 2, 3, 4, 5], "none": [0, 2, 3, 4, 5, 6], "sourc": [0, 1, 2, 3, 4, 5, 6], "base": [0, 1, 2, 3, 4, 5], "A": [0, 2, 3, 5], "algebra": [0, 5], "which": [0, 2, 5], "relat": [0, 5], "an": [0, 1, 2, 3, 4, 5, 8], "should": [0, 2, 5], "equal": [0, 5], "0": [0, 2, 5], "basecodegener": [0, 2], "comp": [0, 2, 4, 5], "default_argu": [0, 2], "include_signatur": [0, 2], "true": [0, 2, 3, 4, 5], "return_body_lin": [0, 2], "fals": [0, 2, 3, 4, 5], "doubl": [0, 2], "singl": [0, 2, 4, 5], "float": [0, 2], "2": [0, 2, 3], "i": [0, 2, 3, 5, 8], "code": [0, 2, 4, 6], "set": [0, 2, 3, 5], "initi": [0, 2, 5], "condit": [0, 2], "c": [0, 2, 6, 8], "monitor": [0, 2], "return": [0, 2, 3, 4, 5, 6], "handl": [0, 2], "obj": [0, 2, 5], "variabl": [0, 2, 4, 5], "classmethod": [0, 2], "body_lin": [0, 2], "return_typ": [0, 2], "const": [0, 2], "wrap": [0, 2], "pass": [0, 2, 5], "bodi": [0, 2], "line": [0, 2], "function": [0, 2, 5, 8], "prototyp": [0, 2], "static": [0, 2, 4, 5], "field": [0, 2], "getter": [0, 2], "setter": [0, 2], "4": [0, 2, 6], "initialis": [0, 2], "cuda": [0, 2, 6, 8], "solver_typ": [0, 2], "kernel": [0, 2], "devic": [0, 2], "model_sourc": [0, 4], "target": [0, 4], "object": [0, 1, 2, 3, 4, 5], "thi": [0, 2, 3, 4, 5], "xml": [0, 4], "file": [0, 3, 4, 5, 6, 8], "convert": [0, 4, 5], "pycc": [0, 4], "collected_st": [0, 4], "collected_paramet": [0, 4], "collected_equ": [0, 4], "check": [0, 4, 5], "ar": [0, 2, 3, 4, 5, 8], "allreadi": [0, 4], "collect": [0, 3, 4], "element": [0, 2, 4, 5], "tree": [0, 4], "iter": [0, 1, 2, 3, 4, 5], "group": [0, 2, 4], "If": [0, 2, 3, 4, 5], "wa": [0, 4], "us": [0, 2, 3, 4, 5], "gather": [0, 4], "inform": [0, 1, 4], "about": [0, 1, 4], "build": [0, 2, 4], "dictionari": [0, 3, 4], "contain": [0, 2, 4, 5], "describ": [0, 2, 4, 5], "each": [0, 4, 5], "document": [0, 2, 4], "articl": [0, 4], "ani": [0, 2, 4], "import": [0, 4, 5], "creat": [0, 2, 4, 5, 6], "declar": [0, 4, 5, 8], "sorted_onc": [0, 4], "function_nam": [0, 2], "descript": [0, 2], "use_default_argu": [0, 2], "additional_argu": [0, 2], "result": [0, 2], "wrapper": [0, 2], "around": [0, 2], "Its": [0, 2], "primari": [0, 2], "purpos": [0, 2], "help": [0, 2], "The": [0, 2, 3, 5, 8], "alow": [0, 2], "extract": [0, 2, 5], "manipul": [0, 2], "add_offset": [0, 2, 5], "add": [0, 2, 5], "str": [0, 2, 3, 4, 5], "int": [0, 2], "tupl": [0, 2, 3, 5], "fix": [0, 2, 5], "identifi": [0, 2], "sympi": [0, 2, 5, 8], "basic": [0, 2, 5], "scalar": [0, 2, 5], "bool": [0, 2, 3, 5], "offset": [0, 2], "given": [0, 2, 3, 5], "follow": [0, 2, 3, 5], "fraction": [0, 2, 5], "default": [0, 2, 3, 5], "list": [0, 2, 4, 5], "all": [0, 2, 3, 5], "give": [0, 2], "To": [0, 5], "keep": [0, 2, 5], "track": [0, 5], "user": [0, 5], "kwarg": [0, 2, 3, 5], "flatten": [0, 2], "structu": [0, 2], "just": [0, 2], "one": [0, 2], "It": [0, 2, 3, 5], "reduc": [0, 2], "complex": [0, 2], "deriv": [0, 2, 4, 5], "clsname": [0, 2], "properti": [0, 2, 5], "m": [0, 2, 5], "special": [0, 5], "step": [0, 2, 5], "For": [0, 5], "exampl": [0, 5], "ha": [0, 3, 5], "second": [0, 5], "stead": [0, 5], "millisecond": [0, 5], "store": [0, 1, 2, 5], "replace_dict": [0, 5], "replac": [0, 5], "regist": [0, 2, 5], "jacobian": [0, 2, 8], "lu_factor": [0, 2], "symbolicali": [0, 2], "factor": [0, 2], "forward_backward_subst": [0, 2], "result_nam": [0, 2], "dx": [0, 2], "residual_nam": [0, 2], "f": [0, 2, 3], "forward": [0, 2], "backward": [0, 2], "substiut": [0, 2], "symbol": [0, 1, 2, 5, 8], "except": [0, 3], "runtimeerror": [0, 3], "modelparamet": [0, 3, 5], "array_param": [0, 5], "repres": [0, 5], "associ": [0, 5], "format": [0, 2, 3, 5], "arrai": [0, 5], "with_bodi": [0, 2], "compute_jacobian_act": [0, 2], "jac_act": [0, 2], "action": [0, 2], "jac": [0, 2], "x": [0, 2], "compute_jacobian": [0, 2], "rh": [0, 2], "julia": [0, 2], "argument": [0, 2, 5], "end": [0, 2, 5], "label": [0, 2], "latex": [0, 2, 6], "string": [0, 2], "auto": [0, 2], "flag": [0, 2, 5], "attempt": [0, 2], "automat": [0, 2], "refer": [0, 2], "math": [0, 2, 5], "mode": [0, 2], "e": [0, 2, 3, 5], "g": [0, 2], "exp": [0, 2], "pi": [0, 2], "1": [0, 1, 2], "option_templ": [0, 2], "inject": [0, 2], "addit": [0, 2], "global": [0, 2], "templat": [0, 2], "exclud": [0, 2, 5], "overrid": [0, 2], "specifi": [0, 2, 3], "empti": [0, 2, 3, 5], "onli": [0, 2, 5], "those": [0, 2], "ignor": [0, 2], "package_list": [0, 2], "assum": [0, 2], "form": [0, 2], "package1": [0, 2], "options1": [0, 2], "longtabl": [0, 2], "row": [0, 2], "g_earth": [0, 2], "scalarparam": [0, 2, 5], "9": [0, 2], "81": [0, 2], "": [0, 2, 3], "surfac": [0, 2], "graviti": [0, 2], "g_": [0, 2], "earth": [0, 2], "hspace": [0, 2], "5cm": [0, 2], "mathrm": [0, 2], "frac": [0, 2], "amu": [0, 2], "atom": [0, 2], "mass": [0, 2, 5], "931": [0, 2], "46": [0, 2], "mev": [0, 2], "sympifi": [0, 2], "calcul": [0, 2], "fullpag": [0, 2], "tabu": [0, 2], "multicol": [0, 2], "amsmath": [0, 2], "mathpazo": [0, 2], "flexisym": [0, 2], "breqn": [0, 2], "linear_deriv": [0, 2], "linear": [0, 2], "only_linear": [0, 2], "include_rh": [0, 2], "nonlinear_last": [0, 2], "matlab": [0, 2, 6, 8], "include_init": [0, 2], "snippet": [0, 2], "evalu": [0, 2], "include_index_map": [0, 2], "map": [0, 2, 3], "correspond": [0, 2, 3, 5], "level": [0, 2], "return_arg": [0, 2], "namespac": [0, 5], "fill": [0, 5], "expand": [0, 5], "consist": [0, 5], "origin": [0, 5, 8], "from": [0, 3, 5, 6, 8], "number": [0, 5, 8], "includ": [0, 2, 5, 8], "len": [0, 5], "prefix": [0, 2, 5], "present": [0, 3, 5], "ad": [0, 2, 5], "directli": [0, 5], "either": [0, 3, 5, 8], "whole": [0, 5], "can": [0, 2, 5, 8], "control": [0, 2, 4, 5], "dae": [0, 5], "matrix": [0, 5], "same": [0, 3, 5], "uniqu": [0, 5], "defin": [0, 2, 5], "determin": [0, 2, 5], "appliedundef": [0, 5], "differenti": [0, 5], "differeti": [0, 5], "current": [0, 5, 8], "you": [0, 5, 8], "need": [0, 4, 5, 8], "them": [0, 5], "order": [0, 3, 5], "solve_flag": [0, 5], "solv": [0, 2, 5], "tri": [0, 5], "find": [0, 5], "solut": [0, 1, 5], "child": [0, 4, 5], "call": [0, 2, 5], "whenev": [0, 5], "column": [0, 5], "vector": [0, 5], "full": [0, 5], "its": [0, 2, 5], "children": [0, 5], "return_compon": [0, 5], "local": [0, 5], "complet": [0, 5], "non": [0, 5], "self": [0, 5], "rate": [0, 5], "still": [0, 5], "aliv": [0, 5], "otherwis": [0, 3, 5], "import_inside_funct": [0, 2], "float_": [0, 2], "float32": [0, 2], "perform_range_check": [0, 2], "python": [0, 2, 8], "to_stat": [0, 5], "from_stat": [0, 5], "hold": [0, 2, 5], "two": [0, 5], "between": [0, 5], "path": [0, 4], "url": [0, 4], "parser": [0, 4, 6], "b": [0, 5], "mycmp": [0, 5], "dy": [0, 2], "ith": [0, 2], "comput": [0, 2], "how": [0, 2, 8], "diagonal_jacobian": [0, 2], "compute_diagonal_jacobian_act": [0, 2], "diag_jac_act": [0, 2], "diagon": [0, 2], "diagonaljacobiancompon": [0, 2], "compute_diagonal_jacobian": [0, 2], "diag_jac": [0, 2], "ode_str": [0, 5], "execut": [0, 5], "substit": [0, 2], "increment": [0, 2], "residu": [0, 2], "term": [0, 2], "nonlinear": [0, 2], "last": [0, 2, 3, 5], "after": [0, 2], "filenam": [0, 5, 6], "instanc": [0, 5], "method": [0, 2, 3, 5], "look": [0, 5], "extens": [0, 5], "recreat": [0, 5], "while": [0, 5], "appli": [0, 5], "right": [0, 2, 8], "hand": [0, 2, 8], "side": [0, 2, 8], "set_log_level": [0, 9], "log": 0, "theta": 1, "newton": 1, "union": 2, "languang": 2, "generation_param": 2, "jit": 2, "compil": 2, "type": [2, 3, 5], "moduletyp": 2, "optim": 2, "represent": 2, "where": [2, 3], "variou": 2, "perform": 2, "inter": 2, "over": [2, 5], "dy_bodi": 2, "cse": 2, "jacobi": 2, "notat": 2, "specif": 2, "syntax": 2, "forward_explicit_eul": 2, "explicit": 2, "euler": 2, "scheme": 2, "forward_generalized_rush_larsen": 2, "delta": 2, "1e": 2, "08": 2, "rush": 2, "larsen": 2, "grl1": 2, "forward_hybrid_generalized_rush_larsen": 2, "stiff_state_vari": 2, "hybrid": 2, "forward_rush_larsen": 2, "forward_simplified_implicit_eul": 2, "numeric_jacobian": 2, "simplifi": 2, "implicit": 2, "safeguard": 2, "stiff_stat": 2, "stiff": 2, "remain": 2, "numer": 2, "attribut": [3, 5], "style": 3, "access": [3, 5], "real": 3, "shallow": 3, "d": 3, "simpl": 3, "like": 3, "provid": [3, 8], "view": 3, "k": 3, "v": 3, "found": [3, 8], "keyerror": 3, "rais": [3, 5], "pair": 3, "lifo": 3, "first": [3, 5], "out": [3, 5], "els": 3, "doe": 3, "lack": 3, "In": 3, "case": 3, "latest_timestamp": 3, "data": 3, "cpickl": 3, "latest": [3, 8], "version": [3, 8], "nice": 3, "actual": 3, "use_sympy_integ": 4, "recurs": [4, 5], "subtre": 4, "token": 4, "togeth": 4, "first_operand": 4, "oper": 4, "parenthesi": 4, "through": 5, "occurr": 5, "valueerror": 5, "befor": 5, "indexerror": 5, "rang": 5, "IN": 5, "place": 5, "ascend": 5, "itself": 5, "modifi": 5, "stabl": 5, "maintain": [5, 8], "onc": 5, "descend": 5, "accord": 5, "ordereddict": 5, "storag": 5, "markov": 5, "return_comp": 5, "only_return_comp": 5, "done": 5, "particular": 5, "yield": 5, "include_self": 5, "return_self": 5, "primit": 5, "change_state_nam": 6, "popul": 6, "header": 6, "ufl": 6, "value_matrix": 6, "header_nam": 6, "opencl": 6, "baseind": 6, "interfac": 8, "arbitrari": 8, "intention": 8, "lightweight": 8, "could": 8, "other": 8, "librari": 8, "abstract": 8, "numpi": 8, "see": 8, "further": 8, "instruct": 8, "extern": 8, "descipt": 8, "http": 8, "bitbucket": 8, "org": 8, "finsberg": 8, "detail": 8, "pip": 8, "want": 8, "featur": 8, "git": 8, "orgin": 8, "develop": 8, "johan": 8, "hake": 8, "hi": 8, "repoistori": 8, "foud": 8, "here": 8, "henrik": 8, "henriknf": 8, "simula": 8, "dev": 8, "gmail": 8, "com": 8, "gnu": 8, "lgplv3": 8, "packag": [8, 9], "modul": [8, 9], "search": 8, "page": 8, "subpackag": 9, "content": 9}, "objects": {"": [[0, 0, 0, "-", "gotran"]], "gotran": [[0, 1, 1, "", "AlgebraicExpression"], [0, 1, 1, "", "CCodeGenerator"], [0, 1, 1, "", "CUDACodeGenerator"], [0, 1, 1, "", "CellMLParser"], [0, 1, 1, "", "CodeComponent"], [0, 1, 1, "", "Comment"], [0, 1, 1, "", "CommonSubExpressionODE"], [0, 1, 1, "", "CppCodeGenerator"], [0, 1, 1, "", "DerivativeExpression"], [0, 1, 1, "", "Dt"], [0, 1, 1, "", "Expression"], [0, 1, 1, "", "FactorizedJacobianComponent"], [0, 1, 1, "", "ForwardBackwardSubstitutionComponent"], [0, 5, 1, "", "GotranException"], [0, 1, 1, "", "IndexedExpression"], [0, 1, 1, "", "IndexedObject"], [0, 1, 1, "", "Intermediate"], [0, 1, 1, "", "JacobianActionComponent"], [0, 1, 1, "", "JacobianComponent"], [0, 1, 1, "", "JuliaCodeGenerator"], [0, 1, 1, "", "LatexCodeGenerator"], [0, 1, 1, "", "LinearizedDerivativeComponent"], [0, 1, 1, "", "MatlabCodeGenerator"], [0, 1, 1, "", "ODE"], [0, 1, 1, "", "ODEComponent"], [0, 1, 1, "", "ODEObject"], [0, 1, 1, "", "ODEValueObject"], [0, 1, 1, "", "Parameter"], [0, 1, 1, "", "PythonCodeGenerator"], [0, 1, 1, "", "RateExpression"], [0, 1, 1, "", "State"], [0, 1, 1, "", "StateDerivative"], [0, 1, 1, "", "StateExpression"], [0, 1, 1, "", "StateSolution"], [0, 1, 1, "", "Time"], [1, 0, 0, "-", "algorithms"], [0, 6, 1, "", "cellml2ode"], [0, 6, 1, "", "class_name"], [0, 6, 1, "", "cmp"], [0, 6, 1, "", "cmp_to_key"], [2, 0, 0, "-", "codegeneration"], [3, 0, 0, "-", "common"], [0, 6, 1, "", "componentwise_derivative"], [0, 6, 1, "", "diagonal_jacobian_action_expressions"], [0, 6, 1, "", "diagonal_jacobian_expressions"], [0, 6, 1, "", "exec_ode"], [0, 6, 1, "", "factorized_jacobian_expressions"], [0, 6, 1, "", "forward_backward_subst_expressions"], [4, 0, 0, "-", "input"], [0, 6, 1, "", "jacobian_action_expressions"], [0, 6, 1, "", "jacobian_expressions"], [0, 6, 1, "", "linearized_derivatives"], [0, 6, 1, "", "load_ode"], [5, 0, 0, "-", "model"], [0, 6, 1, "", "monitored_expressions"], [0, 6, 1, "", "recreate_expression"], [0, 6, 1, "", "rhs_expressions"], [6, 0, 0, "-", "scripts"], [0, 6, 1, "", "set_log_level"]], "gotran.CCodeGenerator": [[0, 2, 1, "", "args"], [0, 3, 1, "", "closure_end"], [0, 3, 1, "", "closure_start"], [0, 3, 1, "", "comment"], [0, 2, 1, "", "componentwise_code"], [0, 3, 1, "", "float_types"], [0, 2, 1, "", "function_code"], [0, 3, 1, "", "indent"], [0, 3, 1, "", "indent_str"], [0, 2, 1, "", "index"], [0, 2, 1, "", "init_parameters_code"], [0, 2, 1, "", "init_states_code"], [0, 3, 1, "", "language"], [0, 3, 1, "", "line_cont"], [0, 3, 1, "", "line_ending"], [0, 2, 1, "", "mass_matrix"], [0, 2, 1, "", "module_code"], [0, 2, 1, "", "monitor_name_to_index_code"], [0, 2, 1, "", "monitored_enum_code"], [0, 2, 1, "", "obj_name"], [0, 2, 1, "", "param_name_to_index_code"], [0, 2, 1, "", "parameters_enum_code"], [0, 2, 1, "", "state_name_to_index_code"], [0, 2, 1, "", "states_enum_code"], [0, 2, 1, "", "to_code"], [0, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.CUDACodeGenerator": [[0, 2, 1, "", "default_parameters"], [0, 2, 1, "", "field_parameters_setter_code"], [0, 2, 1, "", "field_states_getter_code"], [0, 2, 1, "", "field_states_setter_code"], [0, 2, 1, "", "function_code"], [0, 3, 1, "", "indent"], [0, 2, 1, "", "init_field_parameters_code"], [0, 2, 1, "", "init_parameters_code"], [0, 2, 1, "", "init_states_code"], [0, 3, 1, "", "language"], [0, 2, 1, "", "module_code"], [0, 2, 1, "", "solver_code"], [0, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.CellMLParser": [[0, 2, 1, "", "check_and_register_component_variables"], [0, 2, 1, "", "default_parameters"], [0, 2, 1, "", "get_iterator"], [0, 2, 1, "", "get_parents"], [0, 2, 1, "", "parse_components"], [0, 2, 1, "", "parse_connections"], [0, 2, 1, "", "parse_documentation"], [0, 2, 1, "", "parse_imported_model"], [0, 2, 1, "", "parse_single_component"], [0, 2, 1, "", "parse_units"], [0, 2, 1, "", "sort_components"], [0, 2, 1, "", "to_gotran"]], "gotran.CodeComponent": [[0, 2, 1, "", "add_indexed_expression"], [0, 2, 1, "", "add_indexed_object"], [0, 2, 1, "", "default_parameters"], [0, 2, 1, "", "indexed_objects"]], "gotran.CppCodeGenerator": [[0, 2, 1, "", "class_code"], [0, 3, 1, "", "language"], [0, 2, 1, "", "to_code"]], "gotran.DerivativeExpression": [[0, 4, 1, "", "dep_var"], [0, 4, 1, "", "der_expr"]], "gotran.Dt": [[0, 2, 1, "", "update_unit"]], "gotran.Expression": [[0, 4, 1, "", "dependent"], [0, 4, 1, "", "expr"], [0, 4, 1, "", "is_state_expression"], [0, 2, 1, "", "replace_expr"], [0, 4, 1, "", "sym"]], "gotran.IndexedObject": [[0, 4, 1, "", "basename"], [0, 2, 1, "", "default_parameters"], [0, 4, 1, "", "enum"], [0, 4, 1, "", "indices"], [0, 4, 1, "", "offset_str"], [0, 4, 1, "", "shape"], [0, 4, 1, "", "sym"]], "gotran.JuliaCodeGenerator": [[0, 2, 1, "", "args"], [0, 3, 1, "", "closure_end"], [0, 3, 1, "", "closure_start"], [0, 3, 1, "", "comment"], [0, 2, 1, "", "componentwise_code"], [0, 2, 1, "", "default_parameters"], [0, 2, 1, "", "function_code"], [0, 3, 1, "", "indent"], [0, 3, 1, "", "indent_str"], [0, 2, 1, "", "index"], [0, 2, 1, "", "init_parameters_code"], [0, 2, 1, "", "init_states_code"], [0, 3, 1, "", "language"], [0, 3, 1, "", "line_cont"], [0, 3, 1, "", "line_ending"], [0, 2, 1, "", "module_code"], [0, 2, 1, "", "monitor_name_to_index_code"], [0, 2, 1, "", "param_name_to_index_code"], [0, 2, 1, "", "state_name_to_index_code"], [0, 2, 1, "", "to_code"], [0, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.LatexCodeGenerator": [[0, 2, 1, "", "format_component_label"], [0, 2, 1, "", "format_description"], [0, 2, 1, "", "format_expr"], [0, 2, 1, "", "format_global_options"], [0, 2, 1, "", "format_options"], [0, 2, 1, "", "format_packages"], [0, 2, 1, "", "format_param_table_row"], [0, 2, 1, "", "format_state_table_row"], [0, 2, 1, "", "format_unit"], [0, 2, 1, "", "generate"], [0, 2, 1, "", "generate_components"], [0, 2, 1, "", "generate_parameter_table"], [0, 2, 1, "", "generate_state_table"], [0, 3, 1, "", "packages"], [0, 3, 1, "", "print_settings"]], "gotran.MatlabCodeGenerator": [[0, 2, 1, "", "args"], [0, 3, 1, "", "closure_end"], [0, 3, 1, "", "closure_start"], [0, 2, 1, "", "code_dict"], [0, 3, 1, "", "comment"], [0, 2, 1, "", "default_parameters"], [0, 2, 1, "", "function_code"], [0, 3, 1, "", "indent"], [0, 3, 1, "", "indent_str"], [0, 2, 1, "", "index"], [0, 2, 1, "", "init_parameters_code"], [0, 2, 1, "", "init_states_code"], [0, 3, 1, "", "language"], [0, 3, 1, "", "line_cont"], [0, 3, 1, "", "line_ending"], [0, 2, 1, "", "mass_matrix"], [0, 2, 1, "", "monitored_names_code"], [0, 2, 1, "", "to_code"], [0, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.ODE": [[0, 4, 1, "", "component_names"], [0, 2, 1, "", "expanded_expression"], [0, 2, 1, "", "extract_components"], [0, 2, 1, "", "finalize"], [0, 2, 1, "", "import_ode"], [0, 4, 1, "", "intermediate_symbols"], [0, 4, 1, "", "is_dae"], [0, 4, 1, "", "mass_matrix"], [0, 4, 1, "", "ns"], [0, 4, 1, "", "parameter_symbols"], [0, 2, 1, "", "parameter_values"], [0, 4, 1, "", "present_component"], [0, 2, 1, "", "register_ode_object"], [0, 2, 1, "", "save"], [0, 2, 1, "", "signature"], [0, 4, 1, "", "state_symbols"], [0, 2, 1, "", "state_values"]], "gotran.ODEComponent": [[0, 2, 1, "", "add_algebraic"], [0, 2, 1, "", "add_comment"], [0, 2, 1, "", "add_component"], [0, 2, 1, "", "add_derivative"], [0, 2, 1, "", "add_intermediate"], [0, 2, 1, "", "add_parameter"], [0, 2, 1, "", "add_parameters"], [0, 2, 1, "", "add_solve_state"], [0, 2, 1, "", "add_state"], [0, 2, 1, "", "add_state_solution"], [0, 2, 1, "", "add_states"], [0, 4, 1, "", "comments"], [0, 4, 1, "", "components"], [0, 2, 1, "", "finalize_component"], [0, 4, 1, "", "full_state_vector"], [0, 4, 1, "", "full_states"], [0, 2, 1, "", "get_object"], [0, 4, 1, "", "intermediates"], [0, 4, 1, "", "is_complete"], [0, 4, 1, "", "is_finalized"], [0, 4, 1, "", "is_locally_complete"], [0, 4, 1, "", "num_components"], [0, 4, 1, "", "num_full_states"], [0, 4, 1, "", "num_intermediates"], [0, 4, 1, "", "num_parameters"], [0, 4, 1, "", "num_rate_expressions"], [0, 4, 1, "", "num_state_expressions"], [0, 4, 1, "", "num_states"], [0, 4, 1, "", "parameters"], [0, 4, 1, "", "parent"], [0, 4, 1, "", "rate_expressions"], [0, 4, 1, "", "root"], [0, 4, 1, "", "state_expressions"], [0, 4, 1, "", "states"], [0, 4, 1, "", "t"], [0, 4, 1, "", "time"]], "gotran.ODEObject": [[0, 4, 1, "", "name"], [0, 2, 1, "", "rename"]], "gotran.ODEValueObject": [[0, 4, 1, "", "param"], [0, 2, 1, "", "rename"], [0, 4, 1, "", "sym"], [0, 4, 1, "", "unit"], [0, 2, 1, "", "update"], [0, 4, 1, "", "value"]], "gotran.Parameter": [[0, 4, 1, "", "init"]], "gotran.PythonCodeGenerator": [[0, 2, 1, "", "args"], [0, 2, 1, "", "class_code"], [0, 2, 1, "", "componentwise_code"], [0, 2, 1, "", "decorators"], [0, 3, 1, "", "float_types"], [0, 2, 1, "", "function_code"], [0, 2, 1, "", "init_parameters_code"], [0, 2, 1, "", "init_states_code"], [0, 3, 1, "", "language"], [0, 2, 1, "", "mass_matrix"], [0, 2, 1, "", "module_code"], [0, 2, 1, "", "monitor_name_to_index_code"], [0, 2, 1, "", "param_name_to_index_code"], [0, 2, 1, "", "parameter_names_list_code"], [0, 2, 1, "", "state_name_to_index_code"], [0, 2, 1, "", "state_names_list_code"], [0, 2, 1, "", "to_code"], [0, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.RateExpression": [[0, 4, 1, "", "states"]], "gotran.State": [[0, 4, 1, "", "init"], [0, 4, 1, "", "is_solved"], [0, 4, 1, "", "sym"]], "gotran.StateDerivative": [[0, 4, 1, "", "sym"]], "gotran.StateExpression": [[0, 4, 1, "", "state"]], "gotran.StateSolution": [[0, 4, 1, "", "state"]], "gotran.Time": [[0, 2, 1, "", "update_unit"]], "gotran.algorithms": [[1, 0, 0, "-", "symbolicnewtonsolution"]], "gotran.algorithms.symbolicnewtonsolution": [[1, 1, 1, "", "SymbolicNewtonSolution"]], "gotran.codegeneration": [[2, 1, 1, "", "CCodeGenerator"], [2, 1, 1, "", "CUDACodeGenerator"], [2, 1, 1, "", "CodeComponent"], [2, 1, 1, "", "CommonSubExpressionODE"], [2, 1, 1, "", "CppCodeGenerator"], [2, 1, 1, "", "ExplicitEuler"], [2, 1, 1, "", "FactorizedJacobianComponent"], [2, 1, 1, "", "ForwardBackwardSubstitutionComponent"], [2, 1, 1, "", "GeneralizedRushLarsen"], [2, 1, 1, "", "HybridGeneralizedRushLarsen"], [2, 1, 1, "", "JacobianActionComponent"], [2, 1, 1, "", "JacobianComponent"], [2, 1, 1, "", "JuliaCodeGenerator"], [2, 1, 1, "", "LatexCodeGenerator"], [2, 1, 1, "", "LinearizedDerivativeComponent"], [2, 1, 1, "", "MatlabCodeGenerator"], [2, 1, 1, "", "PythonCodeGenerator"], [2, 1, 1, "", "RushLarsen"], [2, 1, 1, "", "SimplifiedImplicitEuler"], [2, 0, 0, "-", "algorithmcomponents"], [2, 0, 0, "-", "avoidsympycontractions"], [2, 6, 1, "", "class_name"], [2, 0, 0, "-", "codecomponent"], [2, 0, 0, "-", "codegenerators"], [2, 6, 1, "", "compile_module"], [2, 0, 0, "-", "compilemodule"], [2, 6, 1, "", "componentwise_derivative"], [2, 6, 1, "", "diagonal_jacobian_action_expressions"], [2, 6, 1, "", "diagonal_jacobian_expressions"], [2, 6, 1, "", "explicit_euler_solver"], [2, 6, 1, "", "factorized_jacobian_expressions"], [2, 6, 1, "", "forward_backward_subst_expressions"], [2, 6, 1, "", "generalized_rush_larsen_solver"], [2, 6, 1, "", "get_solver_fn"], [2, 6, 1, "", "has_cppyy"], [2, 6, 1, "", "hybrid_generalized_rush_larsen_solver"], [2, 6, 1, "", "jacobian_action_expressions"], [2, 6, 1, "", "jacobian_expressions"], [2, 0, 0, "-", "latexcodegenerator"], [2, 6, 1, "", "linearized_derivatives"], [2, 6, 1, "", "monitored_expressions"], [2, 0, 0, "-", "oderepresentation"], [2, 6, 1, "", "rhs_expressions"], [2, 6, 1, "", "rush_larsen_solver"], [2, 6, 1, "", "simplified_implicit_euler_solver"], [2, 0, 0, "-", "solvercomponents"]], "gotran.codegeneration.CCodeGenerator": [[2, 2, 1, "", "args"], [2, 3, 1, "", "closure_end"], [2, 3, 1, "", "closure_start"], [2, 3, 1, "", "comment"], [2, 2, 1, "", "componentwise_code"], [2, 3, 1, "", "float_types"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 3, 1, "", "indent_str"], [2, 2, 1, "", "index"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 3, 1, "", "line_cont"], [2, 3, 1, "", "line_ending"], [2, 2, 1, "", "mass_matrix"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "monitor_name_to_index_code"], [2, 2, 1, "", "monitored_enum_code"], [2, 2, 1, "", "obj_name"], [2, 2, 1, "", "param_name_to_index_code"], [2, 2, 1, "", "parameters_enum_code"], [2, 2, 1, "", "state_name_to_index_code"], [2, 2, 1, "", "states_enum_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.CUDACodeGenerator": [[2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "field_parameters_setter_code"], [2, 2, 1, "", "field_states_getter_code"], [2, 2, 1, "", "field_states_setter_code"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 2, 1, "", "init_field_parameters_code"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "solver_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.CodeComponent": [[2, 2, 1, "", "add_indexed_expression"], [2, 2, 1, "", "add_indexed_object"], [2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "indexed_objects"]], "gotran.codegeneration.CppCodeGenerator": [[2, 2, 1, "", "class_code"], [2, 3, 1, "", "language"], [2, 2, 1, "", "to_code"]], "gotran.codegeneration.JuliaCodeGenerator": [[2, 2, 1, "", "args"], [2, 3, 1, "", "closure_end"], [2, 3, 1, "", "closure_start"], [2, 3, 1, "", "comment"], [2, 2, 1, "", "componentwise_code"], [2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 3, 1, "", "indent_str"], [2, 2, 1, "", "index"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 3, 1, "", "line_cont"], [2, 3, 1, "", "line_ending"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "monitor_name_to_index_code"], [2, 2, 1, "", "param_name_to_index_code"], [2, 2, 1, "", "state_name_to_index_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.LatexCodeGenerator": [[2, 2, 1, "", "format_component_label"], [2, 2, 1, "", "format_description"], [2, 2, 1, "", "format_expr"], [2, 2, 1, "", "format_global_options"], [2, 2, 1, "", "format_options"], [2, 2, 1, "", "format_packages"], [2, 2, 1, "", "format_param_table_row"], [2, 2, 1, "", "format_state_table_row"], [2, 2, 1, "", "format_unit"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "generate_components"], [2, 2, 1, "", "generate_parameter_table"], [2, 2, 1, "", "generate_state_table"], [2, 3, 1, "", "packages"], [2, 3, 1, "", "print_settings"]], "gotran.codegeneration.MatlabCodeGenerator": [[2, 2, 1, "", "args"], [2, 3, 1, "", "closure_end"], [2, 3, 1, "", "closure_start"], [2, 2, 1, "", "code_dict"], [2, 3, 1, "", "comment"], [2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 3, 1, "", "indent_str"], [2, 2, 1, "", "index"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 3, 1, "", "line_cont"], [2, 3, 1, "", "line_ending"], [2, 2, 1, "", "mass_matrix"], [2, 2, 1, "", "monitored_names_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.PythonCodeGenerator": [[2, 2, 1, "", "args"], [2, 2, 1, "", "class_code"], [2, 2, 1, "", "componentwise_code"], [2, 2, 1, "", "decorators"], [2, 3, 1, "", "float_types"], [2, 2, 1, "", "function_code"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 2, 1, "", "mass_matrix"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "monitor_name_to_index_code"], [2, 2, 1, "", "param_name_to_index_code"], [2, 2, 1, "", "parameter_names_list_code"], [2, 2, 1, "", "state_name_to_index_code"], [2, 2, 1, "", "state_names_list_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.algorithmcomponents": [[2, 1, 1, "", "CommonSubExpressionODE"], [2, 1, 1, "", "FactorizedJacobianComponent"], [2, 1, 1, "", "ForwardBackwardSubstitutionComponent"], [2, 1, 1, "", "JacobianActionComponent"], [2, 1, 1, "", "JacobianComponent"], [2, 1, 1, "", "LinearizedDerivativeComponent"], [2, 6, 1, "", "componentwise_derivative"], [2, 6, 1, "", "diagonal_jacobian_action_expressions"], [2, 6, 1, "", "diagonal_jacobian_expressions"], [2, 6, 1, "", "factorized_jacobian_expressions"], [2, 6, 1, "", "forward_backward_subst_expressions"], [2, 6, 1, "", "jacobian_action_expressions"], [2, 6, 1, "", "jacobian_expressions"], [2, 6, 1, "", "linearized_derivatives"], [2, 6, 1, "", "monitored_expressions"], [2, 6, 1, "", "rhs_expressions"]], "gotran.codegeneration.codecomponent": [[2, 1, 1, "", "CodeComponent"]], "gotran.codegeneration.codecomponent.CodeComponent": [[2, 2, 1, "", "add_indexed_expression"], [2, 2, 1, "", "add_indexed_object"], [2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "indexed_objects"]], "gotran.codegeneration.codegenerators": [[2, 1, 1, "", "CCodeGenerator"], [2, 1, 1, "", "CUDACodeGenerator"], [2, 1, 1, "", "CppCodeGenerator"], [2, 1, 1, "", "JuliaCodeGenerator"], [2, 1, 1, "", "MatlabCodeGenerator"], [2, 1, 1, "", "PythonCodeGenerator"], [2, 6, 1, "", "class_name"]], "gotran.codegeneration.codegenerators.CCodeGenerator": [[2, 2, 1, "", "args"], [2, 3, 1, "", "closure_end"], [2, 3, 1, "", "closure_start"], [2, 3, 1, "", "comment"], [2, 2, 1, "", "componentwise_code"], [2, 3, 1, "", "float_types"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 3, 1, "", "indent_str"], [2, 2, 1, "", "index"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 3, 1, "", "line_cont"], [2, 3, 1, "", "line_ending"], [2, 2, 1, "", "mass_matrix"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "monitor_name_to_index_code"], [2, 2, 1, "", "monitored_enum_code"], [2, 2, 1, "", "obj_name"], [2, 2, 1, "", "param_name_to_index_code"], [2, 2, 1, "", "parameters_enum_code"], [2, 2, 1, "", "state_name_to_index_code"], [2, 2, 1, "", "states_enum_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.codegenerators.CUDACodeGenerator": [[2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "field_parameters_setter_code"], [2, 2, 1, "", "field_states_getter_code"], [2, 2, 1, "", "field_states_setter_code"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 2, 1, "", "init_field_parameters_code"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "solver_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.codegenerators.CppCodeGenerator": [[2, 2, 1, "", "class_code"], [2, 3, 1, "", "language"], [2, 2, 1, "", "to_code"]], "gotran.codegeneration.codegenerators.JuliaCodeGenerator": [[2, 2, 1, "", "args"], [2, 3, 1, "", "closure_end"], [2, 3, 1, "", "closure_start"], [2, 3, 1, "", "comment"], [2, 2, 1, "", "componentwise_code"], [2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 3, 1, "", "indent_str"], [2, 2, 1, "", "index"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 3, 1, "", "line_cont"], [2, 3, 1, "", "line_ending"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "monitor_name_to_index_code"], [2, 2, 1, "", "param_name_to_index_code"], [2, 2, 1, "", "state_name_to_index_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.codegenerators.MatlabCodeGenerator": [[2, 2, 1, "", "args"], [2, 3, 1, "", "closure_end"], [2, 3, 1, "", "closure_start"], [2, 2, 1, "", "code_dict"], [2, 3, 1, "", "comment"], [2, 2, 1, "", "default_parameters"], [2, 2, 1, "", "function_code"], [2, 3, 1, "", "indent"], [2, 3, 1, "", "indent_str"], [2, 2, 1, "", "index"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 3, 1, "", "line_cont"], [2, 3, 1, "", "line_ending"], [2, 2, 1, "", "mass_matrix"], [2, 2, 1, "", "monitored_names_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.codegenerators.PythonCodeGenerator": [[2, 2, 1, "", "args"], [2, 2, 1, "", "class_code"], [2, 2, 1, "", "componentwise_code"], [2, 2, 1, "", "decorators"], [2, 3, 1, "", "float_types"], [2, 2, 1, "", "function_code"], [2, 2, 1, "", "init_parameters_code"], [2, 2, 1, "", "init_states_code"], [2, 3, 1, "", "language"], [2, 2, 1, "", "mass_matrix"], [2, 2, 1, "", "module_code"], [2, 2, 1, "", "monitor_name_to_index_code"], [2, 2, 1, "", "param_name_to_index_code"], [2, 2, 1, "", "parameter_names_list_code"], [2, 2, 1, "", "state_name_to_index_code"], [2, 2, 1, "", "state_names_list_code"], [2, 2, 1, "", "to_code"], [2, 2, 1, "", "wrap_body_with_function_prototype"]], "gotran.codegeneration.compilemodule": [[2, 6, 1, "", "compile_module"]], "gotran.codegeneration.latexcodegenerator": [[2, 1, 1, "", "LatexCodeGenerator"]], "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator": [[2, 2, 1, "", "format_component_label"], [2, 2, 1, "", "format_description"], [2, 2, 1, "", "format_expr"], [2, 2, 1, "", "format_global_options"], [2, 2, 1, "", "format_options"], [2, 2, 1, "", "format_packages"], [2, 2, 1, "", "format_param_table_row"], [2, 2, 1, "", "format_state_table_row"], [2, 2, 1, "", "format_unit"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "generate_components"], [2, 2, 1, "", "generate_parameter_table"], [2, 2, 1, "", "generate_state_table"], [2, 3, 1, "", "packages"], [2, 3, 1, "", "print_settings"]], "gotran.codegeneration.oderepresentation": [[2, 1, 1, "", "ODERepresentation"]], "gotran.codegeneration.oderepresentation.ODERepresentation": [[2, 4, 1, "", "class_name"], [2, 2, 1, "", "iter_componentwise_dy"], [2, 2, 1, "", "iter_derivative_expr"], [2, 2, 1, "", "iter_dy_body"], [2, 2, 1, "", "iter_jacobian_action_body"], [2, 2, 1, "", "iter_jacobian_action_expr"], [2, 2, 1, "", "iter_jacobian_body"], [2, 2, 1, "", "iter_jacobian_expr"], [2, 2, 1, "", "iter_linerized_body"], [2, 2, 1, "", "iter_linerized_expr"], [2, 2, 1, "", "iter_monitored_body"], [2, 2, 1, "", "iter_monitored_expr"], [2, 4, 1, "", "name"], [2, 2, 1, "", "set_parameter_prefix"], [2, 2, 1, "", "set_state_prefix"], [2, 2, 1, "", "signature"], [2, 2, 1, "", "subs"], [2, 4, 1, "", "symbol_subs"], [2, 2, 1, "", "update_index"], [2, 4, 1, "", "used_in_linear_dy"], [2, 4, 1, "", "used_in_monitoring"], [2, 4, 1, "", "used_in_single_dy"]], "gotran.codegeneration.solvercomponents": [[2, 1, 1, "", "ExplicitEuler"], [2, 1, 1, "", "GeneralizedRushLarsen"], [2, 1, 1, "", "HybridGeneralizedRushLarsen"], [2, 1, 1, "", "RushLarsen"], [2, 1, 1, "", "SimplifiedImplicitEuler"], [2, 6, 1, "", "explicit_euler_solver"], [2, 6, 1, "", "generalized_rush_larsen_solver"], [2, 6, 1, "", "get_solver_fn"], [2, 6, 1, "", "hybrid_generalized_rush_larsen_solver"], [2, 6, 1, "", "rush_larsen_solver"], [2, 6, 1, "", "simplified_implicit_euler_solver"]], "gotran.common": [[3, 5, 1, "", "GotranException"], [3, 1, 1, "", "adict"], [3, 0, 0, "-", "dicts"], [3, 0, 0, "-", "disk"], [3, 6, 1, "", "load"], [3, 1, 1, "", "odict"], [3, 0, 0, "-", "options"], [3, 6, 1, "", "present_time_str"], [3, 6, 1, "", "save"]], "gotran.common.adict": [[3, 2, 1, "", "copy"]], "gotran.common.dicts": [[3, 1, 1, "", "adict"], [3, 1, 1, "", "odict"]], "gotran.common.dicts.adict": [[3, 2, 1, "", "copy"]], "gotran.common.dicts.odict": [[3, 2, 1, "", "clear"], [3, 2, 1, "", "items"], [3, 2, 1, "", "iteritems"], [3, 2, 1, "", "iterkeys"], [3, 2, 1, "", "itervalues"], [3, 2, 1, "", "keys"], [3, 2, 1, "", "pop"], [3, 2, 1, "", "popitem"], [3, 2, 1, "", "setdefault"], [3, 2, 1, "", "update"], [3, 2, 1, "", "values"]], "gotran.common.disk": [[3, 6, 1, "", "load"], [3, 6, 1, "", "present_time_str"], [3, 6, 1, "", "save"]], "gotran.common.odict": [[3, 2, 1, "", "clear"], [3, 2, 1, "", "items"], [3, 2, 1, "", "iteritems"], [3, 2, 1, "", "iterkeys"], [3, 2, 1, "", "itervalues"], [3, 2, 1, "", "keys"], [3, 2, 1, "", "pop"], [3, 2, 1, "", "popitem"], [3, 2, 1, "", "setdefault"], [3, 2, 1, "", "update"], [3, 2, 1, "", "values"]], "gotran.input": [[4, 1, 1, "", "CellMLParser"], [4, 0, 0, "-", "cellml"], [4, 6, 1, "", "cellml2ode"], [4, 0, 0, "-", "mathml"]], "gotran.input.CellMLParser": [[4, 2, 1, "", "check_and_register_component_variables"], [4, 2, 1, "", "default_parameters"], [4, 2, 1, "", "get_iterator"], [4, 2, 1, "", "get_parents"], [4, 2, 1, "", "parse_components"], [4, 2, 1, "", "parse_connections"], [4, 2, 1, "", "parse_documentation"], [4, 2, 1, "", "parse_imported_model"], [4, 2, 1, "", "parse_single_component"], [4, 2, 1, "", "parse_units"], [4, 2, 1, "", "sort_components"], [4, 2, 1, "", "to_gotran"]], "gotran.input.cellml": [[4, 1, 1, "", "CellMLParser"], [4, 6, 1, "", "cellml2ode"]], "gotran.input.cellml.CellMLParser": [[4, 2, 1, "", "check_and_register_component_variables"], [4, 2, 1, "", "default_parameters"], [4, 2, 1, "", "get_iterator"], [4, 2, 1, "", "get_parents"], [4, 2, 1, "", "parse_components"], [4, 2, 1, "", "parse_connections"], [4, 2, 1, "", "parse_documentation"], [4, 2, 1, "", "parse_imported_model"], [4, 2, 1, "", "parse_single_component"], [4, 2, 1, "", "parse_units"], [4, 2, 1, "", "sort_components"], [4, 2, 1, "", "to_gotran"]], "gotran.input.mathml": [[4, 1, 1, "", "MathMLBaseParser"], [4, 1, 1, "", "MathMLCPPParser"]], "gotran.input.mathml.MathMLBaseParser": [[4, 2, 1, "", "parse"], [4, 2, 1, "", "use_parenthesis"]], "gotran.model": [[5, 1, 1, "", "AlgebraicExpression"], [5, 1, 1, "", "Comment"], [5, 1, 1, "", "DerivativeExpression"], [5, 1, 1, "", "Dt"], [5, 1, 1, "", "Expression"], [5, 1, 1, "", "IndexedExpression"], [5, 1, 1, "", "IndexedObject"], [5, 1, 1, "", "Intermediate"], [5, 1, 1, "", "ODE"], [5, 1, 1, "", "ODEComponent"], [5, 1, 1, "", "ODEObject"], [5, 1, 1, "", "ODEValueObject"], [5, 1, 1, "", "Parameter"], [5, 1, 1, "", "RateExpression"], [5, 1, 1, "", "State"], [5, 1, 1, "", "StateDerivative"], [5, 1, 1, "", "StateExpression"], [5, 1, 1, "", "StateSolution"], [5, 1, 1, "", "Time"], [5, 6, 1, "", "cmp"], [5, 6, 1, "", "cmp_to_key"], [5, 6, 1, "", "exec_ode"], [5, 0, 0, "-", "expressions"], [5, 6, 1, "", "load_ode"], [5, 0, 0, "-", "loadmodel"], [5, 0, 0, "-", "ode"], [5, 0, 0, "-", "odecomponent"], [5, 0, 0, "-", "odeobjects"], [5, 6, 1, "", "recreate_expression"], [5, 0, 0, "-", "utils"]], "gotran.model.DerivativeExpression": [[5, 4, 1, "", "dep_var"], [5, 4, 1, "", "der_expr"]], "gotran.model.Dt": [[5, 2, 1, "", "update_unit"]], "gotran.model.Expression": [[5, 4, 1, "", "dependent"], [5, 4, 1, "", "expr"], [5, 4, 1, "", "is_state_expression"], [5, 2, 1, "", "replace_expr"], [5, 4, 1, "", "sym"]], "gotran.model.IndexedObject": [[5, 4, 1, "", "basename"], [5, 2, 1, "", "default_parameters"], [5, 4, 1, "", "enum"], [5, 4, 1, "", "indices"], [5, 4, 1, "", "offset_str"], [5, 4, 1, "", "shape"], [5, 4, 1, "", "sym"]], "gotran.model.ODE": [[5, 4, 1, "", "component_names"], [5, 2, 1, "", "expanded_expression"], [5, 2, 1, "", "extract_components"], [5, 2, 1, "", "finalize"], [5, 2, 1, "", "import_ode"], [5, 4, 1, "", "intermediate_symbols"], [5, 4, 1, "", "is_dae"], [5, 4, 1, "", "mass_matrix"], [5, 4, 1, "", "ns"], [5, 4, 1, "", "parameter_symbols"], [5, 2, 1, "", "parameter_values"], [5, 4, 1, "", "present_component"], [5, 2, 1, "", "register_ode_object"], [5, 2, 1, "", "save"], [5, 2, 1, "", "signature"], [5, 4, 1, "", "state_symbols"], [5, 2, 1, "", "state_values"]], "gotran.model.ODEComponent": [[5, 2, 1, "", "add_algebraic"], [5, 2, 1, "", "add_comment"], [5, 2, 1, "", "add_component"], [5, 2, 1, "", "add_derivative"], [5, 2, 1, "", "add_intermediate"], [5, 2, 1, "", "add_parameter"], [5, 2, 1, "", "add_parameters"], [5, 2, 1, "", "add_solve_state"], [5, 2, 1, "", "add_state"], [5, 2, 1, "", "add_state_solution"], [5, 2, 1, "", "add_states"], [5, 4, 1, "", "comments"], [5, 4, 1, "", "components"], [5, 2, 1, "", "finalize_component"], [5, 4, 1, "", "full_state_vector"], [5, 4, 1, "", "full_states"], [5, 2, 1, "", "get_object"], [5, 4, 1, "", "intermediates"], [5, 4, 1, "", "is_complete"], [5, 4, 1, "", "is_finalized"], [5, 4, 1, "", "is_locally_complete"], [5, 4, 1, "", "num_components"], [5, 4, 1, "", "num_full_states"], [5, 4, 1, "", "num_intermediates"], [5, 4, 1, "", "num_parameters"], [5, 4, 1, "", "num_rate_expressions"], [5, 4, 1, "", "num_state_expressions"], [5, 4, 1, "", "num_states"], [5, 4, 1, "", "parameters"], [5, 4, 1, "", "parent"], [5, 4, 1, "", "rate_expressions"], [5, 4, 1, "", "root"], [5, 4, 1, "", "state_expressions"], [5, 4, 1, "", "states"], [5, 4, 1, "", "t"], [5, 4, 1, "", "time"]], "gotran.model.ODEObject": [[5, 4, 1, "", "name"], [5, 2, 1, "", "rename"]], "gotran.model.ODEValueObject": [[5, 4, 1, "", "param"], [5, 2, 1, "", "rename"], [5, 4, 1, "", "sym"], [5, 4, 1, "", "unit"], [5, 2, 1, "", "update"], [5, 4, 1, "", "value"]], "gotran.model.Parameter": [[5, 4, 1, "", "init"]], "gotran.model.RateExpression": [[5, 4, 1, "", "states"]], "gotran.model.State": [[5, 4, 1, "", "init"], [5, 4, 1, "", "is_solved"], [5, 4, 1, "", "sym"]], "gotran.model.StateDerivative": [[5, 4, 1, "", "sym"]], "gotran.model.StateExpression": [[5, 4, 1, "", "state"]], "gotran.model.StateSolution": [[5, 4, 1, "", "state"]], "gotran.model.Time": [[5, 2, 1, "", "update_unit"]], "gotran.model.expressions": [[5, 1, 1, "", "AlgebraicExpression"], [5, 1, 1, "", "DerivativeExpression"], [5, 1, 1, "", "Expression"], [5, 1, 1, "", "IndexedExpression"], [5, 1, 1, "", "Intermediate"], [5, 1, 1, "", "ParameterIndexedExpression"], [5, 1, 1, "", "RateExpression"], [5, 1, 1, "", "StateDerivative"], [5, 1, 1, "", "StateExpression"], [5, 1, 1, "", "StateIndexedExpression"], [5, 1, 1, "", "StateSolution"], [5, 6, 1, "", "recreate_expression"]], "gotran.model.expressions.DerivativeExpression": [[5, 4, 1, "", "dep_var"], [5, 4, 1, "", "der_expr"]], "gotran.model.expressions.Expression": [[5, 4, 1, "", "dependent"], [5, 4, 1, "", "expr"], [5, 4, 1, "", "is_state_expression"], [5, 2, 1, "", "replace_expr"], [5, 4, 1, "", "sym"]], "gotran.model.expressions.RateExpression": [[5, 4, 1, "", "states"]], "gotran.model.expressions.StateDerivative": [[5, 4, 1, "", "sym"]], "gotran.model.expressions.StateExpression": [[5, 4, 1, "", "state"]], "gotran.model.expressions.StateSolution": [[5, 4, 1, "", "state"]], "gotran.model.loadmodel": [[5, 6, 1, "", "exec_ode"], [5, 6, 1, "", "load_ode"]], "gotran.model.ode": [[5, 1, 1, "", "ODE"]], "gotran.model.ode.ODE": [[5, 4, 1, "", "component_names"], [5, 2, 1, "", "expanded_expression"], [5, 2, 1, "", "extract_components"], [5, 2, 1, "", "finalize"], [5, 2, 1, "", "import_ode"], [5, 4, 1, "", "intermediate_symbols"], [5, 4, 1, "", "is_dae"], [5, 4, 1, "", "mass_matrix"], [5, 4, 1, "", "ns"], [5, 4, 1, "", "parameter_symbols"], [5, 2, 1, "", "parameter_values"], [5, 4, 1, "", "present_component"], [5, 2, 1, "", "register_ode_object"], [5, 2, 1, "", "save"], [5, 2, 1, "", "signature"], [5, 4, 1, "", "state_symbols"], [5, 2, 1, "", "state_values"]], "gotran.model.odecomponent": [[5, 1, 1, "", "ODEComponent"]], "gotran.model.odecomponent.ODEComponent": [[5, 2, 1, "", "add_algebraic"], [5, 2, 1, "", "add_comment"], [5, 2, 1, "", "add_component"], [5, 2, 1, "", "add_derivative"], [5, 2, 1, "", "add_intermediate"], [5, 2, 1, "", "add_parameter"], [5, 2, 1, "", "add_parameters"], [5, 2, 1, "", "add_solve_state"], [5, 2, 1, "", "add_state"], [5, 2, 1, "", "add_state_solution"], [5, 2, 1, "", "add_states"], [5, 4, 1, "", "comments"], [5, 4, 1, "", "components"], [5, 2, 1, "", "finalize_component"], [5, 4, 1, "", "full_state_vector"], [5, 4, 1, "", "full_states"], [5, 2, 1, "", "get_object"], [5, 4, 1, "", "intermediates"], [5, 4, 1, "", "is_complete"], [5, 4, 1, "", "is_finalized"], [5, 4, 1, "", "is_locally_complete"], [5, 4, 1, "", "num_components"], [5, 4, 1, "", "num_full_states"], [5, 4, 1, "", "num_intermediates"], [5, 4, 1, "", "num_parameters"], [5, 4, 1, "", "num_rate_expressions"], [5, 4, 1, "", "num_state_expressions"], [5, 4, 1, "", "num_states"], [5, 4, 1, "", "parameters"], [5, 4, 1, "", "parent"], [5, 4, 1, "", "rate_expressions"], [5, 4, 1, "", "root"], [5, 4, 1, "", "state_expressions"], [5, 4, 1, "", "states"], [5, 4, 1, "", "t"], [5, 4, 1, "", "time"]], "gotran.model.odeobjects": [[5, 1, 1, "", "Comment"], [5, 1, 1, "", "Dt"], [5, 1, 1, "", "IndexedObject"], [5, 1, 1, "", "ODEObject"], [5, 1, 1, "", "ODEValueObject"], [5, 1, 1, "", "Parameter"], [5, 1, 1, "", "ParameterIndexedObject"], [5, 1, 1, "", "State"], [5, 1, 1, "", "StateIndexedObject"], [5, 1, 1, "", "Time"], [5, 6, 1, "", "cmp"], [5, 6, 1, "", "cmp_to_key"]], "gotran.model.odeobjects.Dt": [[5, 2, 1, "", "update_unit"]], "gotran.model.odeobjects.IndexedObject": [[5, 4, 1, "", "basename"], [5, 2, 1, "", "default_parameters"], [5, 4, 1, "", "enum"], [5, 4, 1, "", "indices"], [5, 4, 1, "", "offset_str"], [5, 4, 1, "", "shape"], [5, 4, 1, "", "sym"]], "gotran.model.odeobjects.ODEObject": [[5, 4, 1, "", "name"], [5, 2, 1, "", "rename"]], "gotran.model.odeobjects.ODEValueObject": [[5, 4, 1, "", "param"], [5, 2, 1, "", "rename"], [5, 4, 1, "", "sym"], [5, 4, 1, "", "unit"], [5, 2, 1, "", "update"], [5, 4, 1, "", "value"]], "gotran.model.odeobjects.Parameter": [[5, 4, 1, "", "init"]], "gotran.model.odeobjects.ParameterIndexedObject": [[5, 4, 1, "", "parameter"]], "gotran.model.odeobjects.State": [[5, 4, 1, "", "init"], [5, 4, 1, "", "is_solved"], [5, 4, 1, "", "sym"]], "gotran.model.odeobjects.StateIndexedObject": [[5, 4, 1, "", "state"]], "gotran.model.odeobjects.Time": [[5, 2, 1, "", "update_unit"]], "gotran.model.utils": [[5, 1, 1, "", "ODEObjectList"], [5, 1, 1, "", "RateDict"], [5, 1, 1, "", "iter_objects"], [5, 6, 1, "", "ode_components"], [5, 6, 1, "", "ode_objects"], [5, 6, 1, "", "ode_primitives"], [5, 6, 1, "", "special_expression"]], "gotran.model.utils.ODEObjectList": [[5, 2, 1, "", "append"], [5, 2, 1, "", "count"], [5, 2, 1, "", "extend"], [5, 2, 1, "", "get"], [5, 2, 1, "", "index"], [5, 2, 1, "", "insert"], [5, 2, 1, "", "keys"], [5, 2, 1, "", "pop"], [5, 2, 1, "", "remove"], [5, 2, 1, "", "reverse"], [5, 2, 1, "", "sort"]], "gotran.model.utils.iter_objects": [[5, 2, 1, "", "next"]], "gotran.scripts": [[6, 0, 0, "-", "cellml2gotran"], [6, 0, 0, "-", "gotran2c"], [6, 0, 0, "-", "gotran2cpp"], [6, 0, 0, "-", "gotran2cuda"], [6, 0, 0, "-", "gotran2dolfin"], [6, 0, 0, "-", "gotran2julia"], [6, 0, 0, "-", "gotran2latex"], [6, 0, 0, "-", "gotran2matlab"], [6, 0, 0, "-", "gotran2md"], [6, 0, 0, "-", "gotran2opencl"], [6, 0, 0, "-", "gotran2py"], [6, 0, 0, "-", "gotranexport"], [6, 0, 0, "-", "gotranprobe"], [6, 0, 0, "-", "gotranrun"]], "gotran.scripts.cellml2gotran": [[6, 6, 1, "", "define_parser"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2c": [[6, 6, 1, "", "gotran2c"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2cpp": [[6, 6, 1, "", "gotran2cpp"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2cuda": [[6, 6, 1, "", "gotran2cuda"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2dolfin": [[6, 6, 1, "", "gotran2dolfin"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2julia": [[6, 6, 1, "", "gotran2julia"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2latex": [[6, 6, 1, "", "gotran2latex"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2matlab": [[6, 6, 1, "", "gotran2matlab"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2md": [[6, 6, 1, "", "gotran2md"], [6, 6, 1, "", "main"], [6, 6, 1, "", "make_table"]], "gotran.scripts.gotran2opencl": [[6, 6, 1, "", "gotran2opencl"], [6, 6, 1, "", "main"]], "gotran.scripts.gotran2py": [[6, 6, 1, "", "gotran2py"], [6, 6, 1, "", "main"]], "gotran.scripts.gotranexport": [[6, 6, 1, "", "gotranexport"], [6, 6, 1, "", "main"]], "gotran.scripts.gotranprobe": [[6, 6, 1, "", "gotranprobe"], [6, 6, 1, "", "join_indent_and_split"], [6, 6, 1, "", "main"]], "gotran.scripts.gotranrun": [[6, 6, 1, "", "gotranrun"], [6, 6, 1, "", "main"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"gotran": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "packag": [0, 1, 2, 3, 4, 5, 6, 7], "subpackag": 0, "modul": [0, 1, 2, 3, 4, 5, 6, 7], "content": [0, 1, 2, 3, 4, 5, 6, 7], "algorithm": 1, "submodul": [1, 2, 3, 4, 5, 6, 7], "symbolicnewtonsolut": 1, "codegener": 2, "algorithmcompon": 2, "avoidsympycontract": 2, "codecompon": 2, "compilemodul": 2, "latexcodegener": 2, "oderepresent": 2, "solvercompon": 2, "sympy_cs": 2, "common": 3, "dict": 3, "disk": 3, "option": 3, "input": 4, "cellml": 4, "mathml": 4, "model": 5, "cellmodel": 5, "express": 5, "loadmodel": 5, "od": [5, 8], "odecompon": 5, "odeobject": 5, "util": [5, 7], "script": 6, "cellml2gotran": 6, "gotran2c": 6, "gotran2cpp": 6, "gotran2cuda": 6, "gotran2dolfin": 6, "gotran2julia": 6, "gotran2latex": 6, "gotran2matlab": 6, "gotran2md": 6, "gotran2opencl": 6, "gotran2pi": 6, "gotranexport": 6, "gotranprob": 6, "gotranrun": 6, "solver": 7, "odesolv": 7, "scipysolv": 7, "sundialssolv": 7, "gener": 8, "translat": 8, "instal": 8, "sourc": 8, "code": 8, "contributor": 8, "licens": 8, "programm": 8, "refer": 8, "indic": 8, "tabl": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"gotran package": [[0, "gotran-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-gotran"], [1, "module-gotran.algorithms"], [2, "module-gotran.codegeneration"], [3, "module-gotran.common"], [4, "module-gotran.input"], [5, "module-gotran.model"], [6, "module-gotran.scripts"], [7, "module-contents"]], "gotran.algorithms package": [[1, "gotran-algorithms-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"]], "gotran.algorithms.symbolicnewtonsolution module": [[1, "module-gotran.algorithms.symbolicnewtonsolution"]], "gotran.codegeneration package": [[2, "gotran-codegeneration-package"]], "gotran.codegeneration.algorithmcomponents module": [[2, "module-gotran.codegeneration.algorithmcomponents"]], "gotran.codegeneration.avoidsympycontractions module": [[2, "module-gotran.codegeneration.avoidsympycontractions"]], "gotran.codegeneration.codecomponent module": [[2, "module-gotran.codegeneration.codecomponent"]], "gotran.codegeneration.codegenerators module": [[2, "module-gotran.codegeneration.codegenerators"]], "gotran.codegeneration.compilemodule module": [[2, "module-gotran.codegeneration.compilemodule"]], "gotran.codegeneration.latexcodegenerator module": [[2, "module-gotran.codegeneration.latexcodegenerator"]], "gotran.codegeneration.oderepresentation module": [[2, "module-gotran.codegeneration.oderepresentation"]], "gotran.codegeneration.solvercomponents module": [[2, "module-gotran.codegeneration.solvercomponents"]], "gotran.codegeneration.sympy_cse module": [[2, "gotran-codegeneration-sympy-cse-module"]], "gotran.common package": [[3, "gotran-common-package"]], "gotran.common.dicts module": [[3, "module-gotran.common.dicts"]], "gotran.common.disk module": [[3, "module-gotran.common.disk"]], "gotran.common.options module": [[3, "module-gotran.common.options"]], "gotran.input package": [[4, "gotran-input-package"]], "gotran.input.cellml module": [[4, "module-gotran.input.cellml"]], "gotran.input.mathml module": [[4, "module-gotran.input.mathml"]], "gotran.model package": [[5, "gotran-model-package"]], "gotran.model.cellmodel module": [[5, "gotran-model-cellmodel-module"]], "gotran.model.expressions module": [[5, "module-gotran.model.expressions"]], "gotran.model.loadmodel module": [[5, "module-gotran.model.loadmodel"]], "gotran.model.ode module": [[5, "module-gotran.model.ode"]], "gotran.model.odecomponent module": [[5, "module-gotran.model.odecomponent"]], "gotran.model.odeobjects module": [[5, "module-gotran.model.odeobjects"]], "gotran.model.utils module": [[5, "module-gotran.model.utils"]], "gotran.scripts package": [[6, "gotran-scripts-package"]], "gotran.scripts.cellml2gotran module": [[6, "module-gotran.scripts.cellml2gotran"]], "gotran.scripts.gotran2c module": [[6, "module-gotran.scripts.gotran2c"]], "gotran.scripts.gotran2cpp module": [[6, "module-gotran.scripts.gotran2cpp"]], "gotran.scripts.gotran2cuda module": [[6, "module-gotran.scripts.gotran2cuda"]], "gotran.scripts.gotran2dolfin module": [[6, "module-gotran.scripts.gotran2dolfin"]], "gotran.scripts.gotran2julia module": [[6, "module-gotran.scripts.gotran2julia"]], "gotran.scripts.gotran2latex module": [[6, "module-gotran.scripts.gotran2latex"]], "gotran.scripts.gotran2matlab module": [[6, "module-gotran.scripts.gotran2matlab"]], "gotran.scripts.gotran2md module": [[6, "module-gotran.scripts.gotran2md"]], "gotran.scripts.gotran2opencl module": [[6, "module-gotran.scripts.gotran2opencl"]], "gotran.scripts.gotran2py module": [[6, "module-gotran.scripts.gotran2py"]], "gotran.scripts.gotranexport module": [[6, "module-gotran.scripts.gotranexport"]], "gotran.scripts.gotranprobe module": [[6, "module-gotran.scripts.gotranprobe"]], "gotran.scripts.gotranrun module": [[6, "module-gotran.scripts.gotranrun"]], "gotran.solver package": [[7, "gotran-solver-package"]], "gotran.solver.odesolver module": [[7, "gotran-solver-odesolver-module"]], "gotran.solver.scipysolver module": [[7, "gotran-solver-scipysolver-module"]], "gotran.solver.sundialssolver module": [[7, "gotran-solver-sundialssolver-module"]], "gotran.solver.utils module": [[7, "gotran-solver-utils-module"]], "Gotran - General ODE TRAnslator": [[8, "gotran-general-ode-translator"]], "Installation": [[8, "installation"]], "Source code": [[8, "source-code"]], "Contributors": [[8, "contributors"]], "License": [[8, "license"]], "Programmers reference:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "gotran": [[9, "gotran"]]}, "indexentries": {"algebraicexpression (class in gotran)": [[0, "gotran.AlgebraicExpression"]], "ccodegenerator (class in gotran)": [[0, "gotran.CCodeGenerator"]], "cudacodegenerator (class in gotran)": [[0, "gotran.CUDACodeGenerator"]], "cellmlparser (class in gotran)": [[0, "gotran.CellMLParser"]], "codecomponent (class in gotran)": [[0, "gotran.CodeComponent"]], "comment (class in gotran)": [[0, "gotran.Comment"]], "commonsubexpressionode (class in gotran)": [[0, "gotran.CommonSubExpressionODE"]], "cppcodegenerator (class in gotran)": [[0, "gotran.CppCodeGenerator"]], "derivativeexpression (class in gotran)": [[0, "gotran.DerivativeExpression"]], "dt (class in gotran)": [[0, "gotran.Dt"]], "expression (class in gotran)": [[0, "gotran.Expression"]], "factorizedjacobiancomponent (class in gotran)": [[0, "gotran.FactorizedJacobianComponent"]], "forwardbackwardsubstitutioncomponent (class in gotran)": [[0, "gotran.ForwardBackwardSubstitutionComponent"]], "gotranexception": [[0, "gotran.GotranException"], [3, "gotran.common.GotranException"]], "indexedexpression (class in gotran)": [[0, "gotran.IndexedExpression"]], "indexedobject (class in gotran)": [[0, "gotran.IndexedObject"]], "intermediate (class in gotran)": [[0, "gotran.Intermediate"]], "jacobianactioncomponent (class in gotran)": [[0, "gotran.JacobianActionComponent"]], "jacobiancomponent (class in gotran)": [[0, "gotran.JacobianComponent"]], "juliacodegenerator (class in gotran)": [[0, "gotran.JuliaCodeGenerator"]], "latexcodegenerator (class in gotran)": [[0, "gotran.LatexCodeGenerator"]], "linearizedderivativecomponent (class in gotran)": [[0, "gotran.LinearizedDerivativeComponent"]], "matlabcodegenerator (class in gotran)": [[0, "gotran.MatlabCodeGenerator"]], "ode (class in gotran)": [[0, "gotran.ODE"]], "odecomponent (class in gotran)": [[0, "gotran.ODEComponent"]], "odeobject (class in gotran)": [[0, "gotran.ODEObject"]], "odevalueobject (class in gotran)": [[0, "gotran.ODEValueObject"]], "parameter (class in gotran)": [[0, "gotran.Parameter"]], "pythoncodegenerator (class in gotran)": [[0, "gotran.PythonCodeGenerator"]], "rateexpression (class in gotran)": [[0, "gotran.RateExpression"]], "state (class in gotran)": [[0, "gotran.State"]], "statederivative (class in gotran)": [[0, "gotran.StateDerivative"]], "stateexpression (class in gotran)": [[0, "gotran.StateExpression"]], "statesolution (class in gotran)": [[0, "gotran.StateSolution"]], "time (class in gotran)": [[0, "gotran.Time"]], "add_algebraic() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_algebraic"]], "add_comment() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_comment"]], "add_component() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_component"]], "add_derivative() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_derivative"]], "add_indexed_expression() (gotran.codecomponent method)": [[0, "gotran.CodeComponent.add_indexed_expression"]], "add_indexed_object() (gotran.codecomponent method)": [[0, "gotran.CodeComponent.add_indexed_object"]], "add_intermediate() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_intermediate"]], "add_parameter() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_parameter"]], "add_parameters() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_parameters"]], "add_solve_state() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_solve_state"]], "add_state() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_state"]], "add_state_solution() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_state_solution"]], "add_states() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.add_states"]], "args() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.args"]], "args() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.args"]], "args() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.args"]], "args() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.args"]], "basename (gotran.indexedobject property)": [[0, "gotran.IndexedObject.basename"]], "cellml2ode() (in module gotran)": [[0, "gotran.cellml2ode"]], "check_and_register_component_variables() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.check_and_register_component_variables"]], "class_code() (gotran.cppcodegenerator method)": [[0, "gotran.CppCodeGenerator.class_code"]], "class_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.class_code"]], "class_name() (in module gotran)": [[0, "gotran.class_name"]], "closure_end (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.closure_end"]], "closure_end (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.closure_end"]], "closure_end (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.closure_end"]], "closure_start (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.closure_start"]], "closure_start (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.closure_start"]], "closure_start (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.closure_start"]], "cmp() (in module gotran)": [[0, "gotran.cmp"]], "cmp_to_key() (in module gotran)": [[0, "gotran.cmp_to_key"]], "code_dict() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.code_dict"]], "comment (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.comment"]], "comment (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.comment"]], "comment (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.comment"]], "comments (gotran.odecomponent property)": [[0, "gotran.ODEComponent.comments"]], "component_names (gotran.ode property)": [[0, "gotran.ODE.component_names"]], "components (gotran.odecomponent property)": [[0, "gotran.ODEComponent.components"]], "componentwise_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.componentwise_code"]], "componentwise_derivative() (in module gotran)": [[0, "gotran.componentwise_derivative"]], "decorators() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.decorators"]], "default_parameters() (gotran.cudacodegenerator static method)": [[0, "gotran.CUDACodeGenerator.default_parameters"]], "default_parameters() (gotran.cellmlparser static method)": [[0, "gotran.CellMLParser.default_parameters"]], "default_parameters() (gotran.codecomponent static method)": [[0, "gotran.CodeComponent.default_parameters"]], "default_parameters() (gotran.indexedobject static method)": [[0, "gotran.IndexedObject.default_parameters"]], "default_parameters() (gotran.juliacodegenerator static method)": [[0, "gotran.JuliaCodeGenerator.default_parameters"]], "default_parameters() (gotran.matlabcodegenerator static method)": [[0, "gotran.MatlabCodeGenerator.default_parameters"]], "dep_var (gotran.derivativeexpression property)": [[0, "gotran.DerivativeExpression.dep_var"]], "dependent (gotran.expression property)": [[0, "gotran.Expression.dependent"]], "der_expr (gotran.derivativeexpression property)": [[0, "gotran.DerivativeExpression.der_expr"]], "diagonal_jacobian_action_expressions() (in module gotran)": [[0, "gotran.diagonal_jacobian_action_expressions"]], "diagonal_jacobian_expressions() (in module gotran)": [[0, "gotran.diagonal_jacobian_expressions"]], "enum (gotran.indexedobject property)": [[0, "gotran.IndexedObject.enum"]], "exec_ode() (in module gotran)": [[0, "gotran.exec_ode"]], "expanded_expression() (gotran.ode method)": [[0, "gotran.ODE.expanded_expression"]], "expr (gotran.expression property)": [[0, "gotran.Expression.expr"]], "extract_components() (gotran.ode method)": [[0, "gotran.ODE.extract_components"]], "factorized_jacobian_expressions() (in module gotran)": [[0, "gotran.factorized_jacobian_expressions"]], "field_parameters_setter_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.field_parameters_setter_code"]], "field_states_getter_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.field_states_getter_code"]], "field_states_setter_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.field_states_setter_code"]], "finalize() (gotran.ode method)": [[0, "gotran.ODE.finalize"]], "finalize_component() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.finalize_component"]], "float_types (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.float_types"]], "float_types (gotran.pythoncodegenerator attribute)": [[0, "gotran.PythonCodeGenerator.float_types"]], "format_component_label() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_component_label"]], "format_description() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_description"]], "format_expr() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_expr"]], "format_global_options() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_global_options"]], "format_options() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_options"]], "format_packages() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_packages"]], "format_param_table_row() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_param_table_row"]], "format_state_table_row() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_state_table_row"]], "format_unit() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.format_unit"]], "forward_backward_subst_expressions() (in module gotran)": [[0, "gotran.forward_backward_subst_expressions"]], "full_state_vector (gotran.odecomponent property)": [[0, "gotran.ODEComponent.full_state_vector"]], "full_states (gotran.odecomponent property)": [[0, "gotran.ODEComponent.full_states"]], "function_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.function_code"]], "function_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.function_code"]], "function_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.function_code"]], "function_code() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.function_code"]], "function_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.function_code"]], "generate() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.generate"]], "generate_components() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.generate_components"]], "generate_parameter_table() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.generate_parameter_table"]], "generate_state_table() (gotran.latexcodegenerator method)": [[0, "gotran.LatexCodeGenerator.generate_state_table"]], "get_iterator() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.get_iterator"]], "get_object() (gotran.odecomponent method)": [[0, "gotran.ODEComponent.get_object"]], "get_parents() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.get_parents"]], "gotran": [[0, "module-gotran"]], "import_ode() (gotran.ode method)": [[0, "gotran.ODE.import_ode"]], "indent (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.indent"]], "indent (gotran.cudacodegenerator attribute)": [[0, "gotran.CUDACodeGenerator.indent"]], "indent (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.indent"]], "indent (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.indent"]], "indent_str (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.indent_str"]], "indent_str (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.indent_str"]], "indent_str (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.indent_str"]], "index() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.index"]], "index() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.index"]], "index() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.index"]], "indexed_objects() (gotran.codecomponent method)": [[0, "gotran.CodeComponent.indexed_objects"]], "indices (gotran.indexedobject property)": [[0, "gotran.IndexedObject.indices"]], "init (gotran.parameter property)": [[0, "gotran.Parameter.init"]], "init (gotran.state property)": [[0, "gotran.State.init"]], "init_field_parameters_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.init_field_parameters_code"]], "init_parameters_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.init_parameters_code"]], "init_states_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.init_states_code"]], "init_states_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.init_states_code"]], "init_states_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.init_states_code"]], "init_states_code() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.init_states_code"]], "init_states_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.init_states_code"]], "intermediate_symbols (gotran.ode property)": [[0, "gotran.ODE.intermediate_symbols"]], "intermediates (gotran.odecomponent property)": [[0, "gotran.ODEComponent.intermediates"]], "is_complete (gotran.odecomponent property)": [[0, "gotran.ODEComponent.is_complete"]], "is_dae (gotran.ode property)": [[0, "gotran.ODE.is_dae"]], "is_finalized (gotran.odecomponent property)": [[0, "gotran.ODEComponent.is_finalized"]], "is_locally_complete (gotran.odecomponent property)": [[0, "gotran.ODEComponent.is_locally_complete"]], "is_solved (gotran.state property)": [[0, "gotran.State.is_solved"]], "is_state_expression (gotran.expression property)": [[0, "gotran.Expression.is_state_expression"]], "jacobian_action_expressions() (in module gotran)": [[0, "gotran.jacobian_action_expressions"]], "jacobian_expressions() (in module gotran)": [[0, "gotran.jacobian_expressions"]], "language (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.language"]], "language (gotran.cudacodegenerator attribute)": [[0, "gotran.CUDACodeGenerator.language"]], "language (gotran.cppcodegenerator attribute)": [[0, "gotran.CppCodeGenerator.language"]], "language (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.language"]], "language (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.language"]], "language (gotran.pythoncodegenerator attribute)": [[0, "gotran.PythonCodeGenerator.language"]], "line_cont (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.line_cont"]], "line_cont (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.line_cont"]], "line_cont (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.line_cont"]], "line_ending (gotran.ccodegenerator attribute)": [[0, "gotran.CCodeGenerator.line_ending"]], "line_ending (gotran.juliacodegenerator attribute)": [[0, "gotran.JuliaCodeGenerator.line_ending"]], "line_ending (gotran.matlabcodegenerator attribute)": [[0, "gotran.MatlabCodeGenerator.line_ending"]], "linearized_derivatives() (in module gotran)": [[0, "gotran.linearized_derivatives"]], "load_ode() (in module gotran)": [[0, "gotran.load_ode"]], "mass_matrix (gotran.ode property)": [[0, "gotran.ODE.mass_matrix"]], "mass_matrix() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.mass_matrix"]], "module": [[0, "module-gotran"], [1, "module-gotran.algorithms"], [1, "module-gotran.algorithms.symbolicnewtonsolution"], [2, "module-gotran.codegeneration"], [2, "module-gotran.codegeneration.algorithmcomponents"], [2, "module-gotran.codegeneration.avoidsympycontractions"], [2, "module-gotran.codegeneration.codecomponent"], [2, "module-gotran.codegeneration.codegenerators"], [2, "module-gotran.codegeneration.compilemodule"], [2, "module-gotran.codegeneration.latexcodegenerator"], [2, "module-gotran.codegeneration.oderepresentation"], [2, "module-gotran.codegeneration.solvercomponents"], [3, "module-gotran.common"], [3, "module-gotran.common.dicts"], [3, "module-gotran.common.disk"], [3, "module-gotran.common.options"], [4, "module-gotran.input"], [4, "module-gotran.input.cellml"], [4, "module-gotran.input.mathml"], [5, "module-gotran.model"], [5, "module-gotran.model.expressions"], [5, "module-gotran.model.loadmodel"], [5, "module-gotran.model.ode"], [5, "module-gotran.model.odecomponent"], [5, "module-gotran.model.odeobjects"], [5, "module-gotran.model.utils"], [6, "module-gotran.scripts"], [6, "module-gotran.scripts.cellml2gotran"], [6, "module-gotran.scripts.gotran2c"], [6, "module-gotran.scripts.gotran2cpp"], [6, "module-gotran.scripts.gotran2cuda"], [6, "module-gotran.scripts.gotran2dolfin"], [6, "module-gotran.scripts.gotran2julia"], [6, "module-gotran.scripts.gotran2latex"], [6, "module-gotran.scripts.gotran2matlab"], [6, "module-gotran.scripts.gotran2md"], [6, "module-gotran.scripts.gotran2opencl"], [6, "module-gotran.scripts.gotran2py"], [6, "module-gotran.scripts.gotranexport"], [6, "module-gotran.scripts.gotranprobe"], [6, "module-gotran.scripts.gotranrun"]], "module_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.module_code"]], "module_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.module_code"]], "module_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.module_code"]], "module_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.module_code"]], "monitor_name_to_index_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.monitor_name_to_index_code"]], "monitored_enum_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.monitored_enum_code"]], "monitored_expressions() (in module gotran)": [[0, "gotran.monitored_expressions"]], "monitored_names_code() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.monitored_names_code"]], "name (gotran.odeobject property)": [[0, "gotran.ODEObject.name"]], "ns (gotran.ode property)": [[0, "gotran.ODE.ns"]], "num_components (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_components"]], "num_full_states (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_full_states"]], "num_intermediates (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_intermediates"]], "num_parameters (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_parameters"]], "num_rate_expressions (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_rate_expressions"]], "num_state_expressions (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_state_expressions"]], "num_states (gotran.odecomponent property)": [[0, "gotran.ODEComponent.num_states"]], "obj_name() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.obj_name"]], "offset_str (gotran.indexedobject property)": [[0, "gotran.IndexedObject.offset_str"]], "packages (gotran.latexcodegenerator attribute)": [[0, "gotran.LatexCodeGenerator.packages"]], "param (gotran.odevalueobject property)": [[0, "gotran.ODEValueObject.param"]], "param_name_to_index_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.param_name_to_index_code"]], "parameter_names_list_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.parameter_names_list_code"]], "parameter_symbols (gotran.ode property)": [[0, "gotran.ODE.parameter_symbols"]], "parameter_values() (gotran.ode method)": [[0, "gotran.ODE.parameter_values"]], "parameters (gotran.odecomponent property)": [[0, "gotran.ODEComponent.parameters"]], "parameters_enum_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.parameters_enum_code"]], "parent (gotran.odecomponent property)": [[0, "gotran.ODEComponent.parent"]], "parse_components() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.parse_components"]], "parse_connections() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.parse_connections"]], "parse_documentation() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.parse_documentation"]], "parse_imported_model() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.parse_imported_model"]], "parse_single_component() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.parse_single_component"]], "parse_units() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.parse_units"]], "present_component (gotran.ode property)": [[0, "gotran.ODE.present_component"]], "print_settings (gotran.latexcodegenerator attribute)": [[0, "gotran.LatexCodeGenerator.print_settings"]], "rate_expressions (gotran.odecomponent property)": [[0, "gotran.ODEComponent.rate_expressions"]], "recreate_expression() (in module gotran)": [[0, "gotran.recreate_expression"]], "register_ode_object() (gotran.ode method)": [[0, "gotran.ODE.register_ode_object"]], "rename() (gotran.odeobject method)": [[0, "gotran.ODEObject.rename"]], "rename() (gotran.odevalueobject method)": [[0, "gotran.ODEValueObject.rename"]], "replace_expr() (gotran.expression method)": [[0, "gotran.Expression.replace_expr"]], "rhs_expressions() (in module gotran)": [[0, "gotran.rhs_expressions"]], "root (gotran.odecomponent property)": [[0, "gotran.ODEComponent.root"]], "save() (gotran.ode method)": [[0, "gotran.ODE.save"]], "set_log_level() (in module gotran)": [[0, "gotran.set_log_level"]], "shape (gotran.indexedobject property)": [[0, "gotran.IndexedObject.shape"]], "signature() (gotran.ode method)": [[0, "gotran.ODE.signature"]], "solver_code() (gotran.cudacodegenerator method)": [[0, "gotran.CUDACodeGenerator.solver_code"]], "sort_components() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.sort_components"]], "state (gotran.stateexpression property)": [[0, "gotran.StateExpression.state"]], "state (gotran.statesolution property)": [[0, "gotran.StateSolution.state"]], "state_expressions (gotran.odecomponent property)": [[0, "gotran.ODEComponent.state_expressions"]], "state_name_to_index_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.state_name_to_index_code"]], "state_names_list_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.state_names_list_code"]], "state_symbols (gotran.ode property)": [[0, "gotran.ODE.state_symbols"]], "state_values() (gotran.ode method)": [[0, "gotran.ODE.state_values"]], "states (gotran.odecomponent property)": [[0, "gotran.ODEComponent.states"]], "states (gotran.rateexpression property)": [[0, "gotran.RateExpression.states"]], "states_enum_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.states_enum_code"]], "sym (gotran.expression property)": [[0, "gotran.Expression.sym"]], "sym (gotran.indexedobject property)": [[0, "gotran.IndexedObject.sym"]], "sym (gotran.odevalueobject property)": [[0, "gotran.ODEValueObject.sym"]], "sym (gotran.state property)": [[0, "gotran.State.sym"]], "sym (gotran.statederivative property)": [[0, "gotran.StateDerivative.sym"]], "t (gotran.odecomponent property)": [[0, "gotran.ODEComponent.t"]], "time (gotran.odecomponent property)": [[0, "gotran.ODEComponent.time"]], "to_code() (gotran.ccodegenerator method)": [[0, "gotran.CCodeGenerator.to_code"]], "to_code() (gotran.cppcodegenerator method)": [[0, "gotran.CppCodeGenerator.to_code"]], "to_code() (gotran.juliacodegenerator method)": [[0, "gotran.JuliaCodeGenerator.to_code"]], "to_code() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.to_code"]], "to_code() (gotran.pythoncodegenerator method)": [[0, "gotran.PythonCodeGenerator.to_code"]], "to_gotran() (gotran.cellmlparser method)": [[0, "gotran.CellMLParser.to_gotran"]], "unit (gotran.odevalueobject property)": [[0, "gotran.ODEValueObject.unit"]], "update() (gotran.odevalueobject method)": [[0, "gotran.ODEValueObject.update"]], "update_unit() (gotran.dt method)": [[0, "gotran.Dt.update_unit"]], "update_unit() (gotran.time method)": [[0, "gotran.Time.update_unit"]], "value (gotran.odevalueobject property)": [[0, "gotran.ODEValueObject.value"]], "wrap_body_with_function_prototype() (gotran.ccodegenerator class method)": [[0, "gotran.CCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.cudacodegenerator class method)": [[0, "gotran.CUDACodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.juliacodegenerator static method)": [[0, "gotran.JuliaCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.matlabcodegenerator method)": [[0, "gotran.MatlabCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.pythoncodegenerator static method)": [[0, "gotran.PythonCodeGenerator.wrap_body_with_function_prototype"]], "symbolicnewtonsolution (class in gotran.algorithms.symbolicnewtonsolution)": [[1, "gotran.algorithms.symbolicnewtonsolution.SymbolicNewtonSolution"]], "gotran.algorithms": [[1, "module-gotran.algorithms"]], "gotran.algorithms.symbolicnewtonsolution": [[1, "module-gotran.algorithms.symbolicnewtonsolution"]], "ccodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.CCodeGenerator"]], "ccodegenerator (class in gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator"]], "cudacodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.CUDACodeGenerator"]], "cudacodegenerator (class in gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator"]], "codecomponent (class in gotran.codegeneration)": [[2, "gotran.codegeneration.CodeComponent"]], "codecomponent (class in gotran.codegeneration.codecomponent)": [[2, "gotran.codegeneration.codecomponent.CodeComponent"]], "commonsubexpressionode (class in gotran.codegeneration)": [[2, "gotran.codegeneration.CommonSubExpressionODE"]], "commonsubexpressionode (class in gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.CommonSubExpressionODE"]], "cppcodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.CppCodeGenerator"]], "cppcodegenerator (class in gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.CppCodeGenerator"]], "expliciteuler (class in gotran.codegeneration)": [[2, "gotran.codegeneration.ExplicitEuler"]], "expliciteuler (class in gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.ExplicitEuler"]], "factorizedjacobiancomponent (class in gotran.codegeneration)": [[2, "gotran.codegeneration.FactorizedJacobianComponent"]], "factorizedjacobiancomponent (class in gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.FactorizedJacobianComponent"]], "forwardbackwardsubstitutioncomponent (class in gotran.codegeneration)": [[2, "gotran.codegeneration.ForwardBackwardSubstitutionComponent"]], "forwardbackwardsubstitutioncomponent (class in gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.ForwardBackwardSubstitutionComponent"]], "generalizedrushlarsen (class in gotran.codegeneration)": [[2, "gotran.codegeneration.GeneralizedRushLarsen"]], "generalizedrushlarsen (class in gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.GeneralizedRushLarsen"]], "hybridgeneralizedrushlarsen (class in gotran.codegeneration)": [[2, "gotran.codegeneration.HybridGeneralizedRushLarsen"]], "hybridgeneralizedrushlarsen (class in gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.HybridGeneralizedRushLarsen"]], "jacobianactioncomponent (class in gotran.codegeneration)": [[2, "gotran.codegeneration.JacobianActionComponent"]], "jacobianactioncomponent (class in gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.JacobianActionComponent"]], "jacobiancomponent (class in gotran.codegeneration)": [[2, "gotran.codegeneration.JacobianComponent"]], "jacobiancomponent (class in gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.JacobianComponent"]], "juliacodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.JuliaCodeGenerator"]], "juliacodegenerator (class in gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator"]], "latexcodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.LatexCodeGenerator"]], "latexcodegenerator (class in gotran.codegeneration.latexcodegenerator)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator"]], "linearizedderivativecomponent (class in gotran.codegeneration)": [[2, "gotran.codegeneration.LinearizedDerivativeComponent"]], "linearizedderivativecomponent (class in gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.LinearizedDerivativeComponent"]], "matlabcodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.MatlabCodeGenerator"]], "matlabcodegenerator (class in gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator"]], "oderepresentation (class in gotran.codegeneration.oderepresentation)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation"]], "pythoncodegenerator (class in gotran.codegeneration)": [[2, "gotran.codegeneration.PythonCodeGenerator"]], "pythoncodegenerator (class in gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator"]], "rushlarsen (class in gotran.codegeneration)": [[2, "gotran.codegeneration.RushLarsen"]], "rushlarsen (class in gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.RushLarsen"]], "simplifiedimpliciteuler (class in gotran.codegeneration)": [[2, "gotran.codegeneration.SimplifiedImplicitEuler"]], "simplifiedimpliciteuler (class in gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.SimplifiedImplicitEuler"]], "add_indexed_expression() (gotran.codegeneration.codecomponent method)": [[2, "gotran.codegeneration.CodeComponent.add_indexed_expression"]], "add_indexed_expression() (gotran.codegeneration.codecomponent.codecomponent method)": [[2, "gotran.codegeneration.codecomponent.CodeComponent.add_indexed_expression"]], "add_indexed_object() (gotran.codegeneration.codecomponent method)": [[2, "gotran.codegeneration.CodeComponent.add_indexed_object"]], "add_indexed_object() (gotran.codegeneration.codecomponent.codecomponent method)": [[2, "gotran.codegeneration.codecomponent.CodeComponent.add_indexed_object"]], "args() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.args"]], "args() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.args"]], "args() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.args"]], "args() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.args"]], "args() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.args"]], "args() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.args"]], "args() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.args"]], "args() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.args"]], "class_code() (gotran.codegeneration.cppcodegenerator method)": [[2, "gotran.codegeneration.CppCodeGenerator.class_code"]], "class_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.class_code"]], "class_code() (gotran.codegeneration.codegenerators.cppcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CppCodeGenerator.class_code"]], "class_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.class_code"]], "class_name (gotran.codegeneration.oderepresentation.oderepresentation property)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.class_name"]], "class_name() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.class_name"]], "class_name() (in module gotran.codegeneration.codegenerators)": [[2, "gotran.codegeneration.codegenerators.class_name"]], "closure_end (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.closure_end"]], "closure_end (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.closure_end"]], "closure_end (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.closure_end"]], "closure_end (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.closure_end"]], "closure_end (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.closure_end"]], "closure_end (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.closure_end"]], "closure_start (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.closure_start"]], "closure_start (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.closure_start"]], "closure_start (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.closure_start"]], "closure_start (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.closure_start"]], "closure_start (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.closure_start"]], "closure_start (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.closure_start"]], "code_dict() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.code_dict"]], "code_dict() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.code_dict"]], "comment (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.comment"]], "comment (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.comment"]], "comment (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.comment"]], "comment (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.comment"]], "comment (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.comment"]], "comment (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.comment"]], "compile_module() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.compile_module"]], "compile_module() (in module gotran.codegeneration.compilemodule)": [[2, "gotran.codegeneration.compilemodule.compile_module"]], "componentwise_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.componentwise_code"]], "componentwise_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.componentwise_code"]], "componentwise_derivative() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.componentwise_derivative"]], "componentwise_derivative() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.componentwise_derivative"]], "decorators() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.decorators"]], "decorators() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.decorators"]], "default_parameters() (gotran.codegeneration.cudacodegenerator static method)": [[2, "gotran.codegeneration.CUDACodeGenerator.default_parameters"]], "default_parameters() (gotran.codegeneration.codecomponent static method)": [[2, "gotran.codegeneration.CodeComponent.default_parameters"]], "default_parameters() (gotran.codegeneration.juliacodegenerator static method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.default_parameters"]], "default_parameters() (gotran.codegeneration.matlabcodegenerator static method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.default_parameters"]], "default_parameters() (gotran.codegeneration.codecomponent.codecomponent static method)": [[2, "gotran.codegeneration.codecomponent.CodeComponent.default_parameters"]], "default_parameters() (gotran.codegeneration.codegenerators.cudacodegenerator static method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.default_parameters"]], "default_parameters() (gotran.codegeneration.codegenerators.juliacodegenerator static method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.default_parameters"]], "default_parameters() (gotran.codegeneration.codegenerators.matlabcodegenerator static method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.default_parameters"]], "diagonal_jacobian_action_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.diagonal_jacobian_action_expressions"]], "diagonal_jacobian_action_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.diagonal_jacobian_action_expressions"]], "diagonal_jacobian_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.diagonal_jacobian_expressions"]], "diagonal_jacobian_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.diagonal_jacobian_expressions"]], "explicit_euler_solver() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.explicit_euler_solver"]], "explicit_euler_solver() (in module gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.explicit_euler_solver"]], "factorized_jacobian_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.factorized_jacobian_expressions"]], "factorized_jacobian_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.factorized_jacobian_expressions"]], "field_parameters_setter_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.field_parameters_setter_code"]], "field_parameters_setter_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.field_parameters_setter_code"]], "field_states_getter_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.field_states_getter_code"]], "field_states_getter_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.field_states_getter_code"]], "field_states_setter_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.field_states_setter_code"]], "field_states_setter_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.field_states_setter_code"]], "float_types (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.float_types"]], "float_types (gotran.codegeneration.pythoncodegenerator attribute)": [[2, "gotran.codegeneration.PythonCodeGenerator.float_types"]], "float_types (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.float_types"]], "float_types (gotran.codegeneration.codegenerators.pythoncodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.float_types"]], "format_component_label() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_component_label"]], "format_component_label() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_component_label"]], "format_description() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_description"]], "format_description() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_description"]], "format_expr() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_expr"]], "format_expr() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_expr"]], "format_global_options() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_global_options"]], "format_global_options() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_global_options"]], "format_options() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_options"]], "format_options() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_options"]], "format_packages() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_packages"]], "format_packages() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_packages"]], "format_param_table_row() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_param_table_row"]], "format_param_table_row() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_param_table_row"]], "format_state_table_row() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_state_table_row"]], "format_state_table_row() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_state_table_row"]], "format_unit() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.format_unit"]], "format_unit() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.format_unit"]], "forward_backward_subst_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.forward_backward_subst_expressions"]], "forward_backward_subst_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.forward_backward_subst_expressions"]], "function_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.function_code"]], "function_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.function_code"]], "function_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.function_code"]], "function_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.function_code"]], "generalized_rush_larsen_solver() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.generalized_rush_larsen_solver"]], "generalized_rush_larsen_solver() (in module gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.generalized_rush_larsen_solver"]], "generate() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.generate"]], "generate() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.generate"]], "generate_components() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.generate_components"]], "generate_components() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.generate_components"]], "generate_parameter_table() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.generate_parameter_table"]], "generate_parameter_table() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.generate_parameter_table"]], "generate_state_table() (gotran.codegeneration.latexcodegenerator method)": [[2, "gotran.codegeneration.LatexCodeGenerator.generate_state_table"]], "generate_state_table() (gotran.codegeneration.latexcodegenerator.latexcodegenerator method)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.generate_state_table"]], "get_solver_fn() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.get_solver_fn"]], "get_solver_fn() (in module gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.get_solver_fn"]], "gotran.codegeneration": [[2, "module-gotran.codegeneration"]], "gotran.codegeneration.algorithmcomponents": [[2, "module-gotran.codegeneration.algorithmcomponents"]], "gotran.codegeneration.avoidsympycontractions": [[2, "module-gotran.codegeneration.avoidsympycontractions"]], "gotran.codegeneration.codecomponent": [[2, "module-gotran.codegeneration.codecomponent"]], "gotran.codegeneration.codegenerators": [[2, "module-gotran.codegeneration.codegenerators"]], "gotran.codegeneration.compilemodule": [[2, "module-gotran.codegeneration.compilemodule"]], "gotran.codegeneration.latexcodegenerator": [[2, "module-gotran.codegeneration.latexcodegenerator"]], "gotran.codegeneration.oderepresentation": [[2, "module-gotran.codegeneration.oderepresentation"]], "gotran.codegeneration.solvercomponents": [[2, "module-gotran.codegeneration.solvercomponents"]], "has_cppyy() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.has_cppyy"]], "hybrid_generalized_rush_larsen_solver() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.hybrid_generalized_rush_larsen_solver"]], "hybrid_generalized_rush_larsen_solver() (in module gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.hybrid_generalized_rush_larsen_solver"]], "indent (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.indent"]], "indent (gotran.codegeneration.cudacodegenerator attribute)": [[2, "gotran.codegeneration.CUDACodeGenerator.indent"]], "indent (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.indent"]], "indent (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.indent"]], "indent (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.indent"]], "indent (gotran.codegeneration.codegenerators.cudacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.indent"]], "indent (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.indent"]], "indent (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.indent"]], "indent_str (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.indent_str"]], "indent_str (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.indent_str"]], "indent_str (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.indent_str"]], "indent_str (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.indent_str"]], "indent_str (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.indent_str"]], "indent_str (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.indent_str"]], "index() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.index"]], "index() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.index"]], "index() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.index"]], "index() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.index"]], "index() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.index"]], "index() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.index"]], "indexed_objects() (gotran.codegeneration.codecomponent method)": [[2, "gotran.codegeneration.CodeComponent.indexed_objects"]], "indexed_objects() (gotran.codegeneration.codecomponent.codecomponent method)": [[2, "gotran.codegeneration.codecomponent.CodeComponent.indexed_objects"]], "init_field_parameters_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.init_field_parameters_code"]], "init_field_parameters_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.init_field_parameters_code"]], "init_parameters_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.init_parameters_code"]], "init_parameters_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.init_parameters_code"]], "init_states_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.init_states_code"]], "init_states_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.init_states_code"]], "iter_componentwise_dy() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_componentwise_dy"]], "iter_derivative_expr() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_derivative_expr"]], "iter_dy_body() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_dy_body"]], "iter_jacobian_action_body() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_jacobian_action_body"]], "iter_jacobian_action_expr() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_jacobian_action_expr"]], "iter_jacobian_body() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_jacobian_body"]], "iter_jacobian_expr() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_jacobian_expr"]], "iter_linerized_body() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_linerized_body"]], "iter_linerized_expr() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_linerized_expr"]], "iter_monitored_body() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_monitored_body"]], "iter_monitored_expr() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.iter_monitored_expr"]], "jacobian_action_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.jacobian_action_expressions"]], "jacobian_action_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.jacobian_action_expressions"]], "jacobian_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.jacobian_expressions"]], "jacobian_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.jacobian_expressions"]], "language (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.language"]], "language (gotran.codegeneration.cudacodegenerator attribute)": [[2, "gotran.codegeneration.CUDACodeGenerator.language"]], "language (gotran.codegeneration.cppcodegenerator attribute)": [[2, "gotran.codegeneration.CppCodeGenerator.language"]], "language (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.language"]], "language (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.language"]], "language (gotran.codegeneration.pythoncodegenerator attribute)": [[2, "gotran.codegeneration.PythonCodeGenerator.language"]], "language (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.language"]], "language (gotran.codegeneration.codegenerators.cudacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.language"]], "language (gotran.codegeneration.codegenerators.cppcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CppCodeGenerator.language"]], "language (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.language"]], "language (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.language"]], "language (gotran.codegeneration.codegenerators.pythoncodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.language"]], "line_cont (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.line_cont"]], "line_cont (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.line_cont"]], "line_cont (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.line_cont"]], "line_cont (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.line_cont"]], "line_cont (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.line_cont"]], "line_cont (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.line_cont"]], "line_ending (gotran.codegeneration.ccodegenerator attribute)": [[2, "gotran.codegeneration.CCodeGenerator.line_ending"]], "line_ending (gotran.codegeneration.juliacodegenerator attribute)": [[2, "gotran.codegeneration.JuliaCodeGenerator.line_ending"]], "line_ending (gotran.codegeneration.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.MatlabCodeGenerator.line_ending"]], "line_ending (gotran.codegeneration.codegenerators.ccodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.line_ending"]], "line_ending (gotran.codegeneration.codegenerators.juliacodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.line_ending"]], "line_ending (gotran.codegeneration.codegenerators.matlabcodegenerator attribute)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.line_ending"]], "linearized_derivatives() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.linearized_derivatives"]], "linearized_derivatives() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.linearized_derivatives"]], "mass_matrix() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.mass_matrix"]], "mass_matrix() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.mass_matrix"]], "module_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.module_code"]], "module_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.module_code"]], "module_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.module_code"]], "module_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.module_code"]], "module_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.module_code"]], "module_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.module_code"]], "module_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.module_code"]], "module_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.module_code"]], "monitor_name_to_index_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.monitor_name_to_index_code"]], "monitor_name_to_index_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.monitor_name_to_index_code"]], "monitored_enum_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.monitored_enum_code"]], "monitored_enum_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.monitored_enum_code"]], "monitored_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.monitored_expressions"]], "monitored_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.monitored_expressions"]], "monitored_names_code() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.monitored_names_code"]], "monitored_names_code() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.monitored_names_code"]], "name (gotran.codegeneration.oderepresentation.oderepresentation property)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.name"]], "obj_name() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.obj_name"]], "obj_name() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.obj_name"]], "packages (gotran.codegeneration.latexcodegenerator attribute)": [[2, "gotran.codegeneration.LatexCodeGenerator.packages"]], "packages (gotran.codegeneration.latexcodegenerator.latexcodegenerator attribute)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.packages"]], "param_name_to_index_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.param_name_to_index_code"]], "param_name_to_index_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.param_name_to_index_code"]], "parameter_names_list_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.parameter_names_list_code"]], "parameter_names_list_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.parameter_names_list_code"]], "parameters_enum_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.parameters_enum_code"]], "parameters_enum_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.parameters_enum_code"]], "print_settings (gotran.codegeneration.latexcodegenerator attribute)": [[2, "gotran.codegeneration.LatexCodeGenerator.print_settings"]], "print_settings (gotran.codegeneration.latexcodegenerator.latexcodegenerator attribute)": [[2, "gotran.codegeneration.latexcodegenerator.LatexCodeGenerator.print_settings"]], "rhs_expressions() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.rhs_expressions"]], "rhs_expressions() (in module gotran.codegeneration.algorithmcomponents)": [[2, "gotran.codegeneration.algorithmcomponents.rhs_expressions"]], "rush_larsen_solver() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.rush_larsen_solver"]], "rush_larsen_solver() (in module gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.rush_larsen_solver"]], "set_parameter_prefix() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.set_parameter_prefix"]], "set_state_prefix() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.set_state_prefix"]], "signature() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.signature"]], "simplified_implicit_euler_solver() (in module gotran.codegeneration)": [[2, "gotran.codegeneration.simplified_implicit_euler_solver"]], "simplified_implicit_euler_solver() (in module gotran.codegeneration.solvercomponents)": [[2, "gotran.codegeneration.solvercomponents.simplified_implicit_euler_solver"]], "solver_code() (gotran.codegeneration.cudacodegenerator method)": [[2, "gotran.codegeneration.CUDACodeGenerator.solver_code"]], "solver_code() (gotran.codegeneration.codegenerators.cudacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.solver_code"]], "state_name_to_index_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.state_name_to_index_code"]], "state_name_to_index_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.state_name_to_index_code"]], "state_names_list_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.state_names_list_code"]], "state_names_list_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.state_names_list_code"]], "states_enum_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.states_enum_code"]], "states_enum_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.states_enum_code"]], "subs() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.subs"]], "symbol_subs (gotran.codegeneration.oderepresentation.oderepresentation property)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.symbol_subs"]], "to_code() (gotran.codegeneration.ccodegenerator method)": [[2, "gotran.codegeneration.CCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.cppcodegenerator method)": [[2, "gotran.codegeneration.CppCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.juliacodegenerator method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.pythoncodegenerator method)": [[2, "gotran.codegeneration.PythonCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.codegenerators.ccodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.codegenerators.cppcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.CppCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.codegenerators.juliacodegenerator method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.to_code"]], "to_code() (gotran.codegeneration.codegenerators.pythoncodegenerator method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.to_code"]], "update_index() (gotran.codegeneration.oderepresentation.oderepresentation method)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.update_index"]], "used_in_linear_dy (gotran.codegeneration.oderepresentation.oderepresentation property)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.used_in_linear_dy"]], "used_in_monitoring (gotran.codegeneration.oderepresentation.oderepresentation property)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.used_in_monitoring"]], "used_in_single_dy (gotran.codegeneration.oderepresentation.oderepresentation property)": [[2, "gotran.codegeneration.oderepresentation.ODERepresentation.used_in_single_dy"]], "wrap_body_with_function_prototype() (gotran.codegeneration.ccodegenerator class method)": [[2, "gotran.codegeneration.CCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.cudacodegenerator class method)": [[2, "gotran.codegeneration.CUDACodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.juliacodegenerator static method)": [[2, "gotran.codegeneration.JuliaCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.matlabcodegenerator method)": [[2, "gotran.codegeneration.MatlabCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.pythoncodegenerator static method)": [[2, "gotran.codegeneration.PythonCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.codegenerators.ccodegenerator class method)": [[2, "gotran.codegeneration.codegenerators.CCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.codegenerators.cudacodegenerator class method)": [[2, "gotran.codegeneration.codegenerators.CUDACodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.codegenerators.juliacodegenerator static method)": [[2, "gotran.codegeneration.codegenerators.JuliaCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.codegenerators.matlabcodegenerator method)": [[2, "gotran.codegeneration.codegenerators.MatlabCodeGenerator.wrap_body_with_function_prototype"]], "wrap_body_with_function_prototype() (gotran.codegeneration.codegenerators.pythoncodegenerator static method)": [[2, "gotran.codegeneration.codegenerators.PythonCodeGenerator.wrap_body_with_function_prototype"]], "adict (class in gotran.common)": [[3, "gotran.common.adict"]], "adict (class in gotran.common.dicts)": [[3, "gotran.common.dicts.adict"]], "clear() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.clear"]], "clear() (gotran.common.odict method)": [[3, "gotran.common.odict.clear"]], "copy() (gotran.common.adict method)": [[3, "gotran.common.adict.copy"]], "copy() (gotran.common.dicts.adict method)": [[3, "gotran.common.dicts.adict.copy"]], "gotran.common": [[3, "module-gotran.common"]], "gotran.common.dicts": [[3, "module-gotran.common.dicts"]], "gotran.common.disk": [[3, "module-gotran.common.disk"]], "gotran.common.options": [[3, "module-gotran.common.options"]], "items() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.items"]], "items() (gotran.common.odict method)": [[3, "gotran.common.odict.items"]], "iteritems() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.iteritems"]], "iteritems() (gotran.common.odict method)": [[3, "gotran.common.odict.iteritems"]], "iterkeys() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.iterkeys"]], "iterkeys() (gotran.common.odict method)": [[3, "gotran.common.odict.iterkeys"]], "itervalues() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.itervalues"]], "itervalues() (gotran.common.odict method)": [[3, "gotran.common.odict.itervalues"]], "keys() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.keys"]], "keys() (gotran.common.odict method)": [[3, "gotran.common.odict.keys"]], "load() (in module gotran.common)": [[3, "gotran.common.load"]], "load() (in module gotran.common.disk)": [[3, "gotran.common.disk.load"]], "odict (class in gotran.common)": [[3, "gotran.common.odict"]], "odict (class in gotran.common.dicts)": [[3, "gotran.common.dicts.odict"]], "pop() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.pop"]], "pop() (gotran.common.odict method)": [[3, "gotran.common.odict.pop"]], "popitem() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.popitem"]], "popitem() (gotran.common.odict method)": [[3, "gotran.common.odict.popitem"]], "present_time_str() (in module gotran.common)": [[3, "gotran.common.present_time_str"]], "present_time_str() (in module gotran.common.disk)": [[3, "gotran.common.disk.present_time_str"]], "save() (in module gotran.common)": [[3, "gotran.common.save"]], "save() (in module gotran.common.disk)": [[3, "gotran.common.disk.save"]], "setdefault() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.setdefault"]], "setdefault() (gotran.common.odict method)": [[3, "gotran.common.odict.setdefault"]], "update() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.update"]], "update() (gotran.common.odict method)": [[3, "gotran.common.odict.update"]], "values() (gotran.common.dicts.odict method)": [[3, "gotran.common.dicts.odict.values"]], "values() (gotran.common.odict method)": [[3, "gotran.common.odict.values"]], "cellmlparser (class in gotran.input)": [[4, "gotran.input.CellMLParser"]], "cellmlparser (class in gotran.input.cellml)": [[4, "gotran.input.cellml.CellMLParser"]], "mathmlbaseparser (class in gotran.input.mathml)": [[4, "gotran.input.mathml.MathMLBaseParser"]], "mathmlcppparser (class in gotran.input.mathml)": [[4, "gotran.input.mathml.MathMLCPPParser"]], "cellml2ode() (in module gotran.input)": [[4, "gotran.input.cellml2ode"]], "cellml2ode() (in module gotran.input.cellml)": [[4, "gotran.input.cellml.cellml2ode"]], "check_and_register_component_variables() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.check_and_register_component_variables"]], "check_and_register_component_variables() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.check_and_register_component_variables"]], "default_parameters() (gotran.input.cellmlparser static method)": [[4, "gotran.input.CellMLParser.default_parameters"]], "default_parameters() (gotran.input.cellml.cellmlparser static method)": [[4, "gotran.input.cellml.CellMLParser.default_parameters"]], "get_iterator() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.get_iterator"]], "get_iterator() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.get_iterator"]], "get_parents() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.get_parents"]], "get_parents() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.get_parents"]], "gotran.input": [[4, "module-gotran.input"]], "gotran.input.cellml": [[4, "module-gotran.input.cellml"]], "gotran.input.mathml": [[4, "module-gotran.input.mathml"]], "parse() (gotran.input.mathml.mathmlbaseparser method)": [[4, "gotran.input.mathml.MathMLBaseParser.parse"]], "parse_components() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.parse_components"]], "parse_components() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.parse_components"]], "parse_connections() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.parse_connections"]], "parse_connections() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.parse_connections"]], "parse_documentation() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.parse_documentation"]], "parse_documentation() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.parse_documentation"]], "parse_imported_model() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.parse_imported_model"]], "parse_imported_model() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.parse_imported_model"]], "parse_single_component() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.parse_single_component"]], "parse_single_component() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.parse_single_component"]], "parse_units() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.parse_units"]], "parse_units() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.parse_units"]], "sort_components() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.sort_components"]], "sort_components() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.sort_components"]], "to_gotran() (gotran.input.cellmlparser method)": [[4, "gotran.input.CellMLParser.to_gotran"]], "to_gotran() (gotran.input.cellml.cellmlparser method)": [[4, "gotran.input.cellml.CellMLParser.to_gotran"]], "use_parenthesis() (gotran.input.mathml.mathmlbaseparser method)": [[4, "gotran.input.mathml.MathMLBaseParser.use_parenthesis"]], "algebraicexpression (class in gotran.model)": [[5, "gotran.model.AlgebraicExpression"]], "algebraicexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.AlgebraicExpression"]], "comment (class in gotran.model)": [[5, "gotran.model.Comment"]], "comment (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.Comment"]], "derivativeexpression (class in gotran.model)": [[5, "gotran.model.DerivativeExpression"]], "derivativeexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.DerivativeExpression"]], "dt (class in gotran.model)": [[5, "gotran.model.Dt"]], "dt (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.Dt"]], "expression (class in gotran.model)": [[5, "gotran.model.Expression"]], "expression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.Expression"]], "indexedexpression (class in gotran.model)": [[5, "gotran.model.IndexedExpression"]], "indexedexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.IndexedExpression"]], "indexedobject (class in gotran.model)": [[5, "gotran.model.IndexedObject"]], "indexedobject (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.IndexedObject"]], "intermediate (class in gotran.model)": [[5, "gotran.model.Intermediate"]], "intermediate (class in gotran.model.expressions)": [[5, "gotran.model.expressions.Intermediate"]], "ode (class in gotran.model)": [[5, "gotran.model.ODE"]], "ode (class in gotran.model.ode)": [[5, "gotran.model.ode.ODE"]], "odecomponent (class in gotran.model)": [[5, "gotran.model.ODEComponent"]], "odecomponent (class in gotran.model.odecomponent)": [[5, "gotran.model.odecomponent.ODEComponent"]], "odeobject (class in gotran.model)": [[5, "gotran.model.ODEObject"]], "odeobject (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.ODEObject"]], "odeobjectlist (class in gotran.model.utils)": [[5, "gotran.model.utils.ODEObjectList"]], "odevalueobject (class in gotran.model)": [[5, "gotran.model.ODEValueObject"]], "odevalueobject (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.ODEValueObject"]], "parameter (class in gotran.model)": [[5, "gotran.model.Parameter"]], "parameter (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.Parameter"]], "parameterindexedexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.ParameterIndexedExpression"]], "parameterindexedobject (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.ParameterIndexedObject"]], "ratedict (class in gotran.model.utils)": [[5, "gotran.model.utils.RateDict"]], "rateexpression (class in gotran.model)": [[5, "gotran.model.RateExpression"]], "rateexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.RateExpression"]], "state (class in gotran.model)": [[5, "gotran.model.State"]], "state (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.State"]], "statederivative (class in gotran.model)": [[5, "gotran.model.StateDerivative"]], "statederivative (class in gotran.model.expressions)": [[5, "gotran.model.expressions.StateDerivative"]], "stateexpression (class in gotran.model)": [[5, "gotran.model.StateExpression"]], "stateexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.StateExpression"]], "stateindexedexpression (class in gotran.model.expressions)": [[5, "gotran.model.expressions.StateIndexedExpression"]], "stateindexedobject (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.StateIndexedObject"]], "statesolution (class in gotran.model)": [[5, "gotran.model.StateSolution"]], "statesolution (class in gotran.model.expressions)": [[5, "gotran.model.expressions.StateSolution"]], "time (class in gotran.model)": [[5, "gotran.model.Time"]], "time (class in gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.Time"]], "add_algebraic() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_algebraic"]], "add_algebraic() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_algebraic"]], "add_comment() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_comment"]], "add_comment() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_comment"]], "add_component() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_component"]], "add_component() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_component"]], "add_derivative() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_derivative"]], "add_derivative() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_derivative"]], "add_intermediate() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_intermediate"]], "add_intermediate() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_intermediate"]], "add_parameter() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_parameter"]], "add_parameter() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_parameter"]], "add_parameters() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_parameters"]], "add_parameters() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_parameters"]], "add_solve_state() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_solve_state"]], "add_solve_state() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_solve_state"]], "add_state() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_state"]], "add_state() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_state"]], "add_state_solution() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_state_solution"]], "add_state_solution() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_state_solution"]], "add_states() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.add_states"]], "add_states() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.add_states"]], "append() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.append"]], "basename (gotran.model.indexedobject property)": [[5, "gotran.model.IndexedObject.basename"]], "basename (gotran.model.odeobjects.indexedobject property)": [[5, "gotran.model.odeobjects.IndexedObject.basename"]], "cmp() (in module gotran.model)": [[5, "gotran.model.cmp"]], "cmp() (in module gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.cmp"]], "cmp_to_key() (in module gotran.model)": [[5, "gotran.model.cmp_to_key"]], "cmp_to_key() (in module gotran.model.odeobjects)": [[5, "gotran.model.odeobjects.cmp_to_key"]], "comments (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.comments"]], "comments (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.comments"]], "component_names (gotran.model.ode property)": [[5, "gotran.model.ODE.component_names"]], "component_names (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.component_names"]], "components (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.components"]], "components (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.components"]], "count() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.count"]], "default_parameters() (gotran.model.indexedobject static method)": [[5, "gotran.model.IndexedObject.default_parameters"]], "default_parameters() (gotran.model.odeobjects.indexedobject static method)": [[5, "gotran.model.odeobjects.IndexedObject.default_parameters"]], "dep_var (gotran.model.derivativeexpression property)": [[5, "gotran.model.DerivativeExpression.dep_var"]], "dep_var (gotran.model.expressions.derivativeexpression property)": [[5, "gotran.model.expressions.DerivativeExpression.dep_var"]], "dependent (gotran.model.expression property)": [[5, "gotran.model.Expression.dependent"]], "dependent (gotran.model.expressions.expression property)": [[5, "gotran.model.expressions.Expression.dependent"]], "der_expr (gotran.model.derivativeexpression property)": [[5, "gotran.model.DerivativeExpression.der_expr"]], "der_expr (gotran.model.expressions.derivativeexpression property)": [[5, "gotran.model.expressions.DerivativeExpression.der_expr"]], "enum (gotran.model.indexedobject property)": [[5, "gotran.model.IndexedObject.enum"]], "enum (gotran.model.odeobjects.indexedobject property)": [[5, "gotran.model.odeobjects.IndexedObject.enum"]], "exec_ode() (in module gotran.model)": [[5, "gotran.model.exec_ode"]], "exec_ode() (in module gotran.model.loadmodel)": [[5, "gotran.model.loadmodel.exec_ode"]], "expanded_expression() (gotran.model.ode method)": [[5, "gotran.model.ODE.expanded_expression"]], "expanded_expression() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.expanded_expression"]], "expr (gotran.model.expression property)": [[5, "gotran.model.Expression.expr"]], "expr (gotran.model.expressions.expression property)": [[5, "gotran.model.expressions.Expression.expr"]], "extend() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.extend"]], "extract_components() (gotran.model.ode method)": [[5, "gotran.model.ODE.extract_components"]], "extract_components() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.extract_components"]], "finalize() (gotran.model.ode method)": [[5, "gotran.model.ODE.finalize"]], "finalize() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.finalize"]], "finalize_component() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.finalize_component"]], "finalize_component() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.finalize_component"]], "full_state_vector (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.full_state_vector"]], "full_state_vector (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.full_state_vector"]], "full_states (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.full_states"]], "full_states (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.full_states"]], "get() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.get"]], "get_object() (gotran.model.odecomponent method)": [[5, "gotran.model.ODEComponent.get_object"]], "get_object() (gotran.model.odecomponent.odecomponent method)": [[5, "gotran.model.odecomponent.ODEComponent.get_object"]], "gotran.model": [[5, "module-gotran.model"]], "gotran.model.expressions": [[5, "module-gotran.model.expressions"]], "gotran.model.loadmodel": [[5, "module-gotran.model.loadmodel"]], "gotran.model.ode": [[5, "module-gotran.model.ode"]], "gotran.model.odecomponent": [[5, "module-gotran.model.odecomponent"]], "gotran.model.odeobjects": [[5, "module-gotran.model.odeobjects"]], "gotran.model.utils": [[5, "module-gotran.model.utils"]], "import_ode() (gotran.model.ode method)": [[5, "gotran.model.ODE.import_ode"]], "import_ode() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.import_ode"]], "index() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.index"]], "indices (gotran.model.indexedobject property)": [[5, "gotran.model.IndexedObject.indices"]], "indices (gotran.model.odeobjects.indexedobject property)": [[5, "gotran.model.odeobjects.IndexedObject.indices"]], "init (gotran.model.parameter property)": [[5, "gotran.model.Parameter.init"]], "init (gotran.model.state property)": [[5, "gotran.model.State.init"]], "init (gotran.model.odeobjects.parameter property)": [[5, "gotran.model.odeobjects.Parameter.init"]], "init (gotran.model.odeobjects.state property)": [[5, "gotran.model.odeobjects.State.init"]], "insert() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.insert"]], "intermediate_symbols (gotran.model.ode property)": [[5, "gotran.model.ODE.intermediate_symbols"]], "intermediate_symbols (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.intermediate_symbols"]], "intermediates (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.intermediates"]], "intermediates (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.intermediates"]], "is_complete (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.is_complete"]], "is_complete (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.is_complete"]], "is_dae (gotran.model.ode property)": [[5, "gotran.model.ODE.is_dae"]], "is_dae (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.is_dae"]], "is_finalized (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.is_finalized"]], "is_finalized (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.is_finalized"]], "is_locally_complete (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.is_locally_complete"]], "is_locally_complete (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.is_locally_complete"]], "is_solved (gotran.model.state property)": [[5, "gotran.model.State.is_solved"]], "is_solved (gotran.model.odeobjects.state property)": [[5, "gotran.model.odeobjects.State.is_solved"]], "is_state_expression (gotran.model.expression property)": [[5, "gotran.model.Expression.is_state_expression"]], "is_state_expression (gotran.model.expressions.expression property)": [[5, "gotran.model.expressions.Expression.is_state_expression"]], "iter_objects (class in gotran.model.utils)": [[5, "gotran.model.utils.iter_objects"]], "keys() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.keys"]], "load_ode() (in module gotran.model)": [[5, "gotran.model.load_ode"]], "load_ode() (in module gotran.model.loadmodel)": [[5, "gotran.model.loadmodel.load_ode"]], "mass_matrix (gotran.model.ode property)": [[5, "gotran.model.ODE.mass_matrix"]], "mass_matrix (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.mass_matrix"]], "name (gotran.model.odeobject property)": [[5, "gotran.model.ODEObject.name"]], "name (gotran.model.odeobjects.odeobject property)": [[5, "gotran.model.odeobjects.ODEObject.name"]], "next() (gotran.model.utils.iter_objects method)": [[5, "gotran.model.utils.iter_objects.next"]], "ns (gotran.model.ode property)": [[5, "gotran.model.ODE.ns"]], "ns (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.ns"]], "num_components (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_components"]], "num_components (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_components"]], "num_full_states (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_full_states"]], "num_full_states (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_full_states"]], "num_intermediates (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_intermediates"]], "num_intermediates (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_intermediates"]], "num_parameters (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_parameters"]], "num_parameters (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_parameters"]], "num_rate_expressions (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_rate_expressions"]], "num_rate_expressions (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_rate_expressions"]], "num_state_expressions (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_state_expressions"]], "num_state_expressions (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_state_expressions"]], "num_states (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.num_states"]], "num_states (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.num_states"]], "ode_components() (in module gotran.model.utils)": [[5, "gotran.model.utils.ode_components"]], "ode_objects() (in module gotran.model.utils)": [[5, "gotran.model.utils.ode_objects"]], "ode_primitives() (in module gotran.model.utils)": [[5, "gotran.model.utils.ode_primitives"]], "offset_str (gotran.model.indexedobject property)": [[5, "gotran.model.IndexedObject.offset_str"]], "offset_str (gotran.model.odeobjects.indexedobject property)": [[5, "gotran.model.odeobjects.IndexedObject.offset_str"]], "param (gotran.model.odevalueobject property)": [[5, "gotran.model.ODEValueObject.param"]], "param (gotran.model.odeobjects.odevalueobject property)": [[5, "gotran.model.odeobjects.ODEValueObject.param"]], "parameter (gotran.model.odeobjects.parameterindexedobject property)": [[5, "gotran.model.odeobjects.ParameterIndexedObject.parameter"]], "parameter_symbols (gotran.model.ode property)": [[5, "gotran.model.ODE.parameter_symbols"]], "parameter_symbols (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.parameter_symbols"]], "parameter_values() (gotran.model.ode method)": [[5, "gotran.model.ODE.parameter_values"]], "parameter_values() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.parameter_values"]], "parameters (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.parameters"]], "parameters (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.parameters"]], "parent (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.parent"]], "parent (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.parent"]], "pop() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.pop"]], "present_component (gotran.model.ode property)": [[5, "gotran.model.ODE.present_component"]], "present_component (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.present_component"]], "rate_expressions (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.rate_expressions"]], "rate_expressions (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.rate_expressions"]], "recreate_expression() (in module gotran.model)": [[5, "gotran.model.recreate_expression"]], "recreate_expression() (in module gotran.model.expressions)": [[5, "gotran.model.expressions.recreate_expression"]], "register_ode_object() (gotran.model.ode method)": [[5, "gotran.model.ODE.register_ode_object"]], "register_ode_object() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.register_ode_object"]], "remove() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.remove"]], "rename() (gotran.model.odeobject method)": [[5, "gotran.model.ODEObject.rename"]], "rename() (gotran.model.odevalueobject method)": [[5, "gotran.model.ODEValueObject.rename"]], "rename() (gotran.model.odeobjects.odeobject method)": [[5, "gotran.model.odeobjects.ODEObject.rename"]], "rename() (gotran.model.odeobjects.odevalueobject method)": [[5, "gotran.model.odeobjects.ODEValueObject.rename"]], "replace_expr() (gotran.model.expression method)": [[5, "gotran.model.Expression.replace_expr"]], "replace_expr() (gotran.model.expressions.expression method)": [[5, "gotran.model.expressions.Expression.replace_expr"]], "reverse() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.reverse"]], "root (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.root"]], "root (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.root"]], "save() (gotran.model.ode method)": [[5, "gotran.model.ODE.save"]], "save() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.save"]], "shape (gotran.model.indexedobject property)": [[5, "gotran.model.IndexedObject.shape"]], "shape (gotran.model.odeobjects.indexedobject property)": [[5, "gotran.model.odeobjects.IndexedObject.shape"]], "signature() (gotran.model.ode method)": [[5, "gotran.model.ODE.signature"]], "signature() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.signature"]], "sort() (gotran.model.utils.odeobjectlist method)": [[5, "gotran.model.utils.ODEObjectList.sort"]], "special_expression() (in module gotran.model.utils)": [[5, "gotran.model.utils.special_expression"]], "state (gotran.model.stateexpression property)": [[5, "gotran.model.StateExpression.state"]], "state (gotran.model.statesolution property)": [[5, "gotran.model.StateSolution.state"]], "state (gotran.model.expressions.stateexpression property)": [[5, "gotran.model.expressions.StateExpression.state"]], "state (gotran.model.expressions.statesolution property)": [[5, "gotran.model.expressions.StateSolution.state"]], "state (gotran.model.odeobjects.stateindexedobject property)": [[5, "gotran.model.odeobjects.StateIndexedObject.state"]], "state_expressions (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.state_expressions"]], "state_expressions (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.state_expressions"]], "state_symbols (gotran.model.ode property)": [[5, "gotran.model.ODE.state_symbols"]], "state_symbols (gotran.model.ode.ode property)": [[5, "gotran.model.ode.ODE.state_symbols"]], "state_values() (gotran.model.ode method)": [[5, "gotran.model.ODE.state_values"]], "state_values() (gotran.model.ode.ode method)": [[5, "gotran.model.ode.ODE.state_values"]], "states (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.states"]], "states (gotran.model.rateexpression property)": [[5, "gotran.model.RateExpression.states"]], "states (gotran.model.expressions.rateexpression property)": [[5, "gotran.model.expressions.RateExpression.states"]], "states (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.states"]], "sym (gotran.model.expression property)": [[5, "gotran.model.Expression.sym"]], "sym (gotran.model.indexedobject property)": [[5, "gotran.model.IndexedObject.sym"]], "sym (gotran.model.odevalueobject property)": [[5, "gotran.model.ODEValueObject.sym"]], "sym (gotran.model.state property)": [[5, "gotran.model.State.sym"]], "sym (gotran.model.statederivative property)": [[5, "gotran.model.StateDerivative.sym"]], "sym (gotran.model.expressions.expression property)": [[5, "gotran.model.expressions.Expression.sym"]], "sym (gotran.model.expressions.statederivative property)": [[5, "gotran.model.expressions.StateDerivative.sym"]], "sym (gotran.model.odeobjects.indexedobject property)": [[5, "gotran.model.odeobjects.IndexedObject.sym"]], "sym (gotran.model.odeobjects.odevalueobject property)": [[5, "gotran.model.odeobjects.ODEValueObject.sym"]], "sym (gotran.model.odeobjects.state property)": [[5, "gotran.model.odeobjects.State.sym"]], "t (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.t"]], "t (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.t"]], "time (gotran.model.odecomponent property)": [[5, "gotran.model.ODEComponent.time"]], "time (gotran.model.odecomponent.odecomponent property)": [[5, "gotran.model.odecomponent.ODEComponent.time"]], "unit (gotran.model.odevalueobject property)": [[5, "gotran.model.ODEValueObject.unit"]], "unit (gotran.model.odeobjects.odevalueobject property)": [[5, "gotran.model.odeobjects.ODEValueObject.unit"]], "update() (gotran.model.odevalueobject method)": [[5, "gotran.model.ODEValueObject.update"]], "update() (gotran.model.odeobjects.odevalueobject method)": [[5, "gotran.model.odeobjects.ODEValueObject.update"]], "update_unit() (gotran.model.dt method)": [[5, "gotran.model.Dt.update_unit"]], "update_unit() (gotran.model.time method)": [[5, "gotran.model.Time.update_unit"]], "update_unit() (gotran.model.odeobjects.dt method)": [[5, "gotran.model.odeobjects.Dt.update_unit"]], "update_unit() (gotran.model.odeobjects.time method)": [[5, "gotran.model.odeobjects.Time.update_unit"]], "value (gotran.model.odevalueobject property)": [[5, "gotran.model.ODEValueObject.value"]], "value (gotran.model.odeobjects.odevalueobject property)": [[5, "gotran.model.odeobjects.ODEValueObject.value"]], "define_parser() (in module gotran.scripts.cellml2gotran)": [[6, "gotran.scripts.cellml2gotran.define_parser"]], "gotran.scripts": [[6, "module-gotran.scripts"]], "gotran.scripts.cellml2gotran": [[6, "module-gotran.scripts.cellml2gotran"]], "gotran.scripts.gotran2c": [[6, "module-gotran.scripts.gotran2c"]], "gotran.scripts.gotran2cpp": [[6, "module-gotran.scripts.gotran2cpp"]], "gotran.scripts.gotran2cuda": [[6, "module-gotran.scripts.gotran2cuda"]], "gotran.scripts.gotran2dolfin": [[6, "module-gotran.scripts.gotran2dolfin"]], "gotran.scripts.gotran2julia": [[6, "module-gotran.scripts.gotran2julia"]], "gotran.scripts.gotran2latex": [[6, "module-gotran.scripts.gotran2latex"]], "gotran.scripts.gotran2matlab": [[6, "module-gotran.scripts.gotran2matlab"]], "gotran.scripts.gotran2md": [[6, "module-gotran.scripts.gotran2md"]], "gotran.scripts.gotran2opencl": [[6, "module-gotran.scripts.gotran2opencl"]], "gotran.scripts.gotran2py": [[6, "module-gotran.scripts.gotran2py"]], "gotran.scripts.gotranexport": [[6, "module-gotran.scripts.gotranexport"]], "gotran.scripts.gotranprobe": [[6, "module-gotran.scripts.gotranprobe"]], "gotran.scripts.gotranrun": [[6, "module-gotran.scripts.gotranrun"]], "gotran2c() (in module gotran.scripts.gotran2c)": [[6, "gotran.scripts.gotran2c.gotran2c"]], "gotran2cpp() (in module gotran.scripts.gotran2cpp)": [[6, "gotran.scripts.gotran2cpp.gotran2cpp"]], "gotran2cuda() (in module gotran.scripts.gotran2cuda)": [[6, "gotran.scripts.gotran2cuda.gotran2cuda"]], "gotran2dolfin() (in module gotran.scripts.gotran2dolfin)": [[6, "gotran.scripts.gotran2dolfin.gotran2dolfin"]], "gotran2julia() (in module gotran.scripts.gotran2julia)": [[6, "gotran.scripts.gotran2julia.gotran2julia"]], "gotran2latex() (in module gotran.scripts.gotran2latex)": [[6, "gotran.scripts.gotran2latex.gotran2latex"]], "gotran2matlab() (in module gotran.scripts.gotran2matlab)": [[6, "gotran.scripts.gotran2matlab.gotran2matlab"]], "gotran2md() (in module gotran.scripts.gotran2md)": [[6, "gotran.scripts.gotran2md.gotran2md"]], "gotran2opencl() (in module gotran.scripts.gotran2opencl)": [[6, "gotran.scripts.gotran2opencl.gotran2opencl"]], "gotran2py() (in module gotran.scripts.gotran2py)": [[6, "gotran.scripts.gotran2py.gotran2py"]], "gotranexport() (in module gotran.scripts.gotranexport)": [[6, "gotran.scripts.gotranexport.gotranexport"]], "gotranprobe() (in module gotran.scripts.gotranprobe)": [[6, "gotran.scripts.gotranprobe.gotranprobe"]], "gotranrun() (in module gotran.scripts.gotranrun)": [[6, "gotran.scripts.gotranrun.gotranrun"]], "join_indent_and_split() (in module gotran.scripts.gotranprobe)": [[6, "gotran.scripts.gotranprobe.join_indent_and_split"]], "main() (in module gotran.scripts.cellml2gotran)": [[6, "gotran.scripts.cellml2gotran.main"]], "main() (in module gotran.scripts.gotran2c)": [[6, "gotran.scripts.gotran2c.main"]], "main() (in module gotran.scripts.gotran2cpp)": [[6, "gotran.scripts.gotran2cpp.main"]], "main() (in module gotran.scripts.gotran2cuda)": [[6, "gotran.scripts.gotran2cuda.main"]], "main() (in module gotran.scripts.gotran2dolfin)": [[6, "gotran.scripts.gotran2dolfin.main"]], "main() (in module gotran.scripts.gotran2julia)": [[6, "gotran.scripts.gotran2julia.main"]], "main() (in module gotran.scripts.gotran2latex)": [[6, "gotran.scripts.gotran2latex.main"]], "main() (in module gotran.scripts.gotran2matlab)": [[6, "gotran.scripts.gotran2matlab.main"]], "main() (in module gotran.scripts.gotran2md)": [[6, "gotran.scripts.gotran2md.main"]], "main() (in module gotran.scripts.gotran2opencl)": [[6, "gotran.scripts.gotran2opencl.main"]], "main() (in module gotran.scripts.gotran2py)": [[6, "gotran.scripts.gotran2py.main"]], "main() (in module gotran.scripts.gotranexport)": [[6, "gotran.scripts.gotranexport.main"]], "main() (in module gotran.scripts.gotranprobe)": [[6, "gotran.scripts.gotranprobe.main"]], "main() (in module gotran.scripts.gotranrun)": [[6, "gotran.scripts.gotranrun.main"]], "make_table() (in module gotran.scripts.gotran2md)": [[6, "gotran.scripts.gotran2md.make_table"]]}})