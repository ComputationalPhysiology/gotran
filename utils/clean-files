#!/usr/bin/env python
" A script to remove all temporary files in repo"

# Copyright (C) 2011-2012 Johan Hake
#
# This file is part of Gotran.
#
# Gotran is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Gotran is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Gotran. If not, see <http://www.gnu.org/licenses/>.

import os
import shutil

remove_symbols = ["~", "#", ".pyc"]

remove = []

for dirpath, dirnames, filenames in os.walk(os.path.curdir):
    for filename in filenames:
        if any(symbol in filename for symbol in remove_symbols):
            remove.append(os.path.join(dirpath, filename))

if remove:
    message = "Found %d files that will be removed:"%len(remove)
    print message
    print "-"*len(message)
    for filename in remove:
        print "  removing:", filename
        os.unlink(filename)
else:
    print "\nNo temp files removed"

remove_dirs = ["build", "Gotran.egg-info", "doc/_build", "dist"]
removed_dirs = []
for remove_dir in remove_dirs:
    if os.path.isdir(remove_dir):
        shutil.rmtree(remove_dir)
        removed_dirs.append(remove_dir)

if removed_dirs:
    message = "\nFound {} director{} that will be removed.".format(\
        len(removed_dirs), "y" if len(removed_dirs)==1 else "ies")
    print message
    print "-"*len(message)
    for remove_dir in removed_dirs:
        print "  removing: '{}'".format(remove_dir)
else:
    print "\nNo temp dirs removed"
    
remove = []

for dirpath, dirnames, filenames in os.walk(os.path.join(os.path.curdir, "demo")):
    if "data" in dirnames:
        remove.append(os.path.join(dirpath, "data"))
    if "log" in dirnames:
        remove.append(os.path.join(dirpath, "log"))

if remove:
    message = "\nFound %d demo data/log directories:"%len(remove)
    print message
    print "-"*len(message)
    for datadir in remove:
        print "  removing:", datadir
        shutil.rmtree(datadir)
else:
    print "\nNo data or log directories removed\n"
    
