# Cardiac Sodium Channel Markov Model with Temperature Dependence and Recovery from Inactivation
#
# ABSTRACT: A Markov model of the cardiac sodium channel is presented. The model
# is similar to the CA1 hippocampal
# neuron sodium channel model developed by Kuo
# and Bean (1994. Neuron. 12:819 - 829) with the following modifications: 1)
# an
# additional open state is added; 2) open-inactivated transitions are made
# voltage-dependent; and 3) channel rate constants
# are exponential functions of
# enthalpy, entropy, and voltage and have explicit temperature dependence. Model
# parameters are
# determined using a simulated annealing algorithm to minimize the
# error between model responses and various experimental
# data sets. The model
# reproduces a wide range of experimental data including ionic currents, gating
# currents, tail currents,
# steady-state inactivation, recovery from inactivation,
# and open time distributions over a temperature range of 10C to 25C.
# The model
# also predicts measures of single channel activity such as first latency,
# probability of a null sweep, and probability of reopening.
#
# The complete original paper reference is cited below:
#
# Cardiac Sodium Channel Markov Model with Temperature Dependence and Recovery
# from Inactivation, Lisa A. Irvine, M. Saleet Jafri, and Raimond L. Winslow,
# 1999,Biophysical Journal, 76, 1868 - 1885. (Full textandPDFversions of this
# article are available to subscribers on theBiophysical Journalwebsite).PubMed
# ID: 10096885
#

# gotran file generated by cellml2gotran from irvine_jafri_winslow_1999.cellml

parameters("Membrane",
           V = ScalarParam(-0.12, unit="V"))

parameters("Rate constants",
           R = ScalarParam(8.314472, unit="J*mole**-1*K**-1"),
           T = ScalarParam(286.0, unit="K"),
           F = ScalarParam(96500.0, unit="C*mole**-1"),
           k = ScalarParam(1.3806504E-23, unit="J*K**-1"),
           h = ScalarParam(6.62607095E-31, unit="J*ms"),
           z_alpha = 0,
           z_beta = -0.9701,
           z_gamma = 1.5703,
           z_delta = -1.3266,
           z_on = 0.6625,
           z_of = 0,
           z_gamma_gamma = 0,
           z_delta_delta = -3.5596,
           z_epsilon = 0,
           z_omega = 0,
           z_eta = 1.5717,
           z_v = -1.3281,
           z_cn = 0,
           z_cf = 0,
           delta_H_alpha = ScalarParam(116900, unit="J*mole**-1"),
           delta_H_beta = ScalarParam(263870, unit="J*mole**-1"),
           delta_H_cf = ScalarParam(57533, unit="J*mole**-1"),
           delta_H_cn = ScalarParam(293270, unit="J*mole**-1"),
           delta_H_of = ScalarParam(79035, unit="J*mole**-1"),
           delta_H_on = ScalarParam(62385, unit="J*mole**-1"),
           delta_H_eta = ScalarParam(150333, unit="J*mole**-1"),
           delta_H_gamma = ScalarParam(200240, unit="J*mole**-1"),
           delta_H_delta = ScalarParam(127970, unit="J*mole**-1"),
           delta_H_epsilon = ScalarParam(79183, unit="J*mole**-1"),
           delta_H_omega = ScalarParam(123020, unit="J*mole**-1"),
           delta_H_v = ScalarParam(121900, unit="J*mole**-1"),
           delta_H_gamma_gamma = ScalarParam(-99967, unit="J*mole**-1"),
           delta_H_delta_delta = ScalarParam(62555, unit="J*mole**-1"),
           delta_S_alpha = ScalarParam(224.114, unit="J*mole**-1*K**-1"),
           delta_S_beta = ScalarParam(708.146, unit="J*mole**-1*K**-1"),
           delta_S_cf = ScalarParam(0.00711, unit="J*mole**-1*K**-1"),
           delta_S_cn = ScalarParam(786.217, unit="J*mole**-1*K**-1"),
           delta_S_of = ScalarParam(1.510, unit="J*mole**-1*K**-1"),
           delta_S_on = ScalarParam(39.295, unit="J*mole**-1*K**-1"),
           delta_S_eta = ScalarParam(338.915, unit="J*mole**-1*K**-1"),
           delta_S_gamma = ScalarParam(529.952, unit="J*mole**-1*K**-1"),
           delta_S_delta = ScalarParam(229.205, unit="J*mole**-1*K**-1"),
           delta_S_epsilon = ScalarParam(70.078, unit="J*mole**-1*K**-1"),
           delta_S_omega = ScalarParam(225.175, unit="J*mole**-1*K**-1"),
           delta_S_v = ScalarParam(193.265, unit="J*mole**-1*K**-1"),
           delta_S_gamma_gamma = ScalarParam(-578.317, unit="J*mole**-1*K**-1"),
           delta_S_delta_delta = ScalarParam(-130.639, unit="J*mole**-1*K**-1"))

states("Markov model",
       C0 = 1.0,
       C1 = 0.0,
       C2 = 0.0,
       C3 = 0.0,
       C4 = 0.0,
       O1 = 0.0,
       O2 = 0.0,
       C0I = 0.0,
       C1I = 0.0,
       C2I = 0.0,
       C3I = 0.0,
       C4I = 0.0,
       I = 0.0)

parameters("Markov model",
           a = 2.5218)

parameters("Sodium current",
           E_Na = ScalarParam(0.044675, unit="V"),
           g_Na = ScalarParam(0.0131, unit="V**-1"))

component("Rate constants")
alpha = k*T/h*exp(-delta_H_alpha/(R*T) + delta_S_alpha/R + z_alpha*F*V/(R*T)) # ms**-1
beta = k*T/h*exp(-delta_H_beta/(R*T) + delta_S_beta/R + z_beta*F*V/(R*T)) # ms**-1
gamma = k*T/h*exp(-delta_H_gamma/(R*T) + delta_S_gamma/R + z_gamma*F*V/(R*T)) # ms**-1
delta = k*T/h*exp(-delta_H_delta/(R*T) + delta_S_delta/R + z_delta*F*V/(R*T)) # ms**-1
on = k*T/h*exp(-delta_H_on/(R*T) + delta_S_on/R + z_on*F*V/(R*T)) # ms**-1
of = k*T/h*exp(-delta_H_of/(R*T) + delta_S_of/R + z_of*F*V/(R*T)) # ms**-1
gamma_gamma = k*T/h*exp(-delta_H_gamma_gamma/(R*T) + delta_S_gamma_gamma/R + z_gamma_gamma*F*V/(R*T)) # ms**-1
delta_delta = k*T/h*exp(-delta_H_delta_delta/(R*T) + delta_S_delta_delta/R + z_delta_delta*F*V/(R*T)) # ms**-1
epsilon = k*T/h*exp(-delta_H_epsilon/(R*T) + delta_S_epsilon/R + z_epsilon*F*V/(R*T)) # ms**-1
omega = k*T/h*exp(-delta_H_omega/(R*T) + delta_S_omega/R + z_omega*F*V/(R*T)) # ms**-1
eta = k*T/h*exp(-delta_H_eta/(R*T) + delta_S_eta/R + z_eta*F*V/(R*T)) # ms**-1
v = k*T/h*exp(-delta_H_v/(R*T) + delta_S_v/R + z_v*F*V/(R*T)) # ms**-1
cn = k*T/h*exp(-delta_H_cn/(R*T) + delta_S_cn/R + z_cn*F*V/(R*T)) # ms**-1
cf = k*T/h*exp(-delta_H_cf/(R*T) + delta_S_cf/R + z_cf*F*V/(R*T)) # ms**-1

component("Markov model")
P_open = O1 + O2
dC0_dt = beta*C1 + cf*C0I - (cn + 4*alpha)*C0
dC1_dt = 2*beta*C2 + 4*alpha*C0 + cf/a*C1I - (beta + 3*alpha + cn*a)*C1
dC2_dt = 3*beta*C3 + 3*alpha*C1 + cf/a**2*C2I - (2*beta + 2*alpha + cn*a**2)*C2
dC3_dt = 4*beta*C4 + 2*alpha*C2 + cf/a**3*C3I - (3*beta + alpha + cn*a**3)*C3
dC4_dt = delta*O1 + v*O2 + alpha*C3 + cf/a**4*C4I - (4*beta + gamma + eta + cn*a**4)*C4
dO1_dt = gamma*C4 + omega*O2 + of*I - (delta + epsilon + on)*O1
dO2_dt = epsilon*O1 + eta*C4 - (v + omega)*O2
dC0I_dt = beta/a*C1I + cn*C0 - (cf + 4*alpha*a)*C0I
dC1I_dt = 2*beta/a*C2I + 4*alpha*a*C0I + cn*a*C1 - (beta/a + 3*alpha*a + cf/a)*C1I
dC2I_dt = 3*beta/a*C3I + 3*alpha*a*C1I + cn*a**2*C2 - (2*beta/a + 2*alpha*a + cf/a**2)*C2I
dC3I_dt = 4*beta/a*C4I + 2*alpha*a*C2I + cn*a**3*C3 - (3*beta/a + alpha*a + cf/a**3)*C3I
dC4I_dt = delta_delta*I + alpha*a*C3I + cn*a**4*C4 - (4*beta/a + gamma_gamma + cf/a**4)*C4I
dI_dt = gamma_gamma*C4I + on*O1 - (delta_delta + of)*I

component("Sodium current")
i_Na = g_Na*P_open*(V - E_Na)
