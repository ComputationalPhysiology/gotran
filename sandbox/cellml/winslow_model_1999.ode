# Canine Ventricular Cell Model, 1999
#
# In 1999 Raimond Winslow, Jeremy Rice, Saleet Jafri, Eduardo Marban and Brian
# O'Rourke published a computational model of the action potential and of
# intracellular Ca2+handling in normal and failing canine ventricular myocytes.
# Using the experimental data of O'Rourkeet al(1999) they modified Jafriet
# al'sguinea pig ventricular cell model (1999) to make it appropriate for canine
# midmyocardial cells (see the figure below). The CellML description here is of
# the normal canine ventricular myocyte model. In failing myocytes i_to1 and
# i_K1 are down regulated on average by 66 percent and 32 percent respectively.
# The kinetic properties of i_to1 and the gating behaviour if i_K1 remain
# unaltered. Only the number of expressed channels is reduced (the control may
# be pre- or post-transcriptional but it is not post-translational). On the
# basis of these data, the effects of terminal heart failure are modelled by
# reducing the peak conductance of i_to1 and i_K1. Downregulation of the
# sarcoplasmic reticulum Ca2+pump is modelled by simultaneous scaling of both the
# forward and reverse maximum pump rates Vmaxfand Vmaxrby a scale factor KSR.
# Upregulation of the Na-Ca exchanger is modelled by increasing a scale factor
# KNaCa.
#
# The complete original paper reference is cited below:
#
# Mechanisms of Altered Excitation-Contraction Coupling in Canine
# Tachycardia-Induced Heart Failure, II Model Studies, Raimond L. Winslow, Jeremy
# Rice, Saleet Jafri, Eduardo Marban and Brian O'Rourke, 1999,Circulation
# Research, 84, 571-586.PubMed ID: 10082479
#

# gotran file generated by cellml2gotran from winslow_rice_jafri_marban_ororke_1999.cellml

parameters("Fast sodium current",
           g_Na = ScalarParam(12.8, unit="mS*uF**-1"))

states("Fast sodium current", "m gate",
       m = 0.0328302)

states("Fast sodium current", "h gate",
       h = 0.988354)

states("Fast sodium current", "j gate",
       j = 0.99254)

parameters("Rapid activating delayed rectifiyer K current",
           g_Kr = ScalarParam(0.0034, unit="mS*uF**-1"))

states("Rapid activating delayed rectifiyer K current", "X_kr gate",
       X_kr = 0.51)

parameters("Rapid activating delayed rectifiyer K current", "X_kr gate",
           tau_factor = 1)

parameters("Slow activating delayed rectifiyer K current",
           g_Ks = ScalarParam(0.0027134, unit="mS*uF**-1"))

states("Slow activating delayed rectifiyer K current", "X_ks gate",
       X_ks = 0.264)

parameters("Transient outward potassium current",
           g_to1 = ScalarParam(0.23815, unit="mS*uF**-1"))

states("Transient outward potassium current", "X_to1 gate",
       X_to1 = 2.63)

states("Transient outward potassium current", "Y_to1 gate",
       Y_to1 = 0.99)

parameters("Na Ca exchanger",
           K_mCa = ScalarParam(1.38, unit="mM"),
           K_mNa = ScalarParam(87.5, unit="mM"),
           K_NaCa = ScalarParam(0.3, unit="uA*uF**-1"),
           K_sat = 0.2,
           eta = 0.35)

parameters("Sodium potassium pump",
           I_NaK = ScalarParam(0.693, unit="uA*uF**-1"),
           K_mNai = ScalarParam(10, unit="mM"),
           K_mKo = ScalarParam(1.5, unit="mM"))

parameters("Sarcolemmal calcium pump",
           K_mpCa = ScalarParam(0.00005, unit="mM"),
           I_pCa = ScalarParam(0.05, unit="uA*uF**-1"))

parameters("Calcium background current",
           g_Cab = ScalarParam(0.0003842, unit="mS*uF**-1"))

parameters("Sodium background current",
           g_Nab = ScalarParam(0.0031, unit="mS*uF**-1"))

states("L_type Ca current",
       C0 = 0.997208,
       C1 = 6.38897e-5,
       C2 = 1.535e-9,
       C3 = 1.63909e-14,
       C4 = 6.56337e-20,
       O = 9.84546e-21,
       C_Ca0 = 0.00272826,
       C_Ca1 = 6.99215e-7,
       C_Ca2 = 6.71989e-11,
       C_Ca3 = 2.87031e-15,
       C_Ca4 = 4.59752e-20,
       O_Ca = 0)

parameters("L_type Ca current",
           P_Ca = ScalarParam(3.125e-4, unit="cm*s**-1"),
           P_K = ScalarParam(5.79e-7, unit="cm*s**-1"),
           i_Ca_half = ScalarParam(-0.265, unit="uA*uF**-1"),
           a = 2,
           b = 2,
           g = ScalarParam(2000, unit="s**-1"),
           f = ScalarParam(300, unit="s**-1"),
           gprime = ScalarParam(7000, unit="s**-1"),
           fprime = ScalarParam(7, unit="s**-1"),
           omega = ScalarParam(10, unit="s**-1"))

states("L_type Ca current", "y gate",
       y = 0.798)

states("RyR channel",
       P_C1 = 0.47,
       P_O1 = 0,
       P_O2 = 0,
       P_C2 = 0.53)

parameters("RyR channel",
           v1 = ScalarParam(1800, unit="s**-1"),
           k_a_plus = ScalarParam(1.215e13, unit="mM**-4*s**-1"),
           k_a_minus = ScalarParam(576, unit="s**-1"),
           k_b_plus = ScalarParam(4.05e9, unit="mM**-3*s**-1"),
           k_b_minus = ScalarParam(1930, unit="s**-1"),
           k_c_plus = ScalarParam(100, unit="s**-1"),
           k_c_minus = ScalarParam(0.8, unit="s**-1"),
           n = 4,
           m_RyR = 3)

parameters("SERCA2a pump",
           K_fb = ScalarParam(0.000168, unit="mM"),
           K_rb = ScalarParam(3.29, unit="mM"),
           Vmaxf = ScalarParam(0.0813, unit="mM*s**-1"),
           Vmaxr = ScalarParam(0.318, unit="mM*s**-1"),
           K_SR = 1,
           N_fb = 1.2,
           N_rb = 1)

states("Intracellular Ca fluxes",
       HTRPNCa = ScalarParam(0.98, unit="mM"),
       LTRPNCa = ScalarParam(0.078, unit="mM"))

parameters("Intracellular Ca fluxes",
           tau_tr = ScalarParam(0.0005747, unit="s"),
           tau_xfer = ScalarParam(0.0267, unit="s"),
           HTRPN_tot = 0.14,
           LTRPN_tot = 0.07,
           k_htrpn_plus = ScalarParam(20000, unit="mM**-1*s**-1"),
           k_htrpn_minus = ScalarParam(0.066, unit="s**-1"),
           k_ltrpn_plus = ScalarParam(40000, unit="mM**-1*s**-1"),
           k_ltrpn_minus = ScalarParam(40, unit="s**-1"))

parameters("Standard ionic concentrations",
           Nao = ScalarParam(138, unit="mM"),
           Cao = ScalarParam(2, unit="mM"),
           Ko = ScalarParam(4, unit="mM"))

parameters("Time independent potassium current",
           g_K1 = ScalarParam(2.8, unit="mS*uF**-1"),
           K_mK1 = ScalarParam(13, unit="mM"))

parameters("Plateau potassium current",
           g_Kp = ScalarParam(0.002216, unit="mS*uF**-1"))

states("Intracellular ion concentrations",
       Cai = ScalarParam(0.00008, unit="mM"),
       Nai = ScalarParam(10, unit="mM"),
       Ki = ScalarParam(157.8, unit="mM"),
       Ca_ss = ScalarParam(0.00011, unit="mM"),
       Ca_JSR = ScalarParam(0.257, unit="mM"),
       Ca_NSR = ScalarParam(0.257, unit="mM"))

parameters("Intracellular ion concentrations",
           A_cap = ScalarParam(0.0001534, unit="cm**2"),
           V_myo = ScalarParam(0.00002584, unit="ul"),
           V_JSR = ScalarParam(0.00000016, unit="ul"),
           V_NSR = ScalarParam(0.0000021, unit="ul"),
           V_SS = ScalarParam(0.0000000012, unit="ul"),
           K_mCMDN = ScalarParam(0.00238, unit="mM"),
           K_mEGTA = ScalarParam(0.00015, unit="mM"),
           K_mCSQN = ScalarParam(0.8, unit="mM"),
           CMDN_tot = ScalarParam(0.05, unit="mM"),
           EGTA_tot = ScalarParam(0, unit="mM"),
           CSQN_tot = ScalarParam(15, unit="mM"))

states("Membrane",
       V = ScalarParam(-96.1638, unit="mV"))

parameters("Membrane",
           R = ScalarParam(8.314472, unit="J*mole**-1*K**-1"),
           T = ScalarParam(310, unit="K"),
           F = ScalarParam(96.4853415, unit="C*mmole**-1"),
           C_sc = ScalarParam(0.001, unit="uF*cm**-2"),
           stim_start = ScalarParam(0.1, unit="s"),
           stim_end = ScalarParam(100000000, unit="s"),
           stim_period = ScalarParam(1, unit="s"),
           stim_duration = ScalarParam(0.002, unit="s"),
           stim_amplitude = ScalarParam(-21.1268, unit="uA*uF**-1"))

component("Fast sodium current")
E_Na = R*T/F*log(Nao/Nai) # mV
i_Na = g_Na*m**3*h*j*(V - E_Na) # uA*uF**-1

component("Fast sodium current", "m gate")
E0_m = V + 47.13 # mV
alpha_m = Conditional(Lt(abs(E0_m), 0.00001), 1000/(0.1 - 0.005*E0_m), 320*E0_m/(1 - exp(-0.1*E0_m))) # s**-1
beta_m = 80*exp(-V/11) # s**-1
dm_dt = Conditional(Ge(V, -90), alpha_m*(1 - m) - beta_m*m, 0)

component("Fast sodium current", "h gate")
alpha_h = Conditional(Lt(V, -40), 135*exp((80 + V)/-6.8), 0) # s**-1
beta_h = Conditional(Lt(V, -40), 3560*exp(0.079*V) + 310000*exp(0.35*V), 1000/(0.13*(1 + exp((V + 10.66)/-11.1)))) # s**-1
dh_dt = alpha_h*(1 - h) - beta_h*h

component("Fast sodium current", "j gate")
alpha_j = Conditional(Lt(V, -40), 1000*-(127140*exp(0.2444*V) + 0.00003474*exp(-0.04391*V))*(V + 37.78)/(1 + exp(0.311*(V + 79.23))), 0) # s**-1
beta_j = Conditional(Lt(V, -40), 121.2*exp(-0.01052*V)/(1 + exp(-0.1378*(V + 40.14))), 300*exp(-0.0000002535*V)/(1 + exp(-0.1*(V + 32)))) # s**-1
dj_dt = alpha_j*(1 - j) - beta_j*j

component("Rapid activating delayed rectifiyer K current")
E_K = R*T/F*log(Ko/Ki) # mV
f_Ko = sqrt(Ko/4)
R_V = 1/(1 + 1.4945*exp(0.0446*V))
i_Kr = g_Kr*f_Ko*R_V*X_kr*(V - E_K) # uA*uF**-1

component("Rapid activating delayed rectifiyer K current", "X_kr gate")
K12 = exp(-5.495 + 0.1691*V)
K21 = exp(-7.677 - 0.0128*V)
X_kr_inf = K12/(K12 + K21)
tau_X_kr = 0.001/(K12 + K21) + tau_factor*0.027 # s
dX_kr_dt = (X_kr_inf - X_kr)/tau_X_kr

component("Slow activating delayed rectifiyer K current")
E_Ks = R*T/F*log((Ko + 0.01833*Nao)/(Ki + 0.01833*Nai)) # mV
i_Ks = g_Ks*X_ks**2*(V - E_Ks) # uA*uF**-1

component("Slow activating delayed rectifiyer K current", "X_ks gate")
X_ks_infinity = 1/(1 + exp(-(V - 24.7)/13.6))
tau_X_ks = 0.001/(0.0000719*(V - 10)/(1 - exp(-0.148*(V - 10))) + 0.000131*(V - 10)/(exp(0.0687*(V - 10)) - 1)) # s
dX_ks_dt = (X_ks_infinity - X_ks)/tau_X_ks

component("Transient outward potassium current")
i_to1 = g_to1*X_to1*Y_to1*(V - E_K) # uA*uF**-1

component("Transient outward potassium current", "X_to1 gate")
alpha_X_to1 = 45.16*exp(0.03577*V) # s**-1
beta_X_to1 = 98.9*exp(-0.06237*V) # s**-1
dX_to1_dt = alpha_X_to1*(1 - X_to1) - beta_X_to1*X_to1

component("Transient outward potassium current", "Y_to1 gate")
alpha_Y_to1 = 5.415*exp(-(V + 33.5)/5)/(1 + 0.051335*exp(-(V + 33.5)/5)) # s**-1
beta_Y_to1 = 5.415*exp((V + 33.5)/5)/(1 + 0.051335*exp((V + 33.5)/5)) # s**-1
dY_to1_dt = alpha_Y_to1*(1 - Y_to1) - beta_Y_to1*Y_to1

component("Time independent potassium current", "K1 gate")
K1_infinity_V = 1/(2 + exp(1.5*F/(R*T)*(V - E_K)))

component("Plateau potassium current", "Kp gate")
Kp_V = 1/(1 + exp((7.488 - V)/5.98))

component("Na Ca exchanger")
i_NaCa = K_NaCa*5000/((K_mNa**3 + Nao**3)*(K_mCa + Cao)*(1 + K_sat*exp((eta - 1)*V*F/(R*T))))*(exp(eta*V*F/(R*T))*Nai**3*Cao - exp((eta - 1)*V*F/(R*T))*Nao**3*Cai) # uA*uF**-1

component("Sodium potassium pump")
sigma = 1/7*(exp(Nao/67.3) - 1)
f_NaK = 1/(1 + 0.1245*exp(-0.1*V*F/(R*T)) + 0.0365*sigma*exp(-V*F/(R*T)))
i_NaK = I_NaK*f_NaK/(1 + (K_mNai/Nai)**1.5)*Ko/(Ko + K_mKo) # uA*uF**-1

component("Sarcolemmal calcium pump")
i_p_Ca = I_pCa*Cai/(K_mpCa + Cai) # uA*uF**-1

component("Calcium background current")
E_Ca = R*T/(2*F)*log(Cao/Cai) # mV
i_Ca_b = g_Cab*(V - E_Ca) # uA*uF**-1

component("Sodium background current")
i_Na_b = g_Nab*(V - E_Na) # uA*uF**-1

component("L_type Ca current")
i_Ca_max = P_Ca/(1*1)*4*V*F**2*1000/(R*T)*(0.001*exp(2*V*F/(R*T)) - 0.341*Cao)/(exp(2*V*F/(R*T)) - 1) # uA*uF**-1
alpha = 400*exp((V + 2)/10) # s**-1
beta = 50*exp(-(V + 2)/13) # s**-1
alpha_a = alpha*a # s**-1
beta_b = beta/b # s**-1
gamma = 103.75*Ca_ss/1 # s**-1
dC0_dt = beta*C1 + omega*C_Ca0 - (4*alpha + gamma)*C0
dC1_dt = 4*alpha*C0 + 2*beta*C2 + omega/b*C_Ca1 - (beta + 3*alpha + gamma*a)*C1
dC2_dt = 3*alpha*C1 + 3*beta*C3 + omega/b**2*C_Ca2 - (beta*2 + 2*alpha + gamma*a**2)*C2
dC3_dt = 2*alpha*C2 + 4*beta*C4 + omega/b**3*C_Ca3 - (beta*3 + alpha + gamma*a**3)*C3
dC4_dt = alpha*C3 + g*O + omega/b**4*C_Ca4 - (beta*4 + f + gamma*a**4)*C4
dO_dt = f*C4 - g*O
dC_Ca0_dt = beta_b*C_Ca1 + gamma*C0 - (4*alpha_a + omega)*C_Ca0
dC_Ca1_dt = 4*alpha_a*C_Ca0 + 2*beta_b*C_Ca2 + gamma*a*C1 - (beta_b + 3*alpha_a + omega/b)*C_Ca1
dC_Ca2_dt = 3*alpha_a*C_Ca1 + 3*beta_b*C_Ca3 + gamma*a**2*C2 - (beta_b*2 + 2*alpha_a + omega/b**2)*C_Ca2
dC_Ca3_dt = 2*alpha_a*C_Ca2 + 4*beta_b*C_Ca4 + gamma*a**3*C3 - (beta_b*3 + alpha_a + omega/b**3)*C_Ca3
dC_Ca4_dt = alpha_a*C_Ca3 + gprime*O_Ca + gamma*a**4*C4 - (beta_b*4 + fprime + omega/b**4)*C_Ca4
dO_Ca_dt = fprime*C_Ca4 - gprime*O_Ca
i_Ca = i_Ca_max*y*(O + O_Ca) # uA*uF**-1
p_prime_k = P_K/(1 + i_Ca_max/i_Ca_half) # cm*s**-1
i_Ca_K = p_prime_k/(1*1)*y*(O + O_Ca)*V*F**2/(R*T)*(Ki*exp(V*F/(R*T)) - Ko)/(exp(V*F/(R*T)) - 1) # uA*uF**-1

component("L_type Ca current", "y gate")
y_infinity = 0.8/(1 + exp((V + 12.5)/5)) + 0.2
tau_y = (20 + 600/(1 + exp((V + 20)/9.5)))/1000 # s
dy_dt = (y_infinity - y)/tau_y

component("RyR channel")
dP_C1_dt = -k_a_plus*Ca_ss**n*P_C1 + k_a_minus*P_O1
dP_O1_dt = k_a_plus*Ca_ss**n*P_C1 - (k_a_minus*P_O1 + k_b_plus*Ca_ss**m_RyR*P_O1 + k_c_plus*P_O1) + k_b_minus*P_O2 + k_c_minus*P_C2
dP_O2_dt = k_b_plus*Ca_ss**m_RyR*P_O1 - k_b_minus*P_O2
dP_C2_dt = k_c_plus*P_O1 - k_c_minus*P_C2
J_rel = v1*(P_O1 + P_O2)*(Ca_JSR - Ca_ss) # mM*s**-1

component("SERCA2a pump")
fb = (Cai/K_fb)**N_fb
rb = (Ca_NSR/K_rb)**N_rb
J_up = K_SR*(Vmaxf*fb - Vmaxr*rb)/(1 + fb + rb) # mM*s**-1

component("Intracellular Ca fluxes")
J_tr = (Ca_NSR - Ca_JSR)/tau_tr # mM*s**-1
J_xfer = (Ca_ss - Cai)/tau_xfer # mM*s**-1
dHTRPNCa_dt = k_htrpn_plus*Cai*(1 - HTRPNCa) - k_htrpn_minus*HTRPNCa
dLTRPNCa_dt = k_ltrpn_plus*Cai*(1 - LTRPNCa) - k_ltrpn_minus*LTRPNCa
J_HTRPNCa = dHTRPNCa_dt # mM*s**-1
J_LTRPNCa = dLTRPNCa_dt # mM*s**-1
J_trpn = HTRPN_tot*J_HTRPNCa + LTRPN_tot*J_LTRPNCa # mM*s**-1

component("Time independent potassium current")
i_K1 = g_K1*K1_infinity_V*Ko/(Ko + K_mK1)*(V - E_K) # uA*uF**-1

component("Plateau potassium current")
i_Kp = g_Kp*Kp_V*(V - E_K) # uA*uF**-1

component("Intracellular ion concentrations")
dNai_dt = -0*(i_Na + i_Na_b + i_NaCa*3 + i_NaK*3)*A_cap*1/(V_myo*F)
dKi_dt = -0*(i_Ca_K + i_Kr + i_Ks + i_K1 + i_Kp + i_to1 + i_NaK*-2)*A_cap*1/(V_myo*F)
beta_i = 1/(1 + CMDN_tot*K_mCMDN/(K_mCMDN + Cai)**2 + EGTA_tot*K_mEGTA/(K_mEGTA + Cai)**2)
beta_SS = 1/(1 + CMDN_tot*K_mCMDN/(K_mCMDN + Ca_ss)**2 + EGTA_tot*K_mEGTA/(K_mEGTA + Ca_ss)**2)
beta_JSR = 1/(1 + CSQN_tot*K_mCSQN/(K_mCSQN + Ca_JSR)**2)
dCa_ss_dt = beta_SS*(J_rel*V_JSR/V_SS - J_xfer*V_myo/V_SS - i_Ca*A_cap*1/(2*V_SS*F))
dCa_JSR_dt = beta_JSR*(J_tr - J_rel)
dCa_NSR_dt = J_up*V_myo/V_NSR - J_tr*V_JSR/V_NSR
dCai_dt = beta_i*(J_xfer - (J_up + J_trpn) + (2*i_NaCa - (i_p_Ca + i_Ca_b))*A_cap*1/(2*V_myo*F))

component("Membrane")
i_Stim = Conditional(And(Ge(time, stim_start), Le(time, stim_end), Le(time - stim_start - floor((time - stim_start)/stim_period)*stim_period, stim_duration), ), stim_amplitude, 0) # uA*uF**-1
dV_dt = -1*1*(i_Na + i_Ca + i_Ca_K + i_Kr + i_Ks + i_to1 + i_K1 + i_Kp + i_NaCa + i_NaK + i_p_Ca + i_Na_b + i_Ca_b + i_Stim)/C_sc
