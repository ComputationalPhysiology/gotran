# 

# gotran file generated by cellml2gotran from Hinch_et_al_2004.cellml

parameters("Cell geometry",
           V_myo = ScalarParam(25.84e3, unit="um**3"),
           V_SR = ScalarParam(2.098e3, unit="um**3"),
           A_cap = ScalarParam(1.534e4, unit="um**2"))

parameters("Membrane",
           R = ScalarParam(8314.5, unit="mJ*mole**-1*K**-1"),
           T = ScalarParam(295, unit="K"),
           F = ScalarParam(96487, unit="C*mole**-1"))

parameters("CaRU",
           g_D = ScalarParam(0.065, unit="um**3*ms**-1"),
           J_R = ScalarParam(0.02, unit="um**3*ms**-1"),
           J_L = ScalarParam(9.13e-4, unit="um**3*ms**-1"),
           N = 50000)

parameters("Na Ca Exchanger",
           K_mNa = ScalarParam(87.5, unit="mmole*l**-1"),
           K_mCa = ScalarParam(1.38, unit="mmole*l**-1"),
           eta = 0.35,
           k_sat = 0.1,
           g_NCX = ScalarParam(38.5e-3, unit="mmole*l**-1*ms**-1"))

parameters("SERCA",
           g_SERCA = ScalarParam(0.45e-3, unit="mmole*l**-1*ms**-1"),
           K_SERCA = ScalarParam(0.5e-3, unit="mmole*l**-1"))

parameters("Sarcolemmal Ca pump",
           g_pCa = ScalarParam(0.0035e-3, unit="mmole*l**-1*ms**-1"),
           K_mpCa = ScalarParam(0.5e-3, unit="mmole*l**-1"))

parameters("Background Ca current",
           g_CaB = ScalarParam(2.6875e-8, unit="mmole*l**-1*ms**-1*mV**-1"))

parameters("SR Ca leak current",
           g_SRl = ScalarParam(1.8951e-5, unit="ms**-1"))

parameters("Troponin Ca buffer",
           k_m_TRPN = ScalarParam(0.04, unit="ms**-1"),
           k_p_TRPN = ScalarParam(0.04e3, unit="mmole**-1*l*ms**-1"),
           B_TRPN = ScalarParam(70e-3, unit="mmole*l**-1"))

parameters("Calmodulin Ca buffer",
           k_CMDN = ScalarParam(2.382e-3, unit="mmole*l**-1"),
           B_CMDN = ScalarParam(50e-3, unit="mmole*l**-1"))

parameters("Extracellular ion concentrations",
           Na_o = ScalarParam(140, unit="mmole*l**-1"),
           Ca_o = ScalarParam(1, unit="mmole*l**-1"))

parameters("CaRU", "Transitions",
           V_L = ScalarParam(-2, unit="mV"),
           del_VL = ScalarParam(7, unit="mV"),
           phi_L = 2.35,
           t_L = ScalarParam(1, unit="ms"),
           tau_L = ScalarParam(650, unit="ms"),
           tau_R = ScalarParam(2.43, unit="ms"),
           phi_R = 0.05,
           theta_R = 0.012,
           K_RyR = ScalarParam(41e-3, unit="mmole*l**-1"),
           K_L = ScalarParam(0.22e-3, unit="mmole*l**-1"),
           a = 0.0625,
           b = 14,
           c = 0.01,
           d = 100)

states("CaRU", "Reduced states",
       z_1 = 0.98859,
       z_2 = 0.0087302,
       z_3 = 0.0026566)

states("Intracellular ion concentrations",
       TRPN = ScalarParam(0.0636364, unit="mmole*l**-1"),
       Ca_i = ScalarParam(0.0001, unit="mmole*l**-1"),
       Ca_SR = ScalarParam(700e-3, unit="mmole*l**-1"))

parameters("Intracellular ion concentrations",
           Na_i = ScalarParam(10, unit="mmole*l**-1"))

component("Membrane")
V = Conditional(And(Ge(time, 0), Le(time, 200), ), 0, -80) # mV
FVRT = F*V/(R*T)
FVRT_Ca = 2*FVRT

component("CaRU", "DS Calcium Concentrations")
C_cc = Ca_i # mmole*l**-1
C_co = (Ca_i + J_R/g_D*Ca_SR)/(1 + J_R/g_D) # mmole*l**-1
C_oc = Conditional(Gt(abs(FVRT_Ca), 0.000000001), (Ca_i + J_L/g_D*Ca_o*FVRT_Ca*exp(-FVRT_Ca)/(1 - exp(-FVRT_Ca)))/(1 + J_L/g_D*FVRT_Ca/(1 - exp(-FVRT_Ca))), (Ca_i + J_L/g_D*Ca_o)/(1 + J_L/g_D)) # mmole*l**-1
C_oo = Conditional(Gt(abs(FVRT_Ca), 0.000000001), (Ca_i + J_R/g_D*Ca_SR + J_L/g_D*Ca_o*FVRT_Ca*exp(-FVRT_Ca)/(1 - exp(-FVRT_Ca)))/(1 + J_R/g_D + J_L/g_D*FVRT_Ca/(1 - exp(-FVRT_Ca))), (Ca_i + J_R/g_D*Ca_SR + J_L/g_D*Ca_o)/(1 + J_R/g_D + J_L/g_D)) # mmole*l**-1

component("CaRU", "LCC and RyR fluxes")
J_Rco = J_R*(Ca_SR - Ca_i)/(1 + J_R/g_D) # um**3*mmole*l**-1*ms**-1
J_Roo = Conditional(Gt(abs(FVRT_Ca), 0.00001), J_R*(Ca_SR - Ca_i + J_L/g_D*FVRT_Ca/(1 - exp(-FVRT_Ca))*(Ca_SR - Ca_o*exp(-FVRT_Ca)))/(1 + J_R/g_D + J_L/g_D*FVRT_Ca/(1 - exp(-FVRT_Ca))), J_R*(Ca_SR - Ca_i + J_L/g_D*0.00001/(1 - exp(-0.00001))*(Ca_SR - Ca_o*exp(-0.00001)))/(1 + J_R/g_D + J_L/g_D*0.00001/(1 - exp(-0.00001)))) # um**3*mmole*l**-1*ms**-1
J_Loc = Conditional(Gt(abs(FVRT_Ca), 0.00001), J_L*FVRT_Ca/(1 - exp(-FVRT_Ca))*(Ca_o*exp(-FVRT_Ca) - Ca_i)/(1 + J_L/g_D*FVRT_Ca/(1 - exp(-FVRT_Ca))), J_L*0.00001/(1 - exp(-0.00001))*(Ca_o*exp(-0.00001) - Ca_i)/(1 + J_L/g_D*0.00001/(1 - exp(-0.00001)))) # um**3*mmole*l**-1*ms**-1
J_Loo = Conditional(Gt(abs(FVRT_Ca), 0.00001), J_L*FVRT_Ca/(1 - exp(-FVRT_Ca))*(Ca_o*exp(-FVRT_Ca) - Ca_i + J_R/g_D*(Ca_o*exp(-FVRT_Ca) - Ca_SR))/(1 + J_R/g_D + J_L/g_D*FVRT_Ca/(1 - exp(FVRT_Ca))), J_L*0.00001/(1 - exp(-0.00001))*(Ca_o*exp(-0.00001) - Ca_i + J_R/g_D*(Ca_o*exp(-0.00001) - Ca_SR))/(1 + J_R/g_D + J_L/g_D*0.00001/(1 - exp(-0.00001)))) # um**3*mmole*l**-1*ms**-1

component("Na Ca Exchanger")
I_NaCa = g_NCX*(exp(eta*FVRT)*Na_i**3*Ca_o - exp((eta - 1)*FVRT)*Na_o**3*Ca_i)/((Na_o**3 + K_mNa**3)*(Ca_o + K_mCa)*(1 + k_sat*exp((eta - 1)*FVRT))) # mmole*l**-1*ms**-1

component("SERCA")
I_SERCA = g_SERCA*Ca_i**2/(K_SERCA**2 + Ca_i**2) # mmole*l**-1*ms**-1

component("Sarcolemmal Ca pump")
I_pCa = g_pCa*Ca_i/(K_mpCa + Ca_i) # mmole*l**-1*ms**-1

component("Background Ca current")
E_Ca = R*T/(2*F)*log(Ca_o/Ca_i) # mV
I_CaB = g_CaB*(E_Ca - V) # mmole*l**-1*ms**-1

component("SR Ca leak current")
I_SR = g_SRl*(Ca_SR - Ca_i) # mmole*l**-1*ms**-1

component("Troponin Ca buffer")
I_TRPN = k_m_TRPN*(B_TRPN - TRPN) - k_p_TRPN*TRPN*Ca_i # mmole*l**-1*ms**-1

component("Calmodulin Ca buffer")
beta_CMDN = (1 + k_CMDN*B_CMDN/(k_CMDN + Ca_i)**2)**-1

component("CaRU", "Transitions")
expVL = exp((V - V_L)/del_VL)
t_R = 1.17*t_L # ms
alpha_p = expVL/(t_L*(expVL + 1)) # ms**-1
alpha_m = phi_L/t_L # ms**-1
beta_poc = C_oc**2/(t_R*(C_oc**2 + K_RyR**2)) # ms**-1
beta_pcc = Ca_i**2/(t_R*(Ca_i**2 + K_RyR**2)) # ms**-1
beta_m = phi_R/t_R # ms**-1
epsilon_pco = C_co*(expVL + a)/(tau_L*K_L*(expVL + 1)) # ms**-1
epsilon_pcc = Ca_i*(expVL + a)/(tau_L*K_L*(expVL + 1)) # ms**-1
epsilon_m = b*(expVL + a)/(tau_L*(b*expVL + a)) # ms**-1
mu_poc = (C_oc**2 + c*K_RyR**2)/(tau_R*(C_oc**2 + K_RyR**2)) # ms**-1
mu_pcc = (Ca_i**2 + c*K_RyR**2)/(tau_R*(Ca_i**2 + K_RyR**2)) # ms**-1
mu_moc = theta_R*d*(C_oc**2 + c*K_RyR**2)/(tau_R*(d*C_oc**2 + c*K_RyR**2)) # ms**-1
mu_mcc = theta_R*d*(Ca_i**2 + c*K_RyR**2)/(tau_R*(d*Ca_i**2 + c*K_RyR**2)) # ms**-1

component("CaRU", "States")
denom = (alpha_p + alpha_m)*((alpha_m + beta_m + beta_poc)*(beta_m + beta_pcc) + alpha_p*(beta_m + beta_poc)) # ms**-3
y_oc = alpha_p*beta_m*(alpha_p + alpha_m + beta_m + beta_pcc)/denom
y_co = alpha_m*(beta_pcc*(alpha_m + beta_m + beta_poc) + beta_poc*alpha_p)/denom
y_oo = alpha_p*(beta_poc*(alpha_p + beta_m + beta_pcc) + beta_pcc*alpha_m)/denom
y_cc = alpha_m*beta_m*(alpha_m + alpha_p + beta_m + beta_poc)/denom
y_ci = alpha_m/(alpha_p + alpha_m)
y_oi = alpha_p/(alpha_p + alpha_m)
y_ic = beta_m/(beta_pcc + beta_m)
y_io = beta_pcc/(beta_pcc + beta_m)
y_ii = 1 - y_oc - y_co - y_oo - y_cc - y_ci - y_ic - y_oi - y_io

component("CaRU", "Reduced states")
r_1 = y_oc*mu_poc + y_cc*mu_pcc # ms**-1
r_2 = (alpha_p*mu_moc + alpha_m*mu_mcc)/(alpha_p + alpha_m) # ms**-1
r_3 = beta_m*mu_pcc/(beta_m + beta_pcc) # ms**-1
r_4 = mu_mcc # ms**-1
r_5 = y_co*epsilon_pco + y_cc*epsilon_pcc # ms**-1
r_6 = epsilon_m # ms**-1
r_7 = alpha_m*epsilon_pcc/(alpha_p + alpha_m) # ms**-1
r_8 = epsilon_m # ms**-1
z_4 = 1 - z_1 - z_2 - z_3
dz_1_dt = -(r_1 + r_5)*z_1 + r_2*z_2 + r_6*z_3
dz_2_dt = r_1*z_1 - (r_2 + r_7)*z_2 + r_8*z_4
dz_3_dt = r_5*z_1 - (r_6 + r_3)*z_3 + r_4*z_4

component("CaRU", "RyR current")
J_R1 = y_oo*J_Roo + J_Rco*y_co # um**3*mmole*l**-1*ms**-1
J_R3 = J_Rco*beta_pcc/(beta_m + beta_pcc) # um**3*mmole*l**-1*ms**-1
I_RyR = (z_1*J_R1 + z_3*J_R3)*N/V_myo # mmole*l**-1*ms**-1

component("CaRU", "LCC current")
J_L1 = J_Loo*y_oo + J_Loc*y_oc # um**3*mmole*l**-1*ms**-1
J_L2 = J_Loc*alpha_p/(alpha_p + alpha_m) # um**3*mmole*l**-1*ms**-1
I_LCC = (z_1*J_L1 + z_2*J_L2)*N/V_myo # mmole*l**-1*ms**-1

component("Intracellular ion concentrations")
dTRPN_dt = I_TRPN
dCa_i_dt = beta_CMDN*(I_LCC + I_RyR - I_SERCA + I_SR + I_NaCa - I_pCa + I_CaB + I_TRPN)
dCa_SR_dt = V_myo/V_SR*(-I_RyR + I_SERCA - I_SR)
CaSR_plot = Ca_SR*V_SR/V_myo # mmole*l**-1

