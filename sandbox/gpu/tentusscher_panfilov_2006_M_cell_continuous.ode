# Alternans and spiral breakup in a human ventricular tissue model
#
# ABSTRACT: Ventricular fibrillation (VF) is one of the main causes of death in
# the Western world. According to one hypothesis, the chaotic excitation dynamics
# during VF are the result of dynamical instabilities in action potential
# duration (APD) the occurrence of which requires that the slope of the APD
# restitution curve exceeds 1. Other factors such as electrotonic coupling and
# cardiac memory also determine whether these instabilities can develop. In this
# paper we study the conditions for alternans and spiral breakup in human cardiac
# tissue. Therefore, we develop a new version of our human ventricular cell
# model, which is based on recent experimental measurements of human APD
# restitution and includes a more extensive description of intracellular calcium
# dynamics. We apply this model to study the conditions for electrical
# instability in single cells, for reentrant waves in a ring of cells, and for
# reentry in two-dimensional sheets of ventricular tissue. We show that an
# important determinant for the onset of instability is the recovery dynamics of
# the fast sodium current. Slower sodium current recovery leads to longer periods
# of spiral wave rotation and more gradual conduction velocity restitution, both
# of which suppress restitution-mediated instability. As a result, maximum
# restitution slopes considerably exceeding 1 (up to 1.5) may be necessary for
# electrical instability to occur. Although slopes necessary for the onset of
# instabilities found in our study exceed 1, they are within the range of
# experimentally measured slopes. Therefore, we conclude that steep APD
# restitution-mediated instability is a potential mechanism for VF in the human
# heart.
#
# The original paper reference is cited below:
#
# Alternans and spiral breakup in a human ventricular tissue model, K.H.W.J. ten
# Tusscher, A.V. Panfilov, Sep 2006,American Journal of Physiology, Heart and
# Circulatory Physiology, 291 3, H1088-1100.PubMed ID: 16565318
#

# gotran file generated by cellml2gotran from ten_tusscher_model_2006_IK1Ko_M_units.cellml

states("Membrane",
       V = [-85.423])

states("Rapid time dependent potassium current",
       Xr1 = 0.0165,
       Xr2 = 0.473)

states("Slow time dependent potassium current xs gate",
       Xs = 0.0174)

states("Fast sodium current m gate",
       m = 0.00165)

states("Fast sodium current h gate",
       h = 0.749)

states("Fast sodium current j gate",
       j = 0.6788)

states("L type ca current d gate",
       d = 3.288e-5)

states("L type ca current f gate",
       f = 0.7026)

states("L type ca current f2 gate",
       f2 = 0.9526)

states("L type ca current fcass gate",
       fCass = 0.9942)

states("Transient outward current s gate",
       s = 0.999998)

states("Transient outward current r gate",
       r = 2.347e-8)

states("Calcium dynamics",
       R_prime = 0.8978,
       Ca_i = 0.000153,
       Ca_SR = 4.272,
       Ca_ss = 0.00042)

states("Sodium dynamics",
       Na_i = 10.132)

states("Potassium dynamics",
       K_i = 138.52)

parameters("Reversal potentials",
           P_kna = 0.03)

parameters("Inward rectifier potassium current",
           g_K1 = 5.405)

parameters("Rapid time dependent potassium current",
           g_Kr = 0.153)

parameters("Slow time dependent potassium current",
           g_Ks = 0.098)

parameters("Fast sodium current",
           g_Na = 14.838)

parameters("Sodium background current",
           g_bna = 0.00029)

parameters("L type ca current",
           g_CaL = 0.0000398)

parameters("Calcium background current",
           g_bca = 0.000592)

parameters("Transient outward current",
           g_to = 0.294)

parameters("Sodium potassium pump current",
           P_NaK = 2.724,
           K_mk = 1,
           K_mNa = 40)

parameters("Sodium calcium exchanger current",
           K_NaCa = 1000,
           K_sat = 0.1,
           alpha = 2.5,
           gamma = 0.35,
           Km_Ca = 1.38,
           Km_Nai = 87.5)

parameters("Calcium pump current",
           g_pCa = 0.1238,
           K_pCa = 0.0005)

parameters("Potassium pump current",
           g_pK = 0.0146)

parameters("Calcium dynamics",
           Ca_o = 2,
           k1_prime = 0.15,
           k2_prime = 0.045,
           k3 = 0.06,
           k4 = 0.005,
           EC = 1.5,
           max_sr = 2.5,
           min_sr = 1,
           V_rel = 0.102,
           V_xfer = 0.0038,
           K_up = 0.00025,
           V_leak = 0.00036,
           Vmax_up = 0.006375,
           Buf_c = 0.2,
           K_buf_c = 0.001,
           Buf_sr = 10,
           K_buf_sr = 0.3,
           Buf_ss = 0.4,
           K_buf_ss = 0.00025,
           V_sr = 0.001094,
           V_ss = 0.00005468)

parameters("Sodium dynamics",
           Na_o = 140)

parameters("Membrane",
           R = 8314.472,
           T = 310,
           F = 96485.3415,
           Cm = 0.185,
           V_c = 0.016404,
           stim_start = 1,
           stim_duration = 1,
           stim_amplitude = 52)

parameters("Potassium dynamics",
           K_o = 5.4)

component("Reversal potentials")
E_Na = R*T/F*log(Na_o/Na_i)
E_K = R*T/F*log(K_o/K_i)
E_Ks = R*T/F*log((K_o + P_kna*Na_o)/(K_i + P_kna*Na_i))
E_Ca = 0.5*R*T/F*log(Ca_o/Ca_i)

component("Inward rectifier potassium current")
alpha_K1 = 0.1/(one + exp(0.06*(V - E_K - 200)))
beta_K1 = (three*exp(0.0002*(V - E_K + 100)) + exp(0.1*(V - E_K - ten)))/(one + exp(-0.5*(V - E_K)))
xK1_inf = alpha_K1/(alpha_K1 + beta_K1)
i_K1 = g_K1*xK1_inf*sqrt(K_o/5.4)*(V - E_K)

component("Rapid time dependent potassium current")
i_Kr = g_Kr*sqrt(K_o/5.4)*Xr1*Xr2*(V - E_K)

xr1_inf = one/(one + exp((-26 - V)/7))
alpha_xr1 = 450/(one + exp((-45 - V)/ten))
beta_xr1 = 6/(one + exp((V + 30)/11.5))
tau_xr1 = one*alpha_xr1*beta_xr1

xr2_inf = one/(one + exp((V + 88)/24))
alpha_xr2 = three/(one + exp((-60 - V)/20))
beta_xr2 = 1.12/(one + exp((V - 60)/20))
tau_xr2 = one*alpha_xr2*beta_xr2

component("Slow time dependent potassium current")
i_Ks = g_Ks*Xs**two*(V - E_Ks)

component("Slow time dependent potassium current xs gate")
xs_inf = one/(one + exp((-five - V)/14))
alpha_xs = 1400/sqrt(one + exp((five - V)/6))
beta_xs = one/(one + exp((V - 35)/15))
tau_xs = one*alpha_xs*beta_xs + 80

component("Fast sodium current")
i_Na = g_Na*m**three*h*j*(V - E_Na)

component("Fast sodium current m gate")
m_inf = one/(one + exp((-56.86 - V)/9.03))**two
alpha_m = one/(one + exp((-60 - V)/five))
beta_m = 0.1/(one + exp((V + 35)/five)) + 0.1/(one + exp((V - 50)/200))
tau_m = one*alpha_m*beta_m

component("Fast sodium current h gate")
h_inf = one/(one + exp((V + 71.55)/7.43))**two
alpha_h = ContinuousConditional(Lt(V, -40), 0.057*exp(-((V + 80))/6.8), 0)
beta_h = ContinuousConditional(Lt(V, -40), 2.7*exp(0.079*V) + 310000*exp(0.3485*V), 0.77/(0.13*(one + exp((V + 10.66)/-11.1))))
#alpha_h = Conditional(Lt(V, -40), 0.057*exp(-(V + 80)/6.8), 0)
#beta_h = Conditional(Lt(V, -40), 2.7*exp(0.079*V) + 310000*exp(0.3485*V), 0.77/(0.13*(one + exp((V + 10.66)/-11.1))))
tau_h = one/(alpha_h + beta_h)

component("Fast sodium current j gate")
j_inf = one/(one + exp((V + 71.55)/7.43))**two
alpha_j = ContinuousConditional(Lt(V, -40), ((-25428*exp(0.2444*V) - 6.948e-6*exp(-0.04391*V))*(V + 37.78))/one/(one + exp(0.311*(V + 79.23))), 0)
beta_j = ContinuousConditional(Lt(V, -40), (0.02424*exp(-0.01052*V))/(one + exp(-0.1378*(V + 40.14))), (0.6*exp(0.057*V))/(one + exp(-0.1*(V + 32))))
#alpha_j = Conditional(Lt(V, -40), (-25428*exp(0.2444*V) - 6.948e-6*exp(-0.04391*V))*(V + 37.78)/one/(one + exp(0.311*(V + 79.23))), 0)
#beta_j = Conditional(Lt(V, -40), 0.02424*exp(-0.01052*V)/(one + exp(-0.1378*(V + 40.14))), 0.6*exp(0.057*V)/(one + exp(-0.1*(V + 32))))
tau_j = one/(alpha_j + beta_j)

component("Sodium background current")
i_b_Na = g_bna*(V - E_Na)

component("L type ca current")
i_CaL = g_CaL*d*f*f2*fCass*four*(V - 15)*F**two/(R*T)*(0.25*Ca_ss*exp(two*(V - 15)*F/(R*T)) - Ca_o)/(exp(two*(V - 15)*F/(R*T)) - one)

component("L type ca current d gate")
d_inf = one/(one + exp((-8 - V)/7.5))
alpha_d = 1.4/(one + exp((-35 - V)/13)) + 0.25
beta_d = 1.4/(one + exp((V + five)/five))
gamma_d = one/(one + exp((50 - V)/20))
tau_d = one*alpha_d*beta_d + gamma_d

component("L type ca current f gate")
f_inf = one/(one + exp((V + 20)/7))
tau_f = 1102.5*exp(-((V + 27)**two)/225) + 200/(one + exp((13 - V)/ten)) + 180/(one + exp((V + 30)/ten)) + 20

component("L type ca current f2 gate")
f2_inf = 0.67/(one + exp((V + 35)/7)) + 0.33
tau_f2 = 562*exp(-((V + 27)**two)/240) + 31/(one + exp((25 - V)/ten)) + 80/(one + exp((V + 30)/ten))

component("L type ca current fcass gate")
fCass_inf = 0.6/(one + (Ca_ss/0.05)**two) + 0.4
tau_fCass = 80/(one + (Ca_ss/0.05)**two) + two

component("Calcium background current")
i_b_Ca = g_bca*(V - E_Ca)

component("Transient outward current")
i_to = g_to*r*s*(V - E_K)

component("Transient outward current s gate")
s_inf = one/(one + exp((V + 20)/five))
tau_s = 85*exp(-((V + 45)**two)/320) + five/(one + exp((V - 20)/five)) + three

component("Transient outward current r gate")
r_inf = one/(one + exp((20 - V)/6))
tau_r = 9.5*exp(-((V + 40)**two)/1800) + 0.8

component("Sodium potassium pump current")
i_NaK = P_NaK*K_o/(K_o + K_mk)*Na_i/(Na_i + K_mNa)/(one + 0.1245*exp(-0.1*V*F/(R*T)) + 0.0353*exp(-V*F/(R*T)))

component("Sodium calcium exchanger current")
i_NaCa = K_NaCa*(exp(gamma*V*F/(R*T))*Na_i**three*Ca_o - exp((gamma - one)*V*F/(R*T))*Na_o**three*Ca_i*alpha)/((Km_Nai**three + Na_o**three)*(Km_Ca + Ca_o)*(one + K_sat*exp((gamma - one)*V*F/(R*T))))

component("Calcium pump current")
i_p_Ca = g_pCa*Ca_i/(Ca_i + K_pCa)

component("Potassium pump current")
i_p_K = g_pK*(V - E_K)/(one + exp((25 - V)/5.98))

component("Calcium dynamics")
i_up = Vmax_up/(one + K_up**two/Ca_i**two)
i_leak = V_leak*(Ca_SR - Ca_i)
i_xfer = V_xfer*(Ca_ss - Ca_i)
kcasr = max_sr - (max_sr - min_sr)/(one + (EC/Ca_SR)**two)
Ca_i_bufc = one/(one + Buf_c*K_buf_c/(Ca_i + K_buf_c)**two)
Ca_sr_bufsr = one/(one + Buf_sr*K_buf_sr/(Ca_SR + K_buf_sr)**two)
Ca_ss_bufss = one/(one + Buf_ss*K_buf_ss/(Ca_ss + K_buf_ss)**two)
k1 = k1_prime/kcasr
k2 = k2_prime*kcasr
O = k1*Ca_ss**two*R_prime/(k3 + k1*Ca_ss**two)
i_rel = V_rel*O*(Ca_SR - Ca_ss)

component("Sodium dynamics")

component("Membrane")
i_Stim = -stim_amplitude*ContinuousConditional(Ge(time, stim_start), 1, 0, 0.2)*ContinuousConditional(Le(time, stim_start + stim_duration), 1, 0, 0.2)
#i_Stim = Conditional(And(Ge(time - floor(time/stim_period)*stim_period, stim_start), Le(time - floor(time/stim_period)*stim_period, stim_start + stim_duration), ), -stim_amplitude, 0)

component("Potassium dynamics")

comment("The ODE system: 19 states")
dV_dt = -(i_K1 + i_to + i_Kr + i_Ks + i_CaL + i_NaK + i_Na + i_b_Na + i_NaCa + i_b_Ca + i_p_K + i_p_Ca + i_Stim)
dXr1_dt = (xr1_inf - Xr1)/tau_xr1
dXr2_dt = (xr2_inf - Xr2)/tau_xr2
dXs_dt = (xs_inf - Xs)/tau_xs
dm_dt = (m_inf - m)/tau_m
dh_dt = (h_inf - h)/tau_h
dj_dt = (j_inf - j)/tau_j
dd_dt = (d_inf - d)/tau_d
df_dt = (f_inf - f)/tau_f
df2_dt = (f2_inf - f2)/tau_f2
dfCass_dt = (fCass_inf - fCass)/tau_fCass
ds_dt = (s_inf - s)/tau_s
dr_dt = (r_inf - r)/tau_r
dR_prime_dt = -k2*Ca_ss*R_prime + k4*(one - R_prime)
dCa_i_dt = Ca_i_bufc*((i_leak - i_up)*V_sr/V_c + i_xfer - one*(i_b_Ca + i_p_Ca - two*i_NaCa)*Cm/(two*one*V_c*F))
dCa_SR_dt = Ca_sr_bufsr*(i_up - (i_rel + i_leak))
dCa_ss_dt = Ca_ss_bufss*(-one*i_CaL*Cm/(two*one*V_ss*F) + i_rel*V_sr/V_ss - i_xfer*V_c/V_ss)
dNa_i_dt = -one*(i_Na + i_b_Na + three*i_NaK + three*i_NaCa)/(one*V_c*F)*Cm
dK_i_dt = -one*(i_K1 + i_to + i_Kr + i_Ks + i_p_K + i_Stim - two*i_NaK)/(one*V_c*F)*Cm
